{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/state/ecs.js","webpack:///./node_modules/lodash/lodash.js","webpack:///./src/lib/graphics.js","webpack:///../node_modules/camelcase/index.js","webpack:///../src/Properties/Property.js","webpack:///../src/Properties/SimpleProperty.js","webpack:///../src/Properties/EntityProperty.js","webpack:///../src/Properties/EntityArrayProperty.js","webpack:///../src/Properties/PropertyFactory.js","webpack:///../src/Component.js","webpack:///../src/registries/ComponentRegistry.js","webpack:///../node_modules/deepmerge/dist/cjs.js","webpack:///../src/PrefabComponent.js","webpack:///../src/Prefab.js","webpack:///../src/registries/PrefabRegistry.js","webpack:///../node_modules/nanoid/non-secure/index.js","webpack:///../src/EntityEvent.js","webpack:///../src/Entity.js","webpack:///../src/registries/EntityRegistry.js","webpack:///../src/Query.js","webpack:///../src/registries/QueryRegistry.js","webpack:///../src/Engine.js","webpack:///./src/lib/canvas.js","webpack:///./src/components/Position.js","webpack:///./src/components/Appearance.js","webpack:///./src/components/Name.js","webpack:///./src/components/IsBlocking.js","webpack:///./src/components/CanLegend.js","webpack:///./src/components/Description.js","webpack:///./src/components/Layer400.js","webpack:///./node_modules/pathfinding/src/core/DiagonalMovement.js","webpack:///./src/lib/adventure-log.js","webpack:///./src/components/IsInFov.js","webpack:///./src/components/Brain.js","webpack:///./src/components/Health.js","webpack:///./src/state/events.js","webpack:///./src/components/Blood.js","webpack:///./src/components/Layer100.js","webpack:///./src/components/Layer300.js","webpack:///./node_modules/pathfinding/src/core/Util.js","webpack:///./src/components/CanDijkstra.js","webpack:///./src/components/IsRevealed.js","webpack:///./src/components/IsOpaque.js","webpack:///./src/components/MoveTo.js","webpack:///./node_modules/pathfinding/src/core/Heuristic.js","webpack:///./node_modules/heap/index.js","webpack:///./node_modules/pathfinding/src/finders/JumpPointFinderBase.js","webpack:///./src/components/Animate.js","webpack:///./src/components/CanAbsorb.js","webpack:///./src/components/isBoneless.js","webpack:///./node_modules/pathfinding/src/core/Node.js","webpack:///./node_modules/pathfinding/src/finders/AStarFinder.js","webpack:///./node_modules/pathfinding/src/finders/BiAStarFinder.js","webpack:///./node_modules/pathfinding/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/state/cache.js","webpack:///./src/components/IsDead.js","webpack:///./src/components/Soilage.js","webpack:///./src/prefabs/bonfire.js","webpack:///./src/prefabs/char.js","webpack:///./src/prefabs/floor.js","webpack:///./src/prefabs/fountain.js","webpack:///./src/prefabs/gelatinous-cube.js","webpack:///./src/prefabs/goblin.js","webpack:///./src/prefabs/player.js","webpack:///./src/prefabs/skeleton.js","webpack:///./src/prefabs/wall.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/pathfinding/src/PathFinding.js","webpack:///./node_modules/heap/lib/heap.js","webpack:///./node_modules/pathfinding/src/core/Grid.js","webpack:///./node_modules/pathfinding/src/finders/BestFirstFinder.js","webpack:///./node_modules/pathfinding/src/finders/BreadthFirstFinder.js","webpack:///./node_modules/pathfinding/src/finders/DijkstraFinder.js","webpack:///./node_modules/pathfinding/src/finders/BiBestFirstFinder.js","webpack:///./node_modules/pathfinding/src/finders/BiBreadthFirstFinder.js","webpack:///./node_modules/pathfinding/src/finders/BiDijkstraFinder.js","webpack:///./node_modules/pathfinding/src/finders/IDAStarFinder.js","webpack:///./node_modules/pathfinding/src/finders/JumpPointFinder.js","webpack:///./node_modules/pathfinding/src/finders/JPFNeverMoveDiagonally.js","webpack:///./node_modules/pathfinding/src/finders/JPFAlwaysMoveDiagonally.js","webpack:///./node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfNoObstacles.js","webpack:///./node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfAtMostOneObstacle.js","webpack:///./src/lib/grid.js","webpack:///./src/lib/dijkstra.js","webpack:///./src/queries/index.js","webpack:///./src/lib/pathfinding.js","webpack:///./src/systems/movement.js","webpack:///./src/lib/process-user-input.js","webpack:///./src/lib/dungeon.js","webpack:///./src/initializers/dungeon-level.init.js","webpack:///./src/systems/ai.js","webpack:///./src/lib/fov.js","webpack:///./src/gui/Terminal.js","webpack:///./src/systems/render.js","webpack:///./src/index.js","webpack:///./src/systems/fov.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ecs","Engine","cache","Cache","registerComponent","Animate","Appearance","Blood","Brain","CanAbsorb","CanDijkstra","CanLegend","Description","Health","isBoneless","IsBlocking","IsDead","IsInFov","IsOpaque","IsRevealed","Layer100","Layer300","Layer400","MoveTo","Name","Position","Soilage","registerPrefab","BonfirePrefab","CharPrefab","FloorPrefab","FountainPrefab","GelatinousCubePrefab","GoblinPrefab","PlayerPrefab","SkeletonPrefab","WallPrefab","gameState","userInput","playerTurn","turn","adventureLog","innerMonologue","text","player","createPrefab","loadGame","data","JSON","parse","localStorage","getItem","entities","all","destroy","deserialize","getEntity","playerId","console","log","saveGame","gameSaveData","serialize","id","setItem","stringify","window","snail","FUNC_ERROR_TEXT","PLACEHOLDER","wrapFlags","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsBreakRange","rsMathOpRange","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsSeq","join","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","global","freeSelf","self","root","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","types","require","binding","e","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","apply","func","thisArg","args","length","arrayAggregator","array","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","Array","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","undefined","basePropertyOf","baseReduce","current","baseTimes","baseUnary","baseValues","props","cacheHas","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","deburrLetter","escapeHtmlChar","escapeStringChar","chr","hasUnicode","string","test","mapToArray","map","size","forEach","overArg","transform","arg","replaceHolders","setToArray","set","setToPairs","stringSize","lastIndex","unicodeSize","stringToArray","match","unicodeToArray","split","asciiToArray","unescapeHtmlChar","_","runInContext","context","uid","defaults","pick","Date","Error","Math","String","TypeError","arrayProto","funcProto","objectProto","coreJsData","funcToString","toString","idCounter","maskSrcKey","exec","keys","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","replace","Buffer","Uint8Array","allocUnsafe","getPrototype","getPrototypeOf","objectCreate","propertyIsEnumerable","splice","spreadableSymbol","isConcatSpreadable","symIterator","iterator","symToStringTag","getNative","ctxClearTimeout","clearTimeout","ctxNow","now","ctxSetTimeout","setTimeout","nativeCeil","ceil","nativeFloor","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","isFinite","nativeJoin","nativeKeys","nativeMax","max","nativeMin","min","nativeNow","nativeParseInt","nativeRandom","random","nativeReverse","reverse","DataView","Map","Promise","Set","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","proto","isObject","baseLodash","chainAll","this","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entries","clear","entry","ListCache","MapCache","SetCache","__data__","add","Stack","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","push","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","baseEach","baseAssign","copyObject","baseAt","paths","skip","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","constructor","input","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","Ctor","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","symbol","initCloneByTag","stacked","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","outer","computed","valuesIndex","templateSettings","pop","getMapData","pairs","LARGE_ARRAY_SIZE","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","isSymbol","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","isFunction","baseGet","path","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInvoke","parent","last","baseIsArguments","baseIsEqual","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","message","convert","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","COMPARE_PARTIAL_FLAG","baseIsNative","baseIteratee","identity","baseMatchesProperty","baseMatches","baseKeys","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","mergeFunc","safeGet","newValue","isTyped","isArrayLikeObject","isPlainObject","toPlainObject","baseMergeDeep","baseNth","baseOrderBy","iteratees","orders","getIteratee","comparer","sort","baseSortBy","objCriteria","criteria","othCriteria","ordersLength","compareAscending","order","compareMultiple","basePickBy","baseSet","basePullAll","indexOf","basePullAt","indexes","previous","baseUnset","baseRepeat","baseRest","start","setToString","overRest","baseSample","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","end","baseSome","baseSortedIndex","retHighest","low","high","MAX_ARRAY_LENGTH","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","slice","copy","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","iterable","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","createCtor","arguments","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","wrapper","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","newHolders","createRecurry","fn","reorder","createInverter","toIteratee","baseInverter","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createRange","step","toFinite","baseRange","createRelationalOperation","toNumber","wrapFunc","isCurry","newData","setData","setWrapToString","createRound","precision","toInteger","pair","noop","createToPairs","baseToPairs","createWrap","srcBitmask","newBitmask","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrLength","arrValue","flatten","otherFunc","type","getValue","stubArray","hasPath","hasFunc","isLength","ArrayBuffer","resolve","ctorString","isMaskable","stubFalse","otherArgs","oldArray","shortOut","reference","details","insertWrapDetails","updateWrapDetails","getWrapDetails","count","lastCalled","stamp","remaining","rand","memoize","memoizeCapped","charCodeAt","quote","subString","clone","difference","differenceBy","differenceWith","findIndex","findLastIndex","head","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","group","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","chain","interceptor","wrapperAt","countBy","find","findLast","forEachRight","groupBy","invokeMap","keyBy","partition","sortBy","before","bindKey","WRAP_BIND_FLAG","debounce","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","time","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","cancel","flush","defer","delay","resolver","memoized","negate","overArgs","transforms","funcsLength","partial","partialRight","rearg","gt","gte","isError","isInteger","isNumber","isString","lt","lte","toArray","next","done","iteratorToArray","remainder","toLength","isBinary","assign","assignIn","assignInWith","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","CLONE_DEEP_FLAG","basePick","pickBy","prop","toPairs","toPairsIn","camelCase","word","toLowerCase","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","toUpperCase","pattern","hasUnicodeWord","unicodeWords","asciiWords","attempt","bindAll","methodNames","flow","flowRight","method","methodOf","mixin","over","overEvery","overSome","basePropertyDeep","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","after","castArray","chunk","compact","concat","cond","conforms","baseConforms","properties","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","fill","baseFill","filter","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","mapValues","matches","matchesProperty","nthArg","omitBy","once","orderBy","propertyOf","pullAllBy","pullAllWith","reject","remove","rest","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","limit","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","isArrLike","unary","uniq","uniqBy","uniqWith","unset","update","updateWith","valuesIn","wrap","zipObject","zipObjectDeep","entriesIn","extend","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","target","position","escape","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","baseInRange","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isMatch","isMatchWith","isNaN","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lastIndexOf","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","padStart","radix","floating","temp","reduce","reduceRight","repeat","sample","some","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","template","settings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","times","toLower","toSafeInteger","toUpper","trim","trimEnd","trimStart","truncate","omission","search","substring","newEnd","unescape","uniqueId","prefix","each","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","dir","isRight","view","getView","iterLength","takeCount","iterIndex","commit","wrapped","toJSON","colors","defaultColor","defaultBGColor","revealedColor","inventoryHighlight","damage","blood","torchLight","campfire","fountain","armor","bandage","chest","currency","multipleItems","potion","weapon","hudText","healthBar","wall","cavernFloor","stairsUp","stairsDown","goblin","rat","skeleton","gelatinousCube","defaultChar","corpse","item","track","pascalCase","x","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","component","v","entity","Proxy","Reflect","old","deleteProperty","len","proxy","ref","EntityProperty","EntityArrayProperty","SimpleProperty","Boolean","ob","handlerName","camelcase","evt","initialValue","initialProperties","_defaultPropertyValue","PropertyFactory","Component","_getType","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","mergeObject","destination","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","prev","overwrite","componentDef","initialProps","arrComps","accessor","initialCompProps","registered","prefab","Prefab","inherit","componentData","def","PrefabComponent","PrefabRegistry","nameOrClassOrPrefab","urlAlphabet","writable","components","getAccessor","hasType","nestedComponent","typeOrClass","attach","configurable","allowMultiple","isComponent","instance","v2","EntityEvent","Entity","refs","json","entityData","createOrGetById","any","none","hasAny","hasAll","hasNone","query","Query","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","prefabs","nameOrClass","queries","deserializeEntity","canvas","ctx","pixelRatio","devicePixelRatio","document","querySelector","getContext","layers","ground","tracks","items","abovePlayer","sky","grid","width","height","y","hud","hud2","menu","menu2","menu3","calculatedFontSize","innerWidth","cellWidth","cellHeight","fontSize","style","cssText","font","textAlign","textBaseline","drawBackground","color","alpha","globalAlpha","fillStyle","fillRect","drawChar","char","pos","fgA","rotate","fillText","newx","newy","save","translate","PI","restore","drawCell","fg","bg","bgA","appearance","background","bgColor","charColor","clearCanvas","clearRect","clearCell","pxToCell","ev","bounds","getBoundingClientRect","relativeX","clientX","left","relativeY","clientY","top","trunc","px","py","currentColor","layer","nomen","soiled","dead","handle","innerLog","default","Always","Never","IfAtMostOneObstacle","OnlyWhenNoObstacles","ai","amount","CLEAN","OBSERVE","SET_START_TIME","SOIL","TAKE_DAMAGE","backtrace","node","x0","y0","x1","y1","sx","sy","dx","dy","err","e2","abs","line","biBacktrace","nodeA","nodeB","pathA","pathB","pathLength","a","b","sqrt","expandPath","coord0","coord1","interpolated","interpolatedLen","j","expanded","smoothenPath","newPath","coord","testCoord","blocked","isWalkableAt","lastValidCoord","compressPath","lx","ly","ldx","ldy","sq","compressed","relative","manhattan","euclidean","octile","F","SQRT2","chebyshev","Heap","Util","Heuristic","JumpPointFinderBase","opt","heuristic","trackJumpRecursion","findPath","startX","startY","endX","endY","openList","f","startNode","getNodeAt","endNode","g","opened","empty","closed","_identifySuccessors","neighbors","neighbor","jumpPoint","jx","jy","ng","jumpNode","_findNeighbors","_jump","h","updateItem","startTime","duration","animation","stops","canAbsorb","walkable","DiagonalMovement","AStarFinder","allowDiagonal","dontCrossCorners","weight","diagonalMovement","getNeighbors","BiAStarFinder","cmp","startOpenList","endOpenList","webpackPolyfill","deprecate","children","playerReverse","entitiesAtLocation","acc","dijkstraMaps","validate","operation","warn","fireEvent","sourceName","sourceEntityId","originalModule","defaultCmp","heapify","heappop","heappush","heappushpop","heapreplace","insort","nlargest","nsmallest","_siftdown","_siftup","lo","hi","lastelt","returnitem","_ref","_i","_len","_ref1","_results","_results1","_j","elem","los","startpos","newitem","parentpos","childpos","endpos","rightpos","nodes","pushpop","peek","contains","heap","insert","front","Node","Grid","width_or_matrix","matrix","_buildNodes","isInside","setWalkableAt","s0","d0","s1","d1","s2","d2","s3","d3","thisNodes","newGrid","newNodes","BestFirstFinder","orig","BreadthFirstFinder","shift","DijkstraFinder","BiBestFirstFinder","BiBreadthFirstFinder","by","BiDijkstraFinder","IDAStarFinder","trackRecursion","timeLimit","route","getTime","cutoff","k","neighbour","neighbours","retainCount","tested","cutOff","JPFNeverMoveDiagonally","JPFAlwaysMoveDiagonally","JPFMoveDiagonallyIfNoObstacles","JPFMoveDiagonallyIfAtMostOneObstacle","neighborNodes","neighborNode","isNextWalkable","isTopWalkable","isBottomWalkable","isRightWalkable","isLeftWalkable","CARDINAL","DIAGONAL","ALL","toCell","cellOrId","cell","idToCell","toLocId","locId","cellToId","rectangle","tileProps","hasWalls","tiles","x2","y2","yi","xi","center","coords","direction","points","candidate","getNeighborIds","dijkstra","goals","weights","frontier","distance","idx","neighborId","neighborIds","readSet","dscore","goal","aiEntities","createQuery","aiEntitiesInFov","inFovEntities","layer100Entities","layer300Entities","layer400Entities","legendEntities","movableEntities","opaqueEntities","drunkenWalk","baseMatrix","aStar","readObj","eId","isBlocking","PF","kill","currentBackground","splatterBlood","splatterSelf","locIds","bumpAttack","targetEntity","health","hit","movement","mPos","moveTo","mx","my","blockers","entitiesAtLoc","eid","potentialBlocker","blocker","brain","soilage","cEntity","absorb","addSet","playerDijkstraMap","dMap","coeff","dR","dijkstraReverse","addObj","processUserInput","payload","digHorizontalPassage","sprite","digVerticalPassage","digDrunkenWalk","loc","mapX","mapY","isOnMapEdge","initDungeonLevel","dungeon","maxRoomCount","minRoomSize","maxRoomSize","blocking","opaque","rooms","roomTiles","rw","rh","rx","ry","room","rect2","rect1","prevRoom","curr","processedTiles","digLoc","openTileIds","tileId","generateDungeon","currTile","moveToPlayer","newLoc","moveAwayFromPlayer","dMapName","score","nextPosition","dScore","walkDijkstra","meander","frequency","stickiness","octantTransforms","xx","xy","yx","yy","createFOV","originX","originY","radius","visible","blockingLocations","isOpaque","reveal","castShadows","row","newStart","deltaY","deltaX","currentX","currentY","leftSlope","rightSlope","octant","fov","cell1","cell2","pow","Terminal","templates","fadeY","isDead","percent","bars","tempt","draw","cursor","tp","drawCellIfAble","isInFov","isRevealed","AdventureLog","InnerMonologue","Legend","render","playerDijkstra","drawNamePlates","gameTick","FOV","addEventListener","classList","initGame","requestAnimationFrame","gameLoop","onclick"],"mappings":"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","file":"main.28f3d8ec2306dd4f430c.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 66);\n","import { Engine } from \"geotic\";\nimport Cache from \"./cache\";\n\nimport Animate from \"../components/Animate\";\nimport Appearance from \"../components/Appearance\";\nimport Blood from \"../components/Blood\";\nimport Brain from \"../components/Brain\";\nimport CanAbsorb from \"../components/CanAbsorb\";\nimport CanDijkstra from \"../components/CanDijkstra\";\nimport CanLegend from \"../components/CanLegend\";\nimport Description from \"../components/Description\";\nimport Health from \"../components/Health\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport isBoneless from \"../components/isBoneless\";\nimport IsDead from \"../components/IsDead\";\nimport IsInFov from \"../components/IsInFov\";\nimport IsOpaque from \"../components/IsOpaque\";\nimport IsRevealed from \"../components/IsRevealed\";\nimport Layer100 from \"../components/Layer100\";\nimport Layer300 from \"../components/Layer300\";\nimport Layer400 from \"../components/Layer400\";\nimport MoveTo from \"../components/MoveTo\";\nimport Name from \"../components/Name\";\nimport Position from \"../components/Position\";\nimport Soilage from \"../components/Soilage\";\n\nimport BonfirePrefab from \"../prefabs/bonfire\";\nimport CharPrefab from \"../prefabs/char\";\nimport FloorPrefab from \"../prefabs/floor\";\nimport FountainPrefab from \"../prefabs/fountain\";\nimport GelatinousCubePrefab from \"../prefabs/gelatinous-cube\";\nimport GoblinPrefab from \"../prefabs/goblin\";\nimport PlayerPrefab from \"../prefabs/player\";\nimport SkeletonPrefab from \"../prefabs/skeleton\";\nimport WallPrefab from \"../prefabs/wall\";\n\nconst ecs = new Engine();\nexport const cache = new Cache();\n\n// all Components and Prefabs must be `registered` by the engine\necs.registerComponent(Animate);\necs.registerComponent(Appearance);\necs.registerComponent(Blood);\necs.registerComponent(Brain);\necs.registerComponent(CanAbsorb);\necs.registerComponent(CanDijkstra);\necs.registerComponent(CanLegend);\necs.registerComponent(Description);\necs.registerComponent(Health);\necs.registerComponent(isBoneless);\necs.registerComponent(IsBlocking);\necs.registerComponent(IsDead);\necs.registerComponent(IsInFov);\necs.registerComponent(IsOpaque);\necs.registerComponent(IsRevealed);\necs.registerComponent(Layer100);\necs.registerComponent(Layer300);\necs.registerComponent(Layer400);\necs.registerComponent(MoveTo);\necs.registerComponent(Name);\necs.registerComponent(Position);\necs.registerComponent(Soilage);\n\necs.registerPrefab(BonfirePrefab);\necs.registerPrefab(CharPrefab);\necs.registerPrefab(FloorPrefab);\necs.registerPrefab(FountainPrefab);\necs.registerPrefab(GelatinousCubePrefab);\necs.registerPrefab(GoblinPrefab);\necs.registerPrefab(PlayerPrefab);\necs.registerPrefab(SkeletonPrefab);\necs.registerPrefab(WallPrefab);\n\nexport let gameState = {\n  userInput: null,\n  playerTurn: true,\n  turn: 0,\n  adventureLog: [],\n  innerMonologue: [{ text: \"I think, therefore I am.\" }],\n};\n\nexport let player = ecs.createPrefab(\"PlayerPrefab\");\n\nexport function loadGame() {\n  const data = JSON.parse(localStorage.getItem(\"gameSaveData\"));\n  if (!data) {\n    console.log(\"No Saved Games Found\");\n    return;\n  }\n\n  for (let item of ecs.entities.all) {\n    item.destroy();\n  }\n\n  ecs.deserialize(data.ecs);\n  cache.deserialize(data.cache);\n  gameState = data.gameState;\n  player = ecs.getEntity(data.playerId);\n\n  console.log(\"game loaded\", {\n    cache,\n    gameState,\n    ecs,\n    player,\n  });\n}\n\nexport function saveGame() {\n  const gameSaveData = {\n    ecs: ecs.serialize(),\n    cache: cache.serialize(),\n    gameState,\n    playerId: player.id,\n  };\n  localStorage.setItem(\"gameSaveData\", JSON.stringify(gameSaveData));\n\n  console.log(\"game saved\");\n}\n\nwindow.snail = {\n  ecs,\n  cache,\n  gameState,\n  player,\n};\n\nexport default ecs;\n\nmodule.export = {\n  cache,\n  gameState,\n  player,\n  loadGame,\n  saveGame,\n};\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.15';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // with lookup (in case of e.g. prototype pollution), and strip newlines if any.\n      // A newline wouldn't be a valid sourceURL anyway, and it'd enable code injection.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/[\\r\\n]/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      // Like with sourceURL, we take care to not check the option's prototype,\n      // as this configuration is a code injection vector.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","export const colors = {\n  defaultColor: \"#ff0077\",\n  defaultBGColor: \"#000\",\n  revealedColor: \"#333\",\n\n  inventoryHighlight: \"#A9CCE3\",\n\n  // animations\n  damage: \"#ff0000\",\n\n  // soilage\n  blood: \"#cc1100\",\n\n  // light:\n  torchLight: \"#FFD00E\",\n  campfire: \"#FFD00E\",\n\n  // staging:\n  fountain: \"#3366FF\",\n\n  // items:\n  armor: \"#DAA520\",\n  bandage: \"#F7DC6F\",\n  chest: \"#DAA520\",\n  currency: \"#DAA520\",\n  multipleItems: \"#DAA520\",\n  potion: \"#DAA520\",\n  weapon: \"#DAA520\",\n  // log\n  hudText: \"#fff\",\n  healthBar: \"#B91906\",\n  // maps\n  wall: [\"#AAA\", \"#BBB\", \"#CCC\", \"#DDD\"],\n  floor: [\"#555555\", \"#666666\", \"#444444\"],\n  cavernFloor: [\"#71331e\", \"#652d1b\", \"#5a2818\", \"#4f2315\"],\n  stairsUp: \"#AAA\",\n  stairsDown: \"#AAA\",\n  // player\n  player: \"#FFF\",\n  // monsters\n  goblin: \"#0C9\",\n  rat: \"#F1948A\",\n  skeleton: \"#fde5a4\",\n  gelatinousCube: \"#9abf31\",\n};\n\nexport const chars = {\n  defaultChar: \"?\",\n  corpse: \"%\",\n  // staging\n  campfire: \"ô\", // ö o\n  fountain: \"⦿\", // ⦿ ⦾ ◯ ⨀ ⊚\n  // equipment\n  armor: \"[\",\n  weapon: \")\",\n  // containers\n  chest: \"=\",\n  // items\n  currency: \"*\",\n  potion: \"!\",\n  multipleItems: \"&\",\n  item: \"~\",\n  // maps\n  wall: \"#\",\n  floor: \"•\",\n  cavernFloor: \"•\",\n  stairsUp: \"<\",\n  stairsDown: \">\",\n  // tracks\n  track: \"•\",\n  // player\n  player: \"@\",\n  // monsters\n  goblin: \"g\",\n  rat: \"r\",\n  skeleton: \"s\",\n};\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\n\nexport default class EntityProperty extends Property {\n    id;\n\n    set(value) {\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n\n        if (value && value.id) {\n            this.ecs.entities.addRef(value.id, this);\n            this.id = value.id;\n            return;\n        }\n\n        if (typeof value === 'string') {\n            this.ecs.entities.addRef(value, this);\n            this.id = value;\n            return;\n        }\n\n        this.id = undefined;\n    }\n\n    get() {\n        return this.id && this.component.ecs.getEntity(this.id);\n    }\n\n    serialize() {\n        return this.id;\n    }\n\n    onDestroyed() {\n        if (this.id) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n    }\n\n    cleanupReference(entity) {\n        if (this.id === entity.id) {\n            this.id = undefined;\n        } else {\n            console.warn(\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`\n            );\n        }\n    }\n}\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import camelcase from 'camelcase';\nimport PropertyFactory from './Properties/PropertyFactory';\n\nexport default class Component {\n    #entity = null;\n    #ecs = null;\n    #props = {};\n    #isDestroyed = false;\n\n    static allowMultiple = false;\n    static keyProperty = null;\n    static properties = {};\n\n    static get type() {\n        return this.name;\n    }\n\n    get entity() {\n        return this.#entity;\n    }\n\n    get ecs() {\n        return this.#ecs;\n    }\n\n    get type() {\n        return this.constructor.name;\n    }\n\n    get isAttached() {\n        return Boolean(this.entity);\n    }\n\n    get isDestroyed() {\n        return this.#isDestroyed;\n    }\n\n    get allowMultiple() {\n        return this.constructor.allowMultiple;\n    }\n\n    get keyProperty() {\n        return this.constructor.keyProperty;\n    }\n\n    get properties() {\n        const ob = {};\n\n        for (const [key, value] of Object.entries(this.#props)) {\n            ob[key] = value.get();\n        }\n\n        return ob;\n    }\n\n    get key() {\n        return this[this.keyProperty];\n    }\n\n    constructor(ecs, properties = {}) {\n        this.#ecs = ecs;\n        this._defineProxies(properties);\n    }\n\n    serialize() {\n        return Object.entries(this.#props).reduce(\n            (o, [key, value]) => ({\n                ...o,\n                [key]: value.serialize(),\n            }),\n            {}\n        );\n    }\n\n    _onAttached(entity) {\n        this.#entity = entity;\n        this.ecs.queries.onComponentAdded(entity, this);\n        this.onAttached();\n    }\n\n    _onDetached() {\n        if (this.isAttached) {\n            this.onDetached();\n            const entity = this.#entity;\n\n            this.#entity = null;\n            this.ecs.queries.onComponentRemoved(entity, this);\n        }\n    }\n\n    _onDestroyed() {\n        this.#isDestroyed = true;\n        this.onDestroyed();\n\n        for (const prop of Object.values(this.#props)) {\n            prop.onDestroyed();\n        }\n    }\n\n    onAttached() {}\n\n    onDetached() {}\n\n    onDestroyed() {}\n\n    remove(destroy = true) {\n        if (this.isAttached) {\n            this.entity.remove(this);\n        }\n        if (destroy) {\n            this._onDestroyed();\n        }\n    }\n\n    destroy() {\n        this.remove(true);\n    }\n\n    _onEvent(evt) {\n        this.onEvent(evt);\n\n        const handlerName = camelcase(`on ${evt.name}`);\n\n        if (typeof this[handlerName] === 'function') {\n            this[handlerName](evt);\n        }\n    }\n\n    onEvent(evt) {}\n\n    _defaultPropertyValue(propertyName) {\n        const value = this.constructor.properties[propertyName];\n\n        if (value === '<EntityArray>') {\n            return [];\n        }\n\n        if (value === '<Entity>') {\n            return undefined;\n        }\n\n        return value;\n    }\n\n    _defineProxies(initialProperties) {\n        for (const key in this.constructor.properties) {\n            const initialValue = initialProperties.hasOwnProperty(key)\n                ? initialProperties[key]\n                : this._defaultPropertyValue(key);\n            const property = PropertyFactory.create(\n                this,\n                this.constructor.properties[key]\n            );\n\n            this.#props[key] = property;\n            Object.defineProperty(this, key, property.descriptor);\n            property.set(initialValue);\n        }\n    }\n}\n","import Component from '../Component';\nimport camelcase from 'camelcase';\n\nexport default class ComponentRegistry {\n    #nameCache = new Map();\n    #definitions = new Map();\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    register(component) {\n        this.#definitions.set(component.name, component);\n        this.#nameCache.set(component.name, camelcase(component.name));\n    }\n\n    getAccessor(type) {\n        if (this.#nameCache.has(type)) {\n            return this.#nameCache.get(type);\n        }\n\n        this.#nameCache.set(type, camelcase(type));\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this.#definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this.#ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\n    name = '';\n    inherit = [];\n    components = [];\n\n    constructor(ecs, name) {\n        this.ecs = ecs;\n        this.name = name;\n    }\n\n    addComponent(prefabComponent) {\n        this.components.push(prefabComponent);\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        this.inherit.forEach((parent) => {\n            parent.applyToEntity(entity, initialProps);\n        });\n\n        const arrComps = {};\n\n        this.components.forEach((component, i) => {\n            const definition = component.componentDef;\n            const accessor = this.ecs.components.getAccessor(definition.type);\n\n            let initialCompProps = {};\n\n            if (definition.allowMultiple) {\n                if (definition.keyProperty) {\n                    const key = component.properties[definition.keyProperty];\n\n                    if (\n                        initialProps[accessor] &&\n                        initialProps[accessor][key]\n                    ) {\n                        initialCompProps =\n                            initialProps[accessor][key];\n                    }\n                } else {\n                    if (!arrComps[accessor]) {\n                        arrComps[accessor] = 0;\n                    }\n\n                    if (\n                        initialProps[accessor] &&\n                        initialProps[accessor][\n                            arrComps[accessor]\n                        ]\n                    ) {\n                        initialCompProps =\n                            initialProps[accessor][\n                                arrComps[accessor]\n                            ];\n                    }\n\n                    arrComps[accessor]++;\n                }\n            } else {\n                initialCompProps = initialProps[accessor];\n            }\n\n            component.applyToEntity(entity, initialCompProps);\n        });\n\n        return entity;\n    }\n}\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    #prefabs = {};\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this.#ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this.#ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this.#ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this.#prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this.#prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this.#ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\n    data = {};\n    #prevented = false;\n    #handled = false;\n\n    get prevented() {\n        return this.#prevented;\n    }\n\n    get handled() {\n        return this.#handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this.#handled = true;\n        this.#prevented = true;\n    }\n\n    prevent() {\n        this.#prevented = true;\n    }\n}\n","import Component from './Component';\nimport EntityEvent from './EntityEvent';\n\nexport default class Entity {\n    #id = null;\n    #components = {};\n    #ecs = null;\n    #isDestroyed = false;\n\n    get ecs() {\n        return this.#ecs;\n    }\n\n    get components() {\n        return this.#components;\n    }\n\n    get isDestroyed() {\n        return this.#isDestroyed;\n    }\n\n    constructor(ecs, id = null) {\n        this.#ecs = ecs;\n        this.#id = id || ecs.generateId();\n        Object.defineProperty(this, 'id', {\n            value: this.#id,\n            enumerable: true,\n            writable: false,\n        });\n    }\n\n    has(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const hasType = this.hasOwnProperty(accessor);\n\n        if (hasType && key) {\n            return this[accessor].hasOwnProperty(key);\n        }\n\n        return hasType;\n    }\n\n    get(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const components = this[accessor];\n\n        if (components && key) {\n            return components[key];\n        }\n\n        return components;\n    }\n\n    destroy() {\n        this.#isDestroyed = true;\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component.destroy();\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent.destroy();\n                }\n            }\n        }\n\n        this.ecs.entities.onEntityDestroyed(this);\n    }\n\n    add(typeOrClass, properties = {}) {\n        const component = this.ecs.components.create(typeOrClass, properties);\n\n        if (!component) {\n            console.warn(\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\n            );\n            return false;\n        }\n\n        return this.attach(component);\n    }\n\n    attach(component) {\n        const accessor = this.ecs.components.getAccessor(component.type);\n\n        if (!component.allowMultiple) {\n            if (this.has(component.type)) {\n                console.warn(\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\n                );\n                return false;\n            }\n\n            this.components[accessor] = component;\n\n            Object.defineProperty(this, accessor, {\n                enumerable: true,\n                configurable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.keyProperty) {\n            if (!this.components[accessor]) {\n                this.components[accessor] = [];\n                Object.defineProperty(this, accessor, {\n                    configurable: true,\n                    enumerable: true,\n                    get() {\n                        return this.components[accessor];\n                    },\n                });\n            }\n\n            this.components[accessor].push(component);\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.key) {\n            console.warn(\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\n            );\n            return false;\n        }\n\n        if (!this.components[accessor]) {\n            this.components[accessor] = {};\n            Object.defineProperty(this, accessor, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n        }\n\n        this.components[accessor][component.key] = component;\n\n        component._onAttached(this);\n        this.ecs.queries.onComponentAdded(this, component);\n\n        return true;\n    }\n\n    owns(component) {\n        return component.entity === this;\n    }\n\n    remove(typeOrClassOrComponent, key = null) {\n        const isComponent = typeOrClassOrComponent instanceof Component;\n        key = isComponent ? typeOrClassOrComponent.key : key;\n\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\n\n        const accessor = this.ecs.components.getAccessor(definition.type);\n\n        if (definition.allowMultiple) {\n            if (!definition.keyProperty) {\n                if (isComponent) {\n                    const all = this.components[accessor];\n\n                    if (!all) {\n                        console.warn(\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n                        );\n                        return;\n                    }\n\n                    const index = all.indexOf(typeOrClassOrComponent);\n\n                    if (index > -1) {\n                        all.splice(index, 1);\n                        typeOrClassOrComponent._onDetached();\n\n                        if (all.length === 0) {\n                            delete this[accessor];\n                            delete this.components[accessor];\n                        }\n\n                        this.ecs.queries.onComponentRemoved(this);\n\n                        return true;\n                    }\n                } else {\n                    for (const instance of this.components[accessor]) {\n                        instance._onDetached();\n                    }\n\n                    delete this[accessor];\n                    delete this.components[accessor];\n                    this.ecs.queries.onComponentRemoved(this);\n\n                    return true;\n                }\n            }\n\n            if (!key) {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\n                );\n                return;\n            }\n\n            const all = this.components[accessor];\n            const component = all[key];\n\n            if (component) {\n                delete all[key];\n                component._onDetached();\n                if (Object.keys(all).length <= 0) {\n                    delete this[accessor];\n                    delete this.components[accessor];\n                }\n                this.ecs.queries.onComponentRemoved(this);\n\n                return component;\n            } else {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\n                );\n                return;\n            }\n        }\n\n        if (accessor in this) {\n            const component = this.components[accessor];\n\n            delete this[accessor];\n            delete this.components[accessor];\n            component._onDetached();\n            this.ecs.queries.onComponentRemoved(this);\n\n            return component;\n        }\n\n        console.warn(\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n        );\n    }\n\n    serialize() {\n        return Object.entries(this.components).reduce(\n            (o, [key, value]) => {\n                if (value instanceof Component) {\n                    return {\n                        ...o,\n                        [key]: value.serialize(),\n                    };\n                }\n\n                if (Array.isArray(value)) {\n                    return {\n                        ...o,\n                        [key]: value.map((v) => v.serialize()),\n                    };\n                }\n\n                return {\n                    ...o,\n                    [key]: Object.entries(value).reduce(\n                        (o2, [k2, v2]) => ({\n                            ...o2,\n                            [k2]: v2.serialize(),\n                        }),\n                        {}\n                    ),\n                };\n            },\n            {\n                id: this.id,\n            }\n        );\n    }\n\n    fireEvent(name, data) {\n        const evt = new EntityEvent(name, data);\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component._onEvent(evt);\n\n                if (evt.prevented) {\n                    return evt;\n                }\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent._onEvent(evt);\n\n                    if (evt.prevented) {\n                        return evt;\n                    }\n                }\n            }\n        }\n\n        return evt;\n    }\n}\n","import Entity from '../Entity';\nimport camelcase from 'camelcase';\n\nexport default class EntityRegistry {\n    #entities = new Map();\n    #ecs = null;\n    #refs = new Map();\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    get all() {\n        return this.#entities.values();\n    }\n\n    register(entity) {\n        this.#entities.set(entity.id, entity);\n\n        return entity;\n    }\n\n    get(id) {\n        return this.#entities.get(id);\n    }\n\n    createOrGetById(id) {\n        const entity = this.get(id);\n\n        if (entity) {\n            return entity;\n        }\n\n        return this.create(id);\n    }\n\n    create(id = undefined) {\n        const entity = new Entity(this.#ecs, id);\n\n        this.register(entity);\n\n        this.#ecs.queries.onEntityCreated(entity);\n\n        return entity;\n    }\n\n    destroy(entity) {\n        entity.destroy();\n    }\n\n    onEntityDestroyed(entity) {\n        this.cleanupRefs(entity);\n        this.#entities.delete(entity.id);\n        this.#ecs.queries.onEntityDestroyed(entity);\n    }\n\n    cleanupRefs(entity) {\n        const refs = this.#refs.get(entity.id);\n\n        if (!refs) {\n            return;\n        }\n\n        for (const ref of refs) {\n            ref.cleanupReference(entity);\n        }\n\n        delete this.#refs[entity.id];\n    }\n\n    addRef(entityId, property) {\n        if (!this.#refs.has(entityId)) {\n            this.#refs.set(entityId, new Set([property]));\n            return;\n        }\n\n        this.#refs.get(entityId).add(property);\n    }\n\n    removeRef(entityId, property) {\n        if (this.#refs.has(entityId)) {\n            this.#refs.get(entityId).delete(property);\n        }\n    }\n\n    serialize() {\n        const json = [];\n\n        this.#entities.forEach((entity) => {\n            json.push(entity.serialize());\n        });\n\n        return json;\n    }\n\n    deserialize(data) {\n        for (const entityData of data.entities) {\n            this.createOrGetById(entityData.id);\n        }\n\n        for (const entityData of data.entities) {\n            this.deserializeEntity(entityData);\n        }\n    }\n\n    deserializeEntity(data) {\n        const { id, ...componentData } = data;\n        const entity = this.createOrGetById(id);\n\n        Object.entries(componentData).forEach(([key, value]) => {\n            const type = camelcase(key, { pascalCase: true });\n            const definition = this.#ecs.components.get(type);\n\n            if (definition.allowMultiple) {\n                Object.values(value).forEach((d) => {\n                    entity.add(definition, d);\n                });\n            } else {\n                entity.add(definition, value);\n            }\n        });\n    }\n}\n","import merge from 'deepmerge';\n\nexport default class Query {\n    #ecs;\n    #filter;\n    #cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this.#ecs = ecs;\n        this.#filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this.#filter.any.length\n            ? this.#filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this.#filter.all.every((c) => entity.has(c));\n        const hasNone = !this.#filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    candidate(entity) {\n        if (this.isMatch(entity)) {\n            this.#cache.add(entity);\n            return true;\n        }\n\n        this.#cache.delete(entity);\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        this.#cache.delete(entity);\n    }\n\n    bustCache() {\n        this.#cache.clear();\n\n        for (const entity of this.#ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this.#cache;\n    }\n\n    get() {\n        return this.#cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    #ecs;\n    #queries = [];\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this.#ecs, filters);\n\n        this.#queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this.#queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this.#queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this.#queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this.#queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\nimport PrefabRegistry from './registries/PrefabRegistry';\nimport { nanoid } from 'nanoid/non-secure';\nimport EntityRegistry from './registries/EntityRegistry';\nimport QueryRegistry from './registries/QueryRegistry';\n\nexport default class Engine {\n    constructor() {\n        this.idGenerator = () => nanoid();\n        this.components = new ComponentRegistry(this);\n        this.prefabs = new PrefabRegistry(this);\n        this.entities = new EntityRegistry(this);\n        this.queries = new QueryRegistry(this);\n    }\n\n    generateId() {\n        return this.idGenerator();\n    }\n\n    createEntity() {\n        return this.entities.create();\n    }\n\n    createPrefab(nameOrClass, initialProps = {}) {\n        return this.prefabs.create(nameOrClass, initialProps);\n    }\n\n    destroyEntity(entity) {\n        return this.entities.destroy(entity);\n    }\n\n    registerPrefab(data) {\n        this.prefabs.deserialize(data);\n    }\n\n    registerComponent(component) {\n        this.components.register(component);\n    }\n\n    getEntity(id) {\n        return this.entities.get(id);\n    }\n\n    createComponent(type, properties) {\n        return this.components.create(type, properties);\n    }\n\n    createQuery(filters) {\n        return this.queries.create(filters);\n    }\n\n    serialize() {\n        return {\n            entities: this.entities.serialize(),\n        };\n    }\n\n    deserialize(data) {\n        if (data.id) {\n            return this.entities.deserializeEntity(data);\n        }\n\n        return this.entities.deserialize(data);\n    }\n}\n","const pixelRatio = window.devicePixelRatio || 1;\nlet canvas;\nlet ctx;\n\n// it's a PITA to mock canvas in jest so we just hack it when it's running\nif (process.env.NODE_ENV === \"test\") {\n  canvas = {\n    style: {},\n  };\n  ctx = {};\n} else {\n  canvas = document.querySelector(\"#canvas\");\n  ctx = canvas.getContext(\"2d\");\n}\n\nexport const layers = {\n  ground: 100,\n  tracks: 200,\n  items: 300,\n  player: 400,\n  abovePlayer: 500,\n  sky: 600,\n};\n\nexport const grid = {\n  width: 100,\n  height: 34,\n\n  map: {\n    width: 79,\n    height: 29,\n    x: 21,\n    y: 3,\n  },\n\n  log: {\n    width: 79,\n    height: 3,\n    x: 21,\n    y: 0,\n  },\n\n  hud: {\n    width: 20,\n    height: 34,\n    x: 0,\n    y: 0,\n  },\n\n  hud2: {\n    width: 79,\n    height: 2,\n    x: 21,\n    y: 32,\n  },\n\n  menu: {\n    width: 40,\n    height: 30,\n    x: 20,\n    y: 3,\n  },\n\n  menu2: {\n    width: 40,\n    height: 30,\n    x: 60,\n    y: 3,\n  },\n\n  menu3: {\n    width: 79,\n    height: 34,\n    x: 20,\n    y: 0,\n  },\n};\n\nconst font = \"Menlo\";\nconst lineHeight = 1.2;\n\nlet calculatedFontSize = window.innerWidth / grid.width;\nlet cellWidth = calculatedFontSize * pixelRatio;\nlet cellHeight = calculatedFontSize * lineHeight * pixelRatio;\nlet fontSize = calculatedFontSize * pixelRatio;\n\ncanvas.style.cssText = `width: ${calculatedFontSize * grid.width}; height: ${\n  calculatedFontSize * lineHeight * grid.height\n}`;\ncanvas.width = cellWidth * grid.width;\ncanvas.height = cellHeight * grid.height;\n\nctx.font = `normal ${fontSize}px ${font}`;\nctx.textAlign = \"center\";\nctx.textBaseline = \"middle\";\n\nconst drawBackground = (color, position, alpha = 1) => {\n  if (color === \"transparent\") return;\n\n  ctx.globalAlpha = alpha;\n  ctx.fillStyle = color;\n  ctx.fillRect(\n    position.x * cellWidth,\n    position.y * cellHeight,\n    cellWidth,\n    cellHeight\n  );\n};\n\nconst drawChar = ({ char, color, pos, fgA, size, rotate }) => {\n  ctx.globalAlpha = fgA;\n  ctx.fillStyle = color;\n  if (size) {\n    ctx.font = `${size}px sans-serif`;\n  }\n\n  if (!rotate) {\n    ctx.fillText(\n      char,\n      pos.x * cellWidth + cellWidth / 2,\n      pos.y * cellHeight + cellHeight / 2\n    );\n  }\n\n  if (rotate) {\n    const newx = pos.x * cellWidth + cellWidth / 2;\n    const newy = pos.y * cellHeight + cellHeight / 2;\n    ctx.save();\n    ctx.translate(newx, newy);\n    if (rotate === 90) {\n      ctx.rotate(Math.PI / 2); // 90\n    } else if (rotate === 180) {\n      ctx.rotate(Math.PI / 1); // 180 // upside down\n    } else if (rotate === 270) {\n      ctx.rotate(-Math.PI / 2); // 270\n    }\n    ctx.textAlign = \"center\";\n    ctx.fillText(char, 0, 0);\n    ctx.restore();\n  }\n};\n\nexport const drawCell = (entity, options = {}) => {\n  const { fg, bg, x, y, fgA = 1, bgA = 1, size = null, rotate } = options;\n  const {\n    appearance: { char, background, color },\n    position,\n  } = entity;\n\n  const bgColor = bg ? bg : background;\n  const charColor = fg ? fg : color;\n  const pos = x && y ? { x, y } : position;\n\n  drawBackground(bgColor, pos, bgA);\n  drawChar({ char, color: charColor, pos, fgA, size, rotate });\n};\n\nexport const clearCanvas = () =>\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\nexport const clearCell = (x, y) => {\n  ctx.clearRect(x, y, cellWidth, cellHeight);\n};\n\nexport const pxToCell = (ev) => {\n  const bounds = canvas.getBoundingClientRect();\n  const relativeX = ev.clientX - bounds.left;\n  const relativeY = ev.clientY - bounds.top;\n  const colPos = Math.trunc((relativeX / cellWidth) * pixelRatio);\n  const rowPos = Math.trunc((relativeY / cellHeight) * pixelRatio);\n\n  return [colPos, rowPos];\n};\n\nexport const onClick = (handler) => {\n  canvas.addEventListener(\"click\", (ev) => {\n    const cell = pxToCell(ev);\n    handler(cell[0], cell[1]);\n  });\n};\n\nexport const onMouseMove = (handler) => {\n  canvas.addEventListener(\"mousemove\", (ev) => {\n    const cell = pxToCell(ev);\n    handler(cell[0], cell[1]);\n  });\n};\n","import { Component } from \"geotic\";\n\nexport default class Position extends Component {\n  // px, py = previous x, previous y\n  static properties = { x: 0, y: 0, px: null, py: null };\n}\n","import { Component } from \"geotic\";\nimport { chars, colors } from \"../lib/graphics\";\nimport { layers } from \"../lib/canvas\";\n\nexport default class Appearance extends Component {\n  static properties = {\n    color: colors.defaultColor,\n    currentColor: this.color,\n    char: chars.defaultChar,\n    background: colors.defaultBGColor,\n    layer: layers.ground,\n  };\n\n  onSoil(evt) {\n    if (evt.data.color) {\n      this.currentColor = evt.data.color;\n    }\n  }\n\n  onClean(evt) {\n    this.currentColor = null;\n  }\n}\n","import { Component } from \"geotic\";\n\nexport default class Name extends Component {\n  static properties = {\n    first: \"\",\n    last: \"\",\n    nomen: \"\",\n  };\n}\n","import { Component } from \"geotic\";\n\nexport default class IsBlocking extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class CanLegend extends Component {}\n","import { Component } from \"geotic\";\nimport { innerLog } from \"../lib/adventure-log\";\n\nexport default class Description extends Component {\n  static properties = {\n    text: \"\",\n    default: \"\",\n    soiled: \"\",\n    dead: \"\",\n  };\n\n  onSoil(evt) {\n    if (evt.data.text && this.soiled) {\n      this.text = this.soiled\n        .replace(\"[SOILAGE]\", evt.data.text)\n        .replace(\"player\", \"my\");\n    }\n  }\n\n  onKill(evt) {\n    if (evt.data.text && this.dead) {\n      this.text = this.dead;\n    }\n\n    evt.handle();\n  }\n\n  onClean(evt) {\n    this.text = this.default;\n  }\n\n  onObserve(evt) {\n    innerLog({ text: this.text });\n  }\n}\n","import { Component } from \"geotic\";\n\nexport default class Layer400 extends Component {}\n","var DiagonalMovement = {\r\n    Always: 1,\r\n    Never: 2,\r\n    IfAtMostOneObstacle: 3,\r\n    OnlyWhenNoObstacles: 4\r\n};\r\n\r\nmodule.exports = DiagonalMovement;","import { gameState } from \"../state/ecs\";\n\nexport const log = (entry) => {\n  gameState.adventureLog.push(entry);\n};\n\nexport const innerLog = (entry) => {\n  gameState.innerMonologue.push(entry);\n};\n","import { Component } from \"geotic\";\n\nexport default class IsInFov extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class Brain extends Component {\n  static properties = {\n    ai: \"\",\n  };\n}\n","import { Component } from \"geotic\";\n\nexport default class Health extends Component {\n  static properties = { current: 10, max: 10 };\n\n  onTakeDamage(evt) {\n    this.current -= evt.data.amount;\n    evt.handle();\n  }\n}\n","export const CLEAN = \"clean\";\nexport const KILL = \"kill\";\nexport const OBSERVE = \"observe\";\nexport const SET_START_TIME = \"set-start-time\";\nexport const SOIL = \"soil\";\nexport const TAKE_DAMAGE = \"take-damage\";\n","import { Component } from \"geotic\";\nimport { colors } from \"../lib/graphics\";\n\nexport default class Blood extends Component {\n  static properties = {\n    color: colors.blood,\n  };\n}\n","import { Component } from \"geotic\";\n\nexport default class Layer100 extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class Layer300 extends Component {}\n","/**\r\n * Backtrace according to the parent records and return the path.\r\n * (including both start and end nodes)\r\n * @param {Node} node End node\r\n * @return {Array<Array<number>>} the path\r\n */\r\nfunction backtrace(node) {\r\n    var path = [[node.x, node.y]];\r\n    while (node.parent) {\r\n        node = node.parent;\r\n        path.push([node.x, node.y]);\r\n    }\r\n    return path.reverse();\r\n}\r\nexports.backtrace = backtrace;\r\n\r\n/**\r\n * Backtrace from start and end node, and return the path.\r\n * (including both start and end nodes)\r\n * @param {Node}\r\n * @param {Node}\r\n */\r\nfunction biBacktrace(nodeA, nodeB) {\r\n    var pathA = backtrace(nodeA),\r\n        pathB = backtrace(nodeB);\r\n    return pathA.concat(pathB.reverse());\r\n}\r\nexports.biBacktrace = biBacktrace;\r\n\r\n/**\r\n * Compute the length of the path.\r\n * @param {Array<Array<number>>} path The path\r\n * @return {number} The length of the path\r\n */\r\nfunction pathLength(path) {\r\n    var i, sum = 0, a, b, dx, dy;\r\n    for (i = 1; i < path.length; ++i) {\r\n        a = path[i - 1];\r\n        b = path[i];\r\n        dx = a[0] - b[0];\r\n        dy = a[1] - b[1];\r\n        sum += Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n    return sum;\r\n}\r\nexports.pathLength = pathLength;\r\n\r\n\r\n/**\r\n * Given the start and end coordinates, return all the coordinates lying\r\n * on the line formed by these coordinates, based on Bresenham's algorithm.\r\n * http://en.wikipedia.org/wiki/Bresenham's_line_algorithm#Simplification\r\n * @param {number} x0 Start x coordinate\r\n * @param {number} y0 Start y coordinate\r\n * @param {number} x1 End x coordinate\r\n * @param {number} y1 End y coordinate\r\n * @return {Array<Array<number>>} The coordinates on the line\r\n */\r\nfunction interpolate(x0, y0, x1, y1) {\r\n    var abs = Math.abs,\r\n        line = [],\r\n        sx, sy, dx, dy, err, e2;\r\n\r\n    dx = abs(x1 - x0);\r\n    dy = abs(y1 - y0);\r\n\r\n    sx = (x0 < x1) ? 1 : -1;\r\n    sy = (y0 < y1) ? 1 : -1;\r\n\r\n    err = dx - dy;\r\n\r\n    while (true) {\r\n        line.push([x0, y0]);\r\n\r\n        if (x0 === x1 && y0 === y1) {\r\n            break;\r\n        }\r\n        \r\n        e2 = 2 * err;\r\n        if (e2 > -dy) {\r\n            err = err - dy;\r\n            x0 = x0 + sx;\r\n        }\r\n        if (e2 < dx) {\r\n            err = err + dx;\r\n            y0 = y0 + sy;\r\n        }\r\n    }\r\n\r\n    return line;\r\n}\r\nexports.interpolate = interpolate;\r\n\r\n\r\n/**\r\n * Given a compressed path, return a new path that has all the segments\r\n * in it interpolated.\r\n * @param {Array<Array<number>>} path The path\r\n * @return {Array<Array<number>>} expanded path\r\n */\r\nfunction expandPath(path) {\r\n    var expanded = [],\r\n        len = path.length,\r\n        coord0, coord1,\r\n        interpolated,\r\n        interpolatedLen,\r\n        i, j;\r\n\r\n    if (len < 2) {\r\n        return expanded;\r\n    }\r\n\r\n    for (i = 0; i < len - 1; ++i) {\r\n        coord0 = path[i];\r\n        coord1 = path[i + 1];\r\n\r\n        interpolated = interpolate(coord0[0], coord0[1], coord1[0], coord1[1]);\r\n        interpolatedLen = interpolated.length;\r\n        for (j = 0; j < interpolatedLen - 1; ++j) {\r\n            expanded.push(interpolated[j]);\r\n        }\r\n    }\r\n    expanded.push(path[len - 1]);\r\n\r\n    return expanded;\r\n}\r\nexports.expandPath = expandPath;\r\n\r\n\r\n/**\r\n * Smoothen the give path.\r\n * The original path will not be modified; a new path will be returned.\r\n * @param {PF.Grid} grid\r\n * @param {Array<Array<number>>} path The path\r\n */\r\nfunction smoothenPath(grid, path) {\r\n    var len = path.length,\r\n        x0 = path[0][0],        // path start x\r\n        y0 = path[0][1],        // path start y\r\n        x1 = path[len - 1][0],  // path end x\r\n        y1 = path[len - 1][1],  // path end y\r\n        sx, sy,                 // current start coordinate\r\n        ex, ey,                 // current end coordinate\r\n        newPath,\r\n        i, j, coord, line, testCoord, blocked;\r\n\r\n    sx = x0;\r\n    sy = y0;\r\n    newPath = [[sx, sy]];\r\n\r\n    for (i = 2; i < len; ++i) {\r\n        coord = path[i];\r\n        ex = coord[0];\r\n        ey = coord[1];\r\n        line = interpolate(sx, sy, ex, ey);\r\n\r\n        blocked = false;\r\n        for (j = 1; j < line.length; ++j) {\r\n            testCoord = line[j];\r\n\r\n            if (!grid.isWalkableAt(testCoord[0], testCoord[1])) {\r\n                blocked = true;\r\n                break;\r\n            }\r\n        }\r\n        if (blocked) {\r\n            lastValidCoord = path[i - 1];\r\n            newPath.push(lastValidCoord);\r\n            sx = lastValidCoord[0];\r\n            sy = lastValidCoord[1];\r\n        }\r\n    }\r\n    newPath.push([x1, y1]);\r\n\r\n    return newPath;\r\n}\r\nexports.smoothenPath = smoothenPath;\r\n\r\n\r\n/**\r\n * Compress a path, remove redundant nodes without altering the shape\r\n * The original path is not modified\r\n * @param {Array<Array<number>>} path The path\r\n * @return {Array<Array<number>>} The compressed path\r\n */\r\nfunction compressPath(path) {\r\n\r\n    // nothing to compress\r\n    if(path.length < 3) {\r\n        return path;\r\n    }\r\n\r\n    var compressed = [],\r\n        sx = path[0][0], // start x\r\n        sy = path[0][1], // start y\r\n        px = path[1][0], // second point x\r\n        py = path[1][1], // second point y\r\n        dx = px - sx, // direction between the two points\r\n        dy = py - sy, // direction between the two points\r\n        lx, ly,\r\n        ldx, ldy,\r\n        sq, i;\r\n\r\n    // normalize the direction\r\n    sq = Math.sqrt(dx*dx + dy*dy);\r\n    dx /= sq;\r\n    dy /= sq;\r\n\r\n    // start the new path\r\n    compressed.push([sx,sy]);\r\n\r\n    for(i = 2; i < path.length; i++) {\r\n\r\n        // store the last point\r\n        lx = px;\r\n        ly = py;\r\n\r\n        // store the last direction\r\n        ldx = dx;\r\n        ldy = dy;\r\n\r\n        // next point\r\n        px = path[i][0];\r\n        py = path[i][1];\r\n\r\n        // next direction\r\n        dx = px - lx;\r\n        dy = py - ly;\r\n\r\n        // normalize\r\n        sq = Math.sqrt(dx*dx + dy*dy);\r\n        dx /= sq;\r\n        dy /= sq;\r\n\r\n        // if the direction has changed, store the point\r\n        if ( dx !== ldx || dy !== ldy ) {\r\n            compressed.push([lx,ly]);\r\n        }\r\n    }\r\n\r\n    // store the last point\r\n    compressed.push([px,py]);\r\n\r\n    return compressed;\r\n}\r\nexports.compressPath = compressPath;\r\n","import { Component } from \"geotic\";\n\nexport default class CanDijkstra extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class IsRevealed extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class IsOpaque extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class MoveTo extends Component {\n  static properties = {\n    x: 0,\n    y: 0,\n    relative: true, // x,y are relative to current loc or exact\n  };\n}\n","/**\r\n * @namespace PF.Heuristic\r\n * @description A collection of heuristic functions.\r\n */\r\nmodule.exports = {\r\n\r\n  /**\r\n   * Manhattan distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} dx + dy\r\n   */\r\n  manhattan: function(dx, dy) {\r\n      return dx + dy;\r\n  },\r\n\r\n  /**\r\n   * Euclidean distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} sqrt(dx * dx + dy * dy)\r\n   */\r\n  euclidean: function(dx, dy) {\r\n      return Math.sqrt(dx * dx + dy * dy);\r\n  },\r\n\r\n  /**\r\n   * Octile distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} sqrt(dx * dx + dy * dy) for grids\r\n   */\r\n  octile: function(dx, dy) {\r\n      var F = Math.SQRT2 - 1;\r\n      return (dx < dy) ? F * dx + dy : F * dy + dx;\r\n  },\r\n\r\n  /**\r\n   * Chebyshev distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} max(dx, dy)\r\n   */\r\n  chebyshev: function(dx, dy) {\r\n      return Math.max(dx, dy);\r\n  }\r\n\r\n};\r\n","module.exports = require('./lib/heap');\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Base class for the Jump Point Search algorithm\r\n * @param {object} opt\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction JumpPointFinderBase(opt) {\r\n    opt = opt || {};\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.trackJumpRecursion = opt.trackJumpRecursion || false;\r\n}\r\n\r\n/**\r\n * Find and return the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nJumpPointFinderBase.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = this.openList = new Heap(function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        }),\r\n        startNode = this.startNode = grid.getNodeAt(startX, startY),\r\n        endNode = this.endNode = grid.getNodeAt(endX, endY), node;\r\n\r\n    this.grid = grid;\r\n\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n\r\n    // push the start node into the open list\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the open list is not empty\r\n    while (!openList.empty()) {\r\n        // pop the position of node which has the minimum `f` value.\r\n        node = openList.pop();\r\n        node.closed = true;\r\n\r\n        if (node === endNode) {\r\n            return Util.expandPath(Util.backtrace(endNode));\r\n        }\r\n\r\n        this._identifySuccessors(node);\r\n    }\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\n/**\r\n * Identify successors for the given node. Runs a jump point search in the\r\n * direction of each available neighbor, adding any points found to the open\r\n * list.\r\n * @protected\r\n */\r\nJumpPointFinderBase.prototype._identifySuccessors = function(node) {\r\n    var grid = this.grid,\r\n        heuristic = this.heuristic,\r\n        openList = this.openList,\r\n        endX = this.endNode.x,\r\n        endY = this.endNode.y,\r\n        neighbors, neighbor,\r\n        jumpPoint, i, l,\r\n        x = node.x, y = node.y,\r\n        jx, jy, dx, dy, d, ng, jumpNode,\r\n        abs = Math.abs, max = Math.max;\r\n\r\n    neighbors = this._findNeighbors(node);\r\n    for(i = 0, l = neighbors.length; i < l; ++i) {\r\n        neighbor = neighbors[i];\r\n        jumpPoint = this._jump(neighbor[0], neighbor[1], x, y);\r\n        if (jumpPoint) {\r\n\r\n            jx = jumpPoint[0];\r\n            jy = jumpPoint[1];\r\n            jumpNode = grid.getNodeAt(jx, jy);\r\n\r\n            if (jumpNode.closed) {\r\n                continue;\r\n            }\r\n\r\n            // include distance, as parent may not be immediately adjacent:\r\n            d = Heuristic.octile(abs(jx - x), abs(jy - y));\r\n            ng = node.g + d; // next `g` value\r\n\r\n            if (!jumpNode.opened || ng < jumpNode.g) {\r\n                jumpNode.g = ng;\r\n                jumpNode.h = jumpNode.h || heuristic(abs(jx - endX), abs(jy - endY));\r\n                jumpNode.f = jumpNode.g + jumpNode.h;\r\n                jumpNode.parent = node;\r\n\r\n                if (!jumpNode.opened) {\r\n                    openList.push(jumpNode);\r\n                    jumpNode.opened = true;\r\n                } else {\r\n                    openList.updateItem(jumpNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = JumpPointFinderBase;\r\n","import { colors } from \"../lib/graphics\";\nimport { Component } from \"geotic\";\n\nexport default class Animate extends Component {\n  static properties = {\n    startTime: null,\n    duration: 200,\n    animation: {\n      type: \"color\",\n      stops: [colors.defaultColor],\n    },\n  };\n\n  onSetStartTime(evt) {\n    this.startTime = evt.data.time;\n    evt.handle();\n  }\n\n  onRemove() {\n    console.log(\"Animation over!\");\n  }\n}\n","import { Component } from \"geotic\";\n\nexport default class canAbsorb extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class isBoneless extends Component {}\n","/**\r\n * A node in grid. \r\n * This class holds some basic information about a node and custom \r\n * attributes may be added, depending on the algorithms' needs.\r\n * @constructor\r\n * @param {number} x - The x coordinate of the node on the grid.\r\n * @param {number} y - The y coordinate of the node on the grid.\r\n * @param {boolean} [walkable] - Whether this node is walkable.\r\n */\r\nfunction Node(x, y, walkable) {\r\n    /**\r\n     * The x coordinate of the node on the grid.\r\n     * @type number\r\n     */\r\n    this.x = x;\r\n    /**\r\n     * The y coordinate of the node on the grid.\r\n     * @type number\r\n     */\r\n    this.y = y;\r\n    /**\r\n     * Whether this node can be walked through.\r\n     * @type boolean\r\n     */\r\n    this.walkable = (walkable === undefined ? true : walkable);\r\n}\r\n\r\nmodule.exports = Node;\r\n","var Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * A* path-finder. Based upon https://github.com/bgrins/javascript-astar\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching \r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n */\r\nfunction AStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    // When diagonal movement is allowed the manhattan heuristic is not\r\n    //admissible. It should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = new Heap(function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        }),\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        heuristic = this.heuristic,\r\n        diagonalMovement = this.diagonalMovement,\r\n        weight = this.weight,\r\n        abs = Math.abs, SQRT2 = Math.SQRT2,\r\n        node, neighbors, neighbor, i, l, x, y, ng;\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n\r\n    // push the start node into the open list\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the open list is not empty\r\n    while (!openList.empty()) {\r\n        // pop the position of node which has the minimum `f` value.\r\n        node = openList.pop();\r\n        node.closed = true;\r\n\r\n        // if reached the end position, construct the path and return it\r\n        if (node === endNode) {\r\n            return Util.backtrace(endNode);\r\n        }\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h || weight * heuristic(abs(x - endX), abs(y - endY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    openList.push(neighbor);\r\n                    neighbor.opened = true;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    openList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n    } // end while not open list empty\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = AStarFinder;\r\n","var Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * A* path-finder.\r\n * based upon https://github.com/bgrins/javascript-astar\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n */\r\nfunction BiAStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    //When diagonal movement is allowed the manhattan heuristic is not admissible\r\n    //It should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBiAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var cmp = function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        },\r\n        startOpenList = new Heap(cmp),\r\n        endOpenList = new Heap(cmp),\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        heuristic = this.heuristic,\r\n        diagonalMovement = this.diagonalMovement,\r\n        weight = this.weight,\r\n        abs = Math.abs, SQRT2 = Math.SQRT2,\r\n        node, neighbors, neighbor, i, l, x, y, ng,\r\n        BY_START = 1, BY_END = 2;\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    // and push it into the start open list\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n    startOpenList.push(startNode);\r\n    startNode.opened = BY_START;\r\n\r\n    // set the `g` and `f` value of the end node to be 0\r\n    // and push it into the open open list\r\n    endNode.g = 0;\r\n    endNode.f = 0;\r\n    endOpenList.push(endNode);\r\n    endNode.opened = BY_END;\r\n\r\n    // while both the open lists are not empty\r\n    while (!startOpenList.empty() && !endOpenList.empty()) {\r\n\r\n        // pop the position of start node which has the minimum `f` value.\r\n        node = startOpenList.pop();\r\n        node.closed = true;\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened === BY_END) {\r\n                return Util.biBacktrace(node, neighbor);\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h ||\r\n                    weight * heuristic(abs(x - endX), abs(y - endY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    startOpenList.push(neighbor);\r\n                    neighbor.opened = BY_START;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    startOpenList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n\r\n\r\n        // pop the position of end node which has the minimum `f` value.\r\n        node = endOpenList.pop();\r\n        node.closed = true;\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened === BY_START) {\r\n                return Util.biBacktrace(neighbor, node);\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h ||\r\n                    weight * heuristic(abs(x - startX), abs(y - startY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    endOpenList.push(neighbor);\r\n                    neighbor.opened = BY_END;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    endOpenList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n    } // end while not open list empty\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BiAStarFinder;\r\n","module.exports = require('./src/PathFinding');\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { get, set } from \"lodash\";\n\nexport default class Cache {\n  allChars = [];\n  entitiesAtLocation = {};\n  dijkstraMaps = {\n    player: {},\n    playerReverse: {},\n  };\n\n  serialize() {\n    const entitiesAtLocation = Object.keys(this.entitiesAtLocation).reduce(\n      (acc, val) => {\n        acc[val] = [...this.entitiesAtLocation[val]];\n        return acc;\n      },\n      {}\n    );\n\n    const dijkstraMaps = this.dijkstraMaps;\n\n    return {\n      entitiesAtLocation,\n      dijkstraMaps,\n    };\n  }\n\n  clear() {\n    this.entitiesAtLocation = {};\n    this.dijkstraMaps = {};\n  }\n\n  deserialize(data) {\n    this.clear();\n\n    this.dijkstraMaps = data.dijkstraMaps;\n    this.entitiesAtLocation = Object.keys(data.entitiesAtLocation).reduce(\n      (acc, val) => {\n        acc[val] = new Set(data.entitiesAtLocation[val]);\n        return acc;\n      },\n      {}\n    );\n  }\n\n  addSet(name, key, value) {\n    if (!this.validate(name, key, \"addSet\")) return;\n\n    if (this[name][key]) {\n      this[name][key].add(value);\n    } else {\n      this[name][key] = new Set();\n      this[name][key].add(value);\n    }\n  }\n\n  readSet(name, key, value) {\n    if (!this.validate(name, key, \"readSet\")) return;\n\n    if (value) {\n      return this[name][key].get(value);\n    }\n\n    return this[name][key];\n  }\n\n  addObj(name, path, value) {\n    set(this[name], path, value);\n  }\n\n  readObj(name, path) {\n    return get(this[name], path);\n  }\n\n  delete(name, key, value) {\n    if (!this.validate(name, key, \"delete\")) return;\n\n    if (this[name][key].has(value)) {\n      this[name][key].delete(value);\n    }\n  }\n\n  print(name, key) {\n    if (!name) {\n      return console.log(this);\n    }\n\n    if (name && !key) {\n      return console.log(this[name]);\n    }\n\n    if (name && key) {\n      return console.log(this[name][key]);\n    }\n  }\n\n  validate(name, key, operation) {\n    if (operation === \"add\") {\n      if (!this[name]) {\n        console.warn(`Cannot \"${operation}\". Cache \"${name}\" does not exist`);\n        return false;\n      }\n    }\n\n    if (operation === \"readSet\") {\n      if (!this[name]) {\n        console.warn(`Cannot \"${operation}\". Cache \"${name}\" does not exist`);\n        return false;\n      }\n\n      if (key && !this[name][key]) {\n        console.warn(\n          `Cannot \"${operation}\". Cache ${name}.${key} does not exist`\n        );\n        return false;\n      }\n    }\n\n    if (operation === \"read\") {\n      if (!this[name]) {\n        console.warn(`Cannot \"${operation}\". Cache \"${name}\" does not exist`);\n        return false;\n      }\n\n      if (key && !this[name][key]) {\n        console.warn(\n          `Cannot \"${operation}\". Cache ${name}.${key} does not exist`\n        );\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n","import { Component } from \"geotic\";\n\nexport default class IsDead extends Component {}\n","import { Component } from \"geotic\";\nimport { colors } from \"../lib/graphics\";\nimport { SOIL } from \"../state/events\";\n\nexport default class Soilage extends Component {\n  static allowMultiple = true;\n\n  static properties = {\n    color: colors.defaultColor,\n    name: \"blood\",\n    sourceName: \"\",\n    sourceEntityId: \"\",\n  };\n\n  onAttached(evt) {\n    this.entity.fireEvent(SOIL, { color: this.color });\n  }\n\n  onClean(evt) {\n    this.destroy();\n  }\n}\n","import Appearance from \"../components/Appearance\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport Position from \"../components/Position\";\nimport { chars, colors } from \"../lib/graphics\";\nimport Layer300 from \"../components/Layer300\";\nimport Name from \"../components/Name\";\nimport CanLegend from \"../components/CanLegend\";\n\nexport default {\n  name: \"BonfirePrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.campfire,\n        char: chars.campfire,\n      },\n    },\n    { type: IsBlocking },\n    { type: Layer300 },\n    { type: Position },\n    { type: Name, properties: { nomen: \"bonfire\" } },\n    { type: CanLegend },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport Layer400 from \"../components/Layer400\";\nimport Name from \"../components/Name\";\nimport Position from \"../components/Position\";\n\nimport { chars, colors } from \"../lib/graphics\";\n\nexport default {\n  name: \"CharPrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: \"#FFF\",\n        char: chars.floor,\n      },\n    },\n    { type: Layer400 },\n    { type: Position },\n    { type: Name, properties: { nomen: \"char\" } },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport Description from \"../components/Description\";\nimport Layer100 from \"../components/Layer100\";\nimport Name from \"../components/Name\";\nimport Position from \"../components/Position\";\n\nimport { chars, colors } from \"../lib/graphics\";\n\nexport default {\n  name: \"FloorPrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.floor,\n        char: chars.floor,\n      },\n    },\n    { type: Layer100 },\n    { type: Position },\n    { type: Name, properties: { nomen: \"floor\" } },\n    {\n      type: Description,\n      properties: {\n        text: \"The hard stone is cold beneath my feet.\",\n        default: \"The hard stone is cold beneath my feet.\",\n        soiled: \"The floor is sticky with [SOILAGE].\",\n        dead: \"\",\n      },\n    },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport Position from \"../components/Position\";\nimport { chars, colors } from \"../lib/graphics\";\nimport Layer300 from \"../components/Layer300\";\nimport Name from \"../components/Name\";\nimport CanLegend from \"../components/CanLegend\";\nimport Description from \"../components/Description\";\n\nexport default {\n  name: \"FountainPrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.fountain,\n        char: chars.fountain,\n      },\n    },\n    { type: IsBlocking },\n    { type: Layer300 },\n    { type: Position },\n    { type: Name, properties: { nomen: \"fountain\" } },\n    { type: CanLegend },\n\n    {\n      type: Description,\n      properties: {\n        text: \"It's a fountain!\",\n        default: \"It's a fountain!\",\n        soiled: \"\",\n        dead: \"\",\n      },\n    },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport Blood from \"../components/Blood\";\nimport isBoneless from \"../components/isBoneless\";\nimport Brain from \"../components/Brain\";\nimport CanAbsorb from \"../components/CanAbsorb\";\nimport Description from \"../components/Description\";\nimport Health from \"../components/Health\";\nimport Position from \"../components/Position\";\nimport { colors } from \"../lib/graphics\";\nimport Layer400 from \"../components/Layer400\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport Name from \"../components/Name\";\nimport CanLegend from \"../components/CanLegend\";\n\nexport default {\n  name: \"GelatinousCubePrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: \"\",\n        char: \"\",\n        background: colors.gelatinousCube,\n      },\n    },\n    { type: Blood, properties: { color: colors.gelatinousCube } },\n    { type: Brain, properties: { ai: \"gelatinousCube\" } },\n    { type: CanAbsorb },\n    { type: Health, properties: { current: 100, max: 100 } },\n    { type: IsBlocking },\n    { type: isBoneless },\n    { type: Layer400 },\n    { type: Name, properties: { nomen: \"Jelly\" } },\n    { type: Position },\n    { type: CanLegend },\n    {\n      type: Description,\n      properties: {\n        text: \"It's a woobly, wobbly jelly!\",\n        default: \"It's a woobly, wobbly jelly!\",\n        soiled: \"\",\n        dead: \"Chunks of jelly are scattered about.\",\n      },\n    },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport Blood from \"../components/Blood\";\nimport Brain from \"../components/Brain\";\nimport Description from \"../components/Description\";\nimport Health from \"../components/Health\";\nimport Position from \"../components/Position\";\nimport { chars, colors } from \"../lib/graphics\";\nimport Layer400 from \"../components/Layer400\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport Name from \"../components/Name\";\nimport CanLegend from \"../components/CanLegend\";\n\nexport default {\n  name: \"GoblinPrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.goblin,\n        char: chars.goblin,\n      },\n    },\n    { type: Blood },\n    { type: Brain, properties: { ai: \"goblin\" } },\n    { type: Health, properties: { current: 10, max: 10 } },\n    { type: IsBlocking },\n    { type: Layer400 },\n    { type: Name, properties: { nomen: \"goblin\" } },\n    { type: Position },\n    { type: CanLegend },\n    {\n      type: Description,\n      properties: {\n        text: \"It's a stinky snarling goblin.\",\n        default: \"It's a stinky snarling goblin.\",\n        soiled: \"The floor is sticky with [SOILAGE].\",\n        dead: \"The crumpled corpse of a dirty goblin lay at my feet.\",\n      },\n    },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport Blood from \"../components/Blood\";\nimport Health from \"../components/Health\";\nimport Position from \"../components/Position\";\nimport { chars, colors } from \"../lib/graphics\";\nimport Layer400 from \"../components/Layer400\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport Name from \"../components/Name\";\nimport CanLegend from \"../components/CanLegend\";\n\nexport default {\n  name: \"PlayerPrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.player,\n        char: chars.player,\n      },\n    },\n    { type: Blood },\n    { type: Health, properties: { current: 50, max: 50 } },\n    { type: IsBlocking },\n    { type: Layer400 },\n    { type: Name, properties: { nomen: \"player\" } },\n    { type: Position },\n    { type: CanLegend },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport Brain from \"../components/Brain\";\nimport Health from \"../components/Health\";\nimport Position from \"../components/Position\";\nimport { chars, colors } from \"../lib/graphics\";\nimport Layer400 from \"../components/Layer400\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport Name from \"../components/Name\";\nimport CanLegend from \"../components/CanLegend\";\nimport Description from \"../components/Description\";\n\nexport default {\n  name: \"SkeletonPrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.skeleton,\n        char: chars.skeleton,\n      },\n    },\n    { type: Brain, properties: { ai: \"skeleton\" } },\n    { type: Health, properties: { current: 30, max: 30 } },\n    { type: IsBlocking },\n    { type: Layer400 },\n    { type: Name, properties: { nomen: \"skeleton\" } },\n    { type: Position },\n    { type: CanLegend },\n    {\n      type: Description,\n      properties: {\n        text: \"It's a dead eyed skeleton!\",\n        default: \"It's a dead eyed skeleton!\",\n        soiled: \"\",\n        dead: \"The shattered remains of a skeleton are on the floor.\",\n      },\n    },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport IsOpaque from \"../components/IsOpaque\";\nimport Layer100 from \"../components/Layer100\";\nimport Position from \"../components/Position\";\nimport Description from \"../components/Description\";\n\nimport { chars, colors } from \"../lib/graphics\";\nimport Name from \"../components/Name\";\n\nexport default {\n  name: \"WallPrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.wall,\n        char: chars.wall,\n      },\n    },\n    { type: IsBlocking },\n    { type: IsOpaque },\n    { type: Layer100 },\n    { type: Position },\n    { type: Name, properties: { nomen: \"wall\" } },\n    {\n      type: Description,\n      properties: {\n        text: \"The wall is hard and unmoving.\",\n        default: \"The wall is hard and unmoving.\",\n        soiled: \"The wall is splattered with [SOILAGE]\",\n        dead: \"\",\n      },\n    },\n  ],\n};\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = {\r\n    'Heap'                      : require('heap'),\r\n    'Node'                      : require('./core/Node'),\r\n    'Grid'                      : require('./core/Grid'),\r\n    'Util'                      : require('./core/Util'),\r\n    'DiagonalMovement'          : require('./core/DiagonalMovement'),\r\n    'Heuristic'                 : require('./core/Heuristic'),\r\n    'AStarFinder'               : require('./finders/AStarFinder'),\r\n    'BestFirstFinder'           : require('./finders/BestFirstFinder'),\r\n    'BreadthFirstFinder'        : require('./finders/BreadthFirstFinder'),\r\n    'DijkstraFinder'            : require('./finders/DijkstraFinder'),\r\n    'BiAStarFinder'             : require('./finders/BiAStarFinder'),\r\n    'BiBestFirstFinder'         : require('./finders/BiBestFirstFinder'),\r\n    'BiBreadthFirstFinder'      : require('./finders/BiBreadthFirstFinder'),\r\n    'BiDijkstraFinder'          : require('./finders/BiDijkstraFinder'),\r\n    'IDAStarFinder'             : require('./finders/IDAStarFinder'),\r\n    'JumpPointFinder'           : require('./finders/JumpPointFinder'),\r\n};\r\n","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  if (typeof module !== \"undefined\" && module !== null ? module.exports : void 0) {\n    module.exports = Heap;\n  } else {\n    window.Heap = Heap;\n  }\n\n}).call(this);\n","var Node = require('./Node');\r\nvar DiagonalMovement = require('./DiagonalMovement');\r\n\r\n/**\r\n * The Grid class, which serves as the encapsulation of the layout of the nodes.\r\n * @constructor\r\n * @param {number|Array<Array<(number|boolean)>>} width_or_matrix Number of columns of the grid, or matrix\r\n * @param {number} height Number of rows of the grid.\r\n * @param {Array<Array<(number|boolean)>>} [matrix] - A 0-1 matrix\r\n *     representing the walkable status of the nodes(0 or false for walkable).\r\n *     If the matrix is not supplied, all the nodes will be walkable.  */\r\nfunction Grid(width_or_matrix, height, matrix) {\r\n    var width;\r\n\r\n    if (typeof width_or_matrix !== 'object') {\r\n        width = width_or_matrix;\r\n    } else {\r\n        height = width_or_matrix.length;\r\n        width = width_or_matrix[0].length;\r\n        matrix = width_or_matrix;\r\n    }\r\n\r\n    /**\r\n     * The number of columns of the grid.\r\n     * @type number\r\n     */\r\n    this.width = width;\r\n    /**\r\n     * The number of rows of the grid.\r\n     * @type number\r\n     */\r\n    this.height = height;\r\n\r\n    /**\r\n     * A 2D array of nodes.\r\n     */\r\n    this.nodes = this._buildNodes(width, height, matrix);\r\n}\r\n\r\n/**\r\n * Build and return the nodes.\r\n * @private\r\n * @param {number} width\r\n * @param {number} height\r\n * @param {Array<Array<number|boolean>>} [matrix] - A 0-1 matrix representing\r\n *     the walkable status of the nodes.\r\n * @see Grid\r\n */\r\nGrid.prototype._buildNodes = function(width, height, matrix) {\r\n    var i, j,\r\n        nodes = new Array(height);\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        nodes[i] = new Array(width);\r\n        for (j = 0; j < width; ++j) {\r\n            nodes[i][j] = new Node(j, i);\r\n        }\r\n    }\r\n\r\n\r\n    if (matrix === undefined) {\r\n        return nodes;\r\n    }\r\n\r\n    if (matrix.length !== height || matrix[0].length !== width) {\r\n        throw new Error('Matrix size does not fit');\r\n    }\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        for (j = 0; j < width; ++j) {\r\n            if (matrix[i][j]) {\r\n                // 0, false, null will be walkable\r\n                // while others will be un-walkable\r\n                nodes[i][j].walkable = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return nodes;\r\n};\r\n\r\n\r\nGrid.prototype.getNodeAt = function(x, y) {\r\n    return this.nodes[y][x];\r\n};\r\n\r\n\r\n/**\r\n * Determine whether the node at the given position is walkable.\r\n * (Also returns false if the position is outside the grid.)\r\n * @param {number} x - The x coordinate of the node.\r\n * @param {number} y - The y coordinate of the node.\r\n * @return {boolean} - The walkability of the node.\r\n */\r\nGrid.prototype.isWalkableAt = function(x, y) {\r\n    return this.isInside(x, y) && this.nodes[y][x].walkable;\r\n};\r\n\r\n\r\n/**\r\n * Determine whether the position is inside the grid.\r\n * XXX: `grid.isInside(x, y)` is wierd to read.\r\n * It should be `(x, y) is inside grid`, but I failed to find a better\r\n * name for this method.\r\n * @param {number} x\r\n * @param {number} y\r\n * @return {boolean}\r\n */\r\nGrid.prototype.isInside = function(x, y) {\r\n    return (x >= 0 && x < this.width) && (y >= 0 && y < this.height);\r\n};\r\n\r\n\r\n/**\r\n * Set whether the node on the given position is walkable.\r\n * NOTE: throws exception if the coordinate is not inside the grid.\r\n * @param {number} x - The x coordinate of the node.\r\n * @param {number} y - The y coordinate of the node.\r\n * @param {boolean} walkable - Whether the position is walkable.\r\n */\r\nGrid.prototype.setWalkableAt = function(x, y, walkable) {\r\n    this.nodes[y][x].walkable = walkable;\r\n};\r\n\r\n\r\n/**\r\n * Get the neighbors of the given node.\r\n *\r\n *     offsets      diagonalOffsets:\r\n *  +---+---+---+    +---+---+---+\r\n *  |   | 0 |   |    | 0 |   | 1 |\r\n *  +---+---+---+    +---+---+---+\r\n *  | 3 |   | 1 |    |   |   |   |\r\n *  +---+---+---+    +---+---+---+\r\n *  |   | 2 |   |    | 3 |   | 2 |\r\n *  +---+---+---+    +---+---+---+\r\n *\r\n *  When allowDiagonal is true, if offsets[i] is valid, then\r\n *  diagonalOffsets[i] and\r\n *  diagonalOffsets[(i + 1) % 4] is valid.\r\n * @param {Node} node\r\n * @param {DiagonalMovement} diagonalMovement\r\n */\r\nGrid.prototype.getNeighbors = function(node, diagonalMovement) {\r\n    var x = node.x,\r\n        y = node.y,\r\n        neighbors = [],\r\n        s0 = false, d0 = false,\r\n        s1 = false, d1 = false,\r\n        s2 = false, d2 = false,\r\n        s3 = false, d3 = false,\r\n        nodes = this.nodes;\r\n\r\n    // ↑\r\n    if (this.isWalkableAt(x, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x]);\r\n        s0 = true;\r\n    }\r\n    // →\r\n    if (this.isWalkableAt(x + 1, y)) {\r\n        neighbors.push(nodes[y][x + 1]);\r\n        s1 = true;\r\n    }\r\n    // ↓\r\n    if (this.isWalkableAt(x, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x]);\r\n        s2 = true;\r\n    }\r\n    // ←\r\n    if (this.isWalkableAt(x - 1, y)) {\r\n        neighbors.push(nodes[y][x - 1]);\r\n        s3 = true;\r\n    }\r\n\r\n    if (diagonalMovement === DiagonalMovement.Never) {\r\n        return neighbors;\r\n    }\r\n\r\n    if (diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\r\n        d0 = s3 && s0;\r\n        d1 = s0 && s1;\r\n        d2 = s1 && s2;\r\n        d3 = s2 && s3;\r\n    } else if (diagonalMovement === DiagonalMovement.IfAtMostOneObstacle) {\r\n        d0 = s3 || s0;\r\n        d1 = s0 || s1;\r\n        d2 = s1 || s2;\r\n        d3 = s2 || s3;\r\n    } else if (diagonalMovement === DiagonalMovement.Always) {\r\n        d0 = true;\r\n        d1 = true;\r\n        d2 = true;\r\n        d3 = true;\r\n    } else {\r\n        throw new Error('Incorrect value of diagonalMovement');\r\n    }\r\n\r\n    // ↖\r\n    if (d0 && this.isWalkableAt(x - 1, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x - 1]);\r\n    }\r\n    // ↗\r\n    if (d1 && this.isWalkableAt(x + 1, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x + 1]);\r\n    }\r\n    // ↘\r\n    if (d2 && this.isWalkableAt(x + 1, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x + 1]);\r\n    }\r\n    // ↙\r\n    if (d3 && this.isWalkableAt(x - 1, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x - 1]);\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\n\r\n/**\r\n * Get a clone of this grid.\r\n * @return {Grid} Cloned grid.\r\n */\r\nGrid.prototype.clone = function() {\r\n    var i, j,\r\n\r\n        width = this.width,\r\n        height = this.height,\r\n        thisNodes = this.nodes,\r\n\r\n        newGrid = new Grid(width, height),\r\n        newNodes = new Array(height);\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        newNodes[i] = new Array(width);\r\n        for (j = 0; j < width; ++j) {\r\n            newNodes[i][j] = new Node(j, i, thisNodes[i][j].walkable);\r\n        }\r\n    }\r\n\r\n    newGrid.nodes = newNodes;\r\n\r\n    return newGrid;\r\n};\r\n\r\nmodule.exports = Grid;\r\n","var AStarFinder = require('./AStarFinder');\r\n\r\n/**\r\n * Best-First-Search path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction BestFirstFinder(opt) {\r\n    AStarFinder.call(this, opt);\r\n\r\n    var orig = this.heuristic;\r\n    this.heuristic = function(dx, dy) {\r\n        return orig(dx, dy) * 1000000;\r\n    };\r\n}\r\n\r\nBestFirstFinder.prototype = new AStarFinder();\r\nBestFirstFinder.prototype.constructor = BestFirstFinder;\r\n\r\nmodule.exports = BestFirstFinder;\r\n","var Util = require('../core/Util');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Breadth-First-Search path finder.\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BreadthFirstFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBreadthFirstFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = [],\r\n        diagonalMovement = this.diagonalMovement,\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        neighbors, neighbor, node, i, l;\r\n\r\n    // push the start pos into the queue\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the queue is not empty\r\n    while (openList.length) {\r\n        // take the front node from the queue\r\n        node = openList.shift();\r\n        node.closed = true;\r\n\r\n        // reached the end position\r\n        if (node === endNode) {\r\n            return Util.backtrace(endNode);\r\n        }\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            // skip this neighbor if it has been inspected before\r\n            if (neighbor.closed || neighbor.opened) {\r\n                continue;\r\n            }\r\n\r\n            openList.push(neighbor);\r\n            neighbor.opened = true;\r\n            neighbor.parent = node;\r\n        }\r\n    }\r\n    \r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BreadthFirstFinder;\r\n","var AStarFinder = require('./AStarFinder');\r\n\r\n/**\r\n * Dijkstra path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction DijkstraFinder(opt) {\r\n    AStarFinder.call(this, opt);\r\n    this.heuristic = function(dx, dy) {\r\n        return 0;\r\n    };\r\n}\r\n\r\nDijkstraFinder.prototype = new AStarFinder();\r\nDijkstraFinder.prototype.constructor = DijkstraFinder;\r\n\r\nmodule.exports = DijkstraFinder;\r\n","var BiAStarFinder = require('./BiAStarFinder');\r\n\r\n/**\r\n * Bi-direcitional Best-First-Search path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction BiBestFirstFinder(opt) {\r\n    BiAStarFinder.call(this, opt);\r\n\r\n    var orig = this.heuristic;\r\n    this.heuristic = function(dx, dy) {\r\n        return orig(dx, dy) * 1000000;\r\n    };\r\n}\r\n\r\nBiBestFirstFinder.prototype = new BiAStarFinder();\r\nBiBestFirstFinder.prototype.constructor = BiBestFirstFinder;\r\n\r\nmodule.exports = BiBestFirstFinder;\r\n","var Util = require('../core/Util');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Bi-directional Breadth-First-Search path finder.\r\n * @constructor\r\n * @param {object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BiBreadthFirstFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBiBreadthFirstFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        startOpenList = [], endOpenList = [],\r\n        neighbors, neighbor, node,\r\n        diagonalMovement = this.diagonalMovement,\r\n        BY_START = 0, BY_END = 1,\r\n        i, l;\r\n\r\n    // push the start and end nodes into the queues\r\n    startOpenList.push(startNode);\r\n    startNode.opened = true;\r\n    startNode.by = BY_START;\r\n\r\n    endOpenList.push(endNode);\r\n    endNode.opened = true;\r\n    endNode.by = BY_END;\r\n\r\n    // while both the queues are not empty\r\n    while (startOpenList.length && endOpenList.length) {\r\n\r\n        // expand start open list\r\n\r\n        node = startOpenList.shift();\r\n        node.closed = true;\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened) {\r\n                // if this node has been inspected by the reversed search,\r\n                // then a path is found.\r\n                if (neighbor.by === BY_END) {\r\n                    return Util.biBacktrace(node, neighbor);\r\n                }\r\n                continue;\r\n            }\r\n            startOpenList.push(neighbor);\r\n            neighbor.parent = node;\r\n            neighbor.opened = true;\r\n            neighbor.by = BY_START;\r\n        }\r\n\r\n        // expand end open list\r\n\r\n        node = endOpenList.shift();\r\n        node.closed = true;\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened) {\r\n                if (neighbor.by === BY_START) {\r\n                    return Util.biBacktrace(neighbor, node);\r\n                }\r\n                continue;\r\n            }\r\n            endOpenList.push(neighbor);\r\n            neighbor.parent = node;\r\n            neighbor.opened = true;\r\n            neighbor.by = BY_END;\r\n        }\r\n    }\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BiBreadthFirstFinder;\r\n","var BiAStarFinder = require('./BiAStarFinder');\r\n\r\n/**\r\n * Bi-directional Dijkstra path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BiDijkstraFinder(opt) {\r\n    BiAStarFinder.call(this, opt);\r\n    this.heuristic = function(dx, dy) {\r\n        return 0;\r\n    };\r\n}\r\n\r\nBiDijkstraFinder.prototype = new BiAStarFinder();\r\nBiDijkstraFinder.prototype.constructor = BiDijkstraFinder;\r\n\r\nmodule.exports = BiDijkstraFinder;\r\n","var Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar Node       = require('../core/Node');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Iterative Deeping A Star (IDA*) path-finder.\r\n *\r\n * Recursion based on:\r\n *   http://www.apl.jhu.edu/~hall/AI-Programming/IDA-Star.html\r\n *\r\n * Path retracing based on:\r\n *  V. Nageshwara Rao, Vipin Kumar and K. Ramesh\r\n *  \"A Parallel Implementation of Iterative-Deeping-A*\", January 1987.\r\n *  ftp://ftp.cs.utexas.edu/.snapshot/hourly.1/pub/AI-Lab/tech-reports/UT-AI-TR-87-46.pdf\r\n *\r\n * @author Gerard Meier (www.gerardmeier.com)\r\n *\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n * @param {boolean} opt.trackRecursion Whether to track recursion for\r\n *     statistical purposes.\r\n * @param {number} opt.timeLimit Maximum execution time. Use <= 0 for infinite.\r\n */\r\nfunction IDAStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n    this.trackRecursion = opt.trackRecursion || false;\r\n    this.timeLimit = opt.timeLimit || Infinity; // Default: no time limit.\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    // When diagonal movement is allowed the manhattan heuristic is not\r\n    // admissible, it should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path. When an empty array is returned, either\r\n * no path is possible, or the maximum execution time is reached.\r\n *\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nIDAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    // Used for statistics:\r\n    var nodesVisited = 0;\r\n\r\n    // Execution time limitation:\r\n    var startTime = new Date().getTime();\r\n\r\n    // Heuristic helper:\r\n    var h = function(a, b) {\r\n        return this.heuristic(Math.abs(b.x - a.x), Math.abs(b.y - a.y));\r\n    }.bind(this);\r\n\r\n    // Step cost from a to b:\r\n    var cost = function(a, b) {\r\n        return (a.x === b.x || a.y === b.y) ? 1 : Math.SQRT2;\r\n    };\r\n\r\n    /**\r\n     * IDA* search implementation.\r\n     *\r\n     * @param {Node} The node currently expanding from.\r\n     * @param {number} Cost to reach the given node.\r\n     * @param {number} Maximum search depth (cut-off value).\r\n     * @param {Array<Array<number>>} The found route.\r\n     * @param {number} Recursion depth.\r\n     *\r\n     * @return {Object} either a number with the new optimal cut-off depth,\r\n     * or a valid node instance, in which case a path was found.\r\n     */\r\n    var search = function(node, g, cutoff, route, depth) {\r\n        nodesVisited++;\r\n\r\n        // Enforce timelimit:\r\n        if (this.timeLimit > 0 &&\r\n            new Date().getTime() - startTime > this.timeLimit * 1000) {\r\n            // Enforced as \"path-not-found\".\r\n            return Infinity;\r\n        }\r\n\r\n        var f = g + h(node, end) * this.weight;\r\n\r\n        // We've searched too deep for this iteration.\r\n        if (f > cutoff) {\r\n            return f;\r\n        }\r\n\r\n        if (node == end) {\r\n            route[depth] = [node.x, node.y];\r\n            return node;\r\n        }\r\n\r\n        var min, t, k, neighbour;\r\n\r\n        var neighbours = grid.getNeighbors(node, this.diagonalMovement);\r\n\r\n        // Sort the neighbours, gives nicer paths. But, this deviates\r\n        // from the original algorithm - so I left it out.\r\n        //neighbours.sort(function(a, b){\r\n        //    return h(a, end) - h(b, end);\r\n        //});\r\n\r\n        \r\n        /*jshint -W084 *///Disable warning: Expected a conditional expression and instead saw an assignment\r\n        for (k = 0, min = Infinity; neighbour = neighbours[k]; ++k) {\r\n        /*jshint +W084 *///Enable warning: Expected a conditional expression and instead saw an assignment\r\n            if (this.trackRecursion) {\r\n                // Retain a copy for visualisation. Due to recursion, this\r\n                // node may be part of other paths too.\r\n                neighbour.retainCount = neighbour.retainCount + 1 || 1;\r\n\r\n                if(neighbour.tested !== true) {\r\n                    neighbour.tested = true;\r\n                }\r\n            }\r\n\r\n            t = search(neighbour, g + cost(node, neighbour), cutoff, route, depth + 1);\r\n\r\n            if (t instanceof Node) {\r\n                route[depth] = [node.x, node.y];\r\n\r\n                // For a typical A* linked list, this would work:\r\n                // neighbour.parent = node;\r\n                return t;\r\n            }\r\n\r\n            // Decrement count, then determine whether it's actually closed.\r\n            if (this.trackRecursion && (--neighbour.retainCount) === 0) {\r\n                neighbour.tested = false;\r\n            }\r\n\r\n            if (t < min) {\r\n                min = t;\r\n            }\r\n        }\r\n\r\n        return min;\r\n\r\n    }.bind(this);\r\n\r\n    // Node instance lookups:\r\n    var start = grid.getNodeAt(startX, startY);\r\n    var end   = grid.getNodeAt(endX, endY);\r\n\r\n    // Initial search depth, given the typical heuristic contraints,\r\n    // there should be no cheaper route possible.\r\n    var cutOff = h(start, end);\r\n\r\n    var j, route, t;\r\n\r\n    // With an overflow protection.\r\n    for (j = 0; true; ++j) {\r\n\r\n        route = [];\r\n\r\n        // Search till cut-off depth:\r\n        t = search(start, 0, cutOff, route, 0);\r\n\r\n        // Route not possible, or not found in time limit.\r\n        if (t === Infinity) {\r\n            return [];\r\n        }\r\n\r\n        // If t is a node, it's also the end node. Route is now\r\n        // populated with a valid path to the end node.\r\n        if (t instanceof Node) {\r\n            return route;\r\n        }\r\n\r\n        // Try again, this time with a deeper cut-off. The t score\r\n        // is the closest we got to the end node.\r\n        cutOff = t;\r\n    }\r\n\r\n    // This _should_ never to be reached.\r\n    return [];\r\n};\r\n\r\nmodule.exports = IDAStarFinder;\r\n","/**\r\n * @author aniero / https://github.com/aniero\r\n */\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\nvar JPFNeverMoveDiagonally = require('./JPFNeverMoveDiagonally');\r\nvar JPFAlwaysMoveDiagonally = require('./JPFAlwaysMoveDiagonally');\r\nvar JPFMoveDiagonallyIfNoObstacles = require('./JPFMoveDiagonallyIfNoObstacles');\r\nvar JPFMoveDiagonallyIfAtMostOneObstacle = require('./JPFMoveDiagonallyIfAtMostOneObstacle');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm\r\n * @param {Object} opt\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {DiagonalMovement} opt.diagonalMovement Condition under which diagonal\r\n *      movement will be allowed.\r\n */\r\nfunction JumpPointFinder(opt) {\r\n    opt = opt || {};\r\n    if (opt.diagonalMovement === DiagonalMovement.Never) {\r\n        return new JPFNeverMoveDiagonally(opt);\r\n    } else if (opt.diagonalMovement === DiagonalMovement.Always) {\r\n        return new JPFAlwaysMoveDiagonally(opt);\r\n    } else if (opt.diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\r\n        return new JPFMoveDiagonallyIfNoObstacles(opt);\r\n    } else {\r\n        return new JPFMoveDiagonallyIfAtMostOneObstacle(opt);\r\n    }\r\n}\r\n\r\nmodule.exports = JumpPointFinder;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm allowing only horizontal\r\n * or vertical movements.\r\n */\r\nfunction JPFNeverMoveDiagonally(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFNeverMoveDiagonally.prototype = new JumpPointFinderBase();\r\nJPFNeverMoveDiagonally.prototype.constructor = JPFNeverMoveDiagonally;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFNeverMoveDiagonally.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    if (dx !== 0) {\r\n        if ((grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1)) ||\r\n            (grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1))) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    else if (dy !== 0) {\r\n        if ((grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy)) ||\r\n            (grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        //When moving vertically, must check for horizontal jump points\r\n        if (this._jump(x + 1, y, x, y) || this._jump(x - 1, y, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(\"Only horizontal and vertical movements are allowed\");\r\n    }\r\n\r\n    return this._jump(x + dx, y + dy, x, y);\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFNeverMoveDiagonally.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        if (dx !== 0) {\r\n            if (grid.isWalkableAt(x, y - 1)) {\r\n                neighbors.push([x, y - 1]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + 1)) {\r\n                neighbors.push([x, y + 1]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n        }\r\n        else if (dy !== 0) {\r\n            if (grid.isWalkableAt(x - 1, y)) {\r\n                neighbors.push([x - 1, y]);\r\n            }\r\n            if (grid.isWalkableAt(x + 1, y)) {\r\n                neighbors.push([x + 1, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Never);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFNeverMoveDiagonally;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which always moves\r\n * diagonally irrespective of the number of obstacles.\r\n */\r\nfunction JPFAlwaysMoveDiagonally(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFAlwaysMoveDiagonally.prototype = new JumpPointFinderBase();\r\nJPFAlwaysMoveDiagonally.prototype.constructor = JPFAlwaysMoveDiagonally;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFAlwaysMoveDiagonally.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if( dx !== 0 ) { // moving along x\r\n            if((grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1)) ||\r\n               (grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else {\r\n            if((grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y)) ||\r\n               (grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n    }\r\n\r\n    return this._jump(x + dx, y + dy, x, y);\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFAlwaysMoveDiagonally.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y + dy)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x - dx, y)) {\r\n                neighbors.push([x - dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x, y - dy)) {\r\n                neighbors.push([x + dx, y - dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            if(dx === 0) {\r\n                if (grid.isWalkableAt(x, y + dy)) {\r\n                    neighbors.push([x, y + dy]);\r\n                }\r\n                if (!grid.isWalkableAt(x + 1, y)) {\r\n                    neighbors.push([x + 1, y + dy]);\r\n                }\r\n                if (!grid.isWalkableAt(x - 1, y)) {\r\n                    neighbors.push([x - 1, y + dy]);\r\n                }\r\n            }\r\n            else {\r\n                if (grid.isWalkableAt(x + dx, y)) {\r\n                    neighbors.push([x + dx, y]);\r\n                }\r\n                if (!grid.isWalkableAt(x, y + 1)) {\r\n                    neighbors.push([x + dx, y + 1]);\r\n                }\r\n                if (!grid.isWalkableAt(x, y - 1)) {\r\n                    neighbors.push([x + dx, y - 1]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Always);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFAlwaysMoveDiagonally;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which moves\r\n * diagonally only when there are no obstacles.\r\n */\r\nfunction JPFMoveDiagonallyIfNoObstacles(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFMoveDiagonallyIfNoObstacles.prototype = new JumpPointFinderBase();\r\nJPFMoveDiagonallyIfNoObstacles.prototype.constructor = JPFMoveDiagonallyIfNoObstacles;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFMoveDiagonallyIfNoObstacles.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        // if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            // (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            // return [x, y];\r\n        // }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if (dx !== 0) {\r\n            if ((grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1)) ||\r\n                (grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else if (dy !== 0) {\r\n            if ((grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy)) ||\r\n                (grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy))) {\r\n                return [x, y];\r\n            }\r\n            // When moving vertically, must check for horizontal jump points\r\n            // if (this._jump(x + 1, y, x, y) || this._jump(x - 1, y, x, y)) {\r\n                // return [x, y];\r\n            // }\r\n        }\r\n    }\r\n\r\n    // moving diagonally, must make sure one of the vertical/horizontal\r\n    // neighbors is open to allow the path\r\n    if (grid.isWalkableAt(x + dx, y) && grid.isWalkableAt(x, y + dy)) {\r\n        return this._jump(x + dx, y + dy, x, y);\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFMoveDiagonallyIfNoObstacles.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy) && grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            var isNextWalkable;\r\n            if (dx !== 0) {\r\n                isNextWalkable = grid.isWalkableAt(x + dx, y);\r\n                var isTopWalkable = grid.isWalkableAt(x, y + 1);\r\n                var isBottomWalkable = grid.isWalkableAt(x, y - 1);\r\n\r\n                if (isNextWalkable) {\r\n                    neighbors.push([x + dx, y]);\r\n                    if (isTopWalkable) {\r\n                        neighbors.push([x + dx, y + 1]);\r\n                    }\r\n                    if (isBottomWalkable) {\r\n                        neighbors.push([x + dx, y - 1]);\r\n                    }\r\n                }\r\n                if (isTopWalkable) {\r\n                    neighbors.push([x, y + 1]);\r\n                }\r\n                if (isBottomWalkable) {\r\n                    neighbors.push([x, y - 1]);\r\n                }\r\n            }\r\n            else if (dy !== 0) {\r\n                isNextWalkable = grid.isWalkableAt(x, y + dy);\r\n                var isRightWalkable = grid.isWalkableAt(x + 1, y);\r\n                var isLeftWalkable = grid.isWalkableAt(x - 1, y);\r\n\r\n                if (isNextWalkable) {\r\n                    neighbors.push([x, y + dy]);\r\n                    if (isRightWalkable) {\r\n                        neighbors.push([x + 1, y + dy]);\r\n                    }\r\n                    if (isLeftWalkable) {\r\n                        neighbors.push([x - 1, y + dy]);\r\n                    }\r\n                }\r\n                if (isRightWalkable) {\r\n                    neighbors.push([x + 1, y]);\r\n                }\r\n                if (isLeftWalkable) {\r\n                    neighbors.push([x - 1, y]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.OnlyWhenNoObstacles);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFMoveDiagonallyIfNoObstacles;\r\n","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which moves\r\n * diagonally only when there is at most one obstacle.\r\n */\r\nfunction JPFMoveDiagonallyIfAtMostOneObstacle(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype = new JumpPointFinderBase();\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype.constructor = JPFMoveDiagonallyIfAtMostOneObstacle;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if( dx !== 0 ) { // moving along x\r\n            if((grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1)) ||\r\n               (grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else {\r\n            if((grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y)) ||\r\n               (grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n    }\r\n\r\n    // moving diagonally, must make sure one of the vertical/horizontal\r\n    // neighbors is open to allow the path\r\n    if (grid.isWalkableAt(x + dx, y) || grid.isWalkableAt(x, y + dy)) {\r\n        return this._jump(x + dx, y + dy, x, y);\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy) || grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x - dx, y) && grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x - dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x, y - dy) && grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y - dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            if(dx === 0) {\r\n                if (grid.isWalkableAt(x, y + dy)) {\r\n                    neighbors.push([x, y + dy]);\r\n                    if (!grid.isWalkableAt(x + 1, y)) {\r\n                        neighbors.push([x + 1, y + dy]);\r\n                    }\r\n                    if (!grid.isWalkableAt(x - 1, y)) {\r\n                        neighbors.push([x - 1, y + dy]);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (grid.isWalkableAt(x + dx, y)) {\r\n                    neighbors.push([x + dx, y]);\r\n                    if (!grid.isWalkableAt(x, y + 1)) {\r\n                        neighbors.push([x + dx, y + 1]);\r\n                    }\r\n                    if (!grid.isWalkableAt(x, y - 1)) {\r\n                        neighbors.push([x + dx, y - 1]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.IfAtMostOneObstacle);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFMoveDiagonallyIfAtMostOneObstacle;\r\n","import { grid } from \"../lib/canvas\";\nimport { sample } from \"lodash\";\n\nexport const CARDINAL = [\n  { x: 0, y: -1 }, // N\n  { x: 1, y: 0 }, // E\n  { x: 0, y: 1 }, // S\n  { x: -1, y: 0 }, // W\n];\n\nexport const DIAGONAL = [\n  { x: 1, y: -1 }, // NE\n  { x: 1, y: 1 }, // SE\n  { x: -1, y: 1 }, // SW\n  { x: -1, y: -1 }, // NW\n];\n\nexport const ALL = [...CARDINAL, ...DIAGONAL];\n\nexport const toCell = (cellOrId) => {\n  let cell = cellOrId;\n  if (typeof cell === \"string\") cell = idToCell(cell);\n\n  return cell;\n};\n\nexport const toLocId = (cellOrId) => {\n  let locId = cellOrId;\n  if (typeof locId !== \"string\") locId = cellToId(locId);\n\n  return locId;\n};\n\nexport const rectangle = ({ x, y, width, height, hasWalls }, tileProps) => {\n  const tiles = {};\n\n  const x1 = x;\n  const x2 = x + width;\n  const y1 = y;\n  const y2 = y + height;\n\n  if (hasWalls) {\n    for (let yi = y1 + 1; yi < y2 - 1; yi++) {\n      for (let xi = x1 + 1; xi < x2 - 1; xi++) {\n        tiles[`${xi},${yi}`] = { x: xi, y: yi, ...tileProps };\n      }\n    }\n  } else {\n    for (let yi = y1; yi < y2; yi++) {\n      for (let xi = x1; xi < x2; xi++) {\n        tiles[`${xi},${yi}`] = { x: xi, y: yi, ...tileProps };\n      }\n    }\n  }\n\n  const center = {\n    x: Math.round((x1 + x2) / 2),\n    y: Math.round((y1 + y2) / 2),\n  };\n\n  return { x1, x2, y1, y2, center, hasWalls, tiles };\n};\n\nexport const rectsIntersect = (rect1, rect2) => {\n  return (\n    rect1.x1 <= rect2.x2 &&\n    rect1.x2 >= rect2.x1 &&\n    rect1.y1 <= rect2.y2 &&\n    rect1.y2 >= rect2.y1\n  );\n};\n\nexport const distance = (cell1, cell2) => {\n  const x = Math.pow(cell2.x - cell1.x, 2);\n  const y = Math.pow(cell2.y - cell1.y, 2);\n  return Math.floor(Math.sqrt(x + y));\n};\n\nexport const idToCell = (id) => {\n  const coords = id.split(\",\");\n  return { x: parseInt(coords[0], 10), y: parseInt(coords[1], 10) };\n};\n\nexport const cellToId = ({ x, y }) => `${x},${y}`;\n\nexport const isOnMapEdge = (x, y) => {\n  const { width, height, x: mapX, y: mapY } = grid.map;\n\n  if (x === mapX) return true; // west edge\n  if (y === mapY) return true; // north edge\n  if (x === mapX + width - 1) return true; // east edge\n  if (y === mapY + height - 1) return true; // south edge\n  return false;\n};\n\nexport const getNeighbors = ({ x, y }, direction = CARDINAL) => {\n  const points = [];\n  for (let dir of direction) {\n    let candidate = {\n      x: x + dir.x,\n      y: y + dir.y,\n    };\n    if (\n      candidate.x >= 0 &&\n      candidate.x < grid.width &&\n      candidate.y >= 0 &&\n      candidate.y < grid.height\n    ) {\n      points.push(candidate);\n    }\n  }\n  return points;\n};\n\n// export const getNeighborIds = (x, y) => getNeighbors({ x, y }).map(cellToId);\n\nexport const getNeighborIds = (cellOrId, direction = \"CARDINAL\") => {\n  let cell = toCell(cellOrId);\n\n  if (direction === \"CARDINAL\") {\n    return getNeighbors(cell, CARDINAL).map(cellToId);\n  }\n\n  if (direction === \"DIAGONAL\") {\n    return getNeighbors(cell, DIAGONAL).map(cellToId);\n  }\n\n  if (direction === \"ALL\") {\n    return [\n      ...getNeighbors(cell, CARDINAL).map(cellToId),\n      ...getNeighbors(cell, DIAGONAL).map(cellToId),\n    ];\n  }\n};\n\nexport const isNeighbor = (a, b) => {\n  let posA = a;\n  if (typeof posA === \"string\") {\n    posA = idToCell(a);\n  }\n\n  let posB = b;\n  if (typeof posB === \"string\") {\n    posB = idToCell(b);\n  }\n\n  const { x: ax, y: ay } = posA;\n  const { x: bx, y: by } = posB;\n\n  if (\n    (ax - bx === 1 && ay - by === 0) ||\n    (ax - bx === 0 && ay - by === -1) ||\n    (ax - bx === -1 && ay - by === 0) ||\n    (ax - bx === 0 && ay - by === 1)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const randomNeighbor = (startX, startY) => {\n  const direction = sample(CARDINAL);\n  const x = startX + direction.x;\n  const y = startY + direction.y;\n  return { x, y };\n};\n\nexport const getNeighbor = (x, y, dir) => {\n  const dirMap = { N: 0, E: 1, S: 2, W: 3 };\n  const direction = CARDINAL[dirMap[dir]];\n  return {\n    x: x + direction.x,\n    y: y + direction.y,\n  };\n};\n\nexport const getDirection = (a, b) => {\n  const cellA = toCell(a);\n  const cellB = toCell(b);\n\n  const { x: ax, y: ay } = cellA;\n  const { x: bx, y: by } = cellB;\n\n  let dir;\n\n  if (ax - bx === 1 && ay - by === 0) dir = \"→\";\n  if (ax - bx === 0 && ay - by === -1) dir = \"↑\";\n  if (ax - bx === -1 && ay - by === 0) dir = \"←\";\n  if (ax - bx === 0 && ay - by === 1) dir = \"↓\";\n\n  return dir;\n};\n","import { some } from \"lodash\";\nimport ecs, { cache } from \"../state/ecs\";\nimport { toLocId, getNeighborIds, toCell } from \"./grid\";\n\n// goals: Array of { x, y } positions\nexport const dijkstra = (goals, weights = []) => {\n  const frontier = goals.map(toLocId);\n\n  const distance = frontier.reduce((acc, val, idx) => {\n    acc[val] = weights[idx] || 0;\n    return acc;\n  }, {});\n\n  while (frontier.length) {\n    const current = frontier.shift();\n\n    // current entity position component\n    const cell = toCell(current);\n    const neighborLocIds = getNeighborIds(cell);\n\n    neighborLocIds.forEach((neighborId) => {\n      if (!distance[neighborId]) {\n        const neighborIds = [\n          ...cache.readSet(\"entitiesAtLocation\", neighborId),\n        ];\n        if (\n          // check if location exists and is NOT blocking (no entity at location can be blocking AND brainless)\n          neighborIds &&\n          !some(neighborIds, (x) => {\n            return (\n              ecs.getEntity(x).has(\"IsBlocking\") &&\n              !ecs.getEntity(x).has(\"Brain\")\n            );\n          })\n        ) {\n          let dscore = distance[current] + 1;\n          distance[neighborId] = dscore;\n          frontier.push(neighborId);\n        }\n      }\n    });\n  }\n\n  // normalize goals to their weights or 0\n  goals.forEach((goal, idx) => {\n    const id = toLocId(goal);\n    distance[id] = weights[idx] || 0;\n  });\n\n  return distance;\n};\n\nexport const dijkstraReverse = (dMap, coeff = -1.2) => {\n  const dR = {};\n\n  Object.keys(dMap).forEach((x) => {\n    dR[x] = dMap[x] * coeff;\n  });\n\n  const goals = Object.keys(dR);\n  const weights = goals.map((x) => dR[x]);\n\n  return dijkstra(goals, weights);\n};\n","import ecs from \"../state/ecs\";\n\nimport Animate from \"../components/Animate\";\nimport Appearance from \"../components/Appearance\";\nimport Brain from \"../components/Brain\";\nimport CanLegend from \"../components/CanLegend\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport IsInFov from \"../components/IsInFov\";\nimport IsOpaque from \"../components/IsOpaque\";\nimport IsRevealed from \"../components/IsRevealed\";\nimport Layer100 from \"../components/Layer100\";\nimport Layer300 from \"../components/Layer300\";\nimport Layer400 from \"../components/Layer400\";\nimport MoveTo from \"../components/MoveTo\";\nimport Position from \"../components/Position\";\nimport CanDijkstra from \"../components/CanDijkstra\";\n\nexport const aiEntities = ecs.createQuery({\n  all: [Brain],\n});\n\nexport const aiEntitiesInFov = ecs.createQuery({\n  all: [Brain, IsInFov],\n});\n\nexport const animatingEntities = ecs.createQuery({\n  all: [Animate, IsInFov],\n});\n\nexport const blockingEntities = ecs.createQuery({\n  all: [IsBlocking, Position],\n});\n\nexport const dijkstraAbleEntities = ecs.createQuery({\n  all: [CanDijkstra],\n});\n\nexport const inFovEntities = ecs.createQuery({\n  all: [IsInFov],\n});\n\nexport const layer100Entities = ecs.createQuery({\n  all: [Appearance, Layer100, Position],\n  any: [IsInFov, IsRevealed],\n});\n\nexport const layer300Entities = ecs.createQuery({\n  all: [Appearance, Layer300, Position],\n  any: [IsInFov, IsRevealed],\n});\n\nexport const layer400Entities = ecs.createQuery({\n  all: [Appearance, Layer400, Position],\n  any: [IsInFov],\n});\n\nexport const legendEntities = ecs.createQuery({\n  all: [CanLegend, IsInFov],\n});\n\nexport const movableEntities = ecs.createQuery({\n  all: [MoveTo, Position],\n});\n\nexport const opaqueEntities = ecs.createQuery({\n  all: [IsOpaque],\n});\n\nexport const renderableEntities = ecs.createQuery({\n  all: [Position, Appearance],\n});\n","import PF from \"pathfinding\";\nimport { get, some, times } from \"lodash\";\nimport ecs, { cache } from \"../state/ecs\";\nimport { sample } from \"lodash\";\nimport { ALL, toCell, getNeighborIds } from \"./grid\";\n\nexport const drunkenWalk = () => sample(ALL);\n\nexport const walkDijkstra = (entity, dMapName) => {\n  const neighbors = getNeighborIds(entity.position, \"ALL\");\n  const inf = 1000000;\n  let score = inf;\n  let nextPosition = {};\n  neighbors.forEach((locId) => {\n    const dScore = get(cache, `dijkstraMaps[${dMapName}][${locId}]`, inf);\n    if (dScore < score) {\n      score = dScore;\n      nextPosition = toCell(locId);\n    }\n  });\n  return nextPosition;\n};\n\nconst baseMatrix = [];\ntimes(34, () => baseMatrix.push(new Array(100).fill(0)));\n\nexport const aStar = (start, goal) => {\n  const matrix = [...baseMatrix];\n\n  Object.keys(cache.entitiesAtLocation).forEach((locId) => {\n    if (\n      some([...cache.readObj(\"entitiesAtLocation\", locId)], (eId) => {\n        return ecs.getEntity(eId).isBlocking;\n      })\n    ) {\n      const cell = toCell(locId);\n\n      matrix[cell.y][cell.x] = 1;\n    }\n  });\n\n  matrix[start.y][start.x] = 0;\n  matrix[goal.y][goal.x] = 0;\n\n  const grid = new PF.Grid(matrix);\n  const finder = new PF.AStarFinder({\n    allowDiagonal: true,\n    dontCrossCorners: true,\n  });\n\n  const path = finder.findPath(start.x, start.y, goal.x, goal.y, grid);\n\n  return path;\n};\n","import { random, sample, times } from \"lodash\";\nimport { dijkstra, dijkstraReverse } from \"../lib/dijkstra\";\nimport ecs, { cache, player, gameState } from \"../state/ecs\";\nimport { CLEAN, OBSERVE, SOIL, TAKE_DAMAGE } from \"../state/events\";\nimport { chars, colors } from \"../lib/graphics\";\nimport { grid } from \"../lib/canvas\";\nimport { toLocId, getNeighborIds } from \"../lib/grid\";\nimport { aiEntities, movableEntities } from \"../queries\";\nimport { log } from \"../lib/adventure-log\";\n\nimport { aStar } from \"../lib/pathfinding\";\n\nexport const nuke = () => {\n  log({ text: `NUKE!`, fg: \"orange\" });\n  aiEntities.get().forEach((entity) => {\n    if (entity.name.nomen !== \"player\") {\n      kill(entity);\n    }\n  });\n};\n\nconst kill = (entity) => {\n  entity.add(\"IsDead\");\n  entity.remove(\"Layer400\");\n  entity.add(\"Layer300\");\n  entity.remove(\"IsBlocking\");\n  entity.remove(\"Brain\");\n  if (!entity.has(\"isBoneless\")) {\n    entity.appearance.char = chars.corpse;\n  }\n\n  if (entity.has(\"isBoneless\")) {\n    entity.appearance.background = \"transparent\";\n    entity.appearance.currentBackground = \"transparent\";\n  }\n  splatterBlood(entity, self);\n  entity.fireEvent(\"kill\");\n};\n\nconst hit = (targetEntity) => {\n  targetEntity.fireEvent(TAKE_DAMAGE, { amount: 5 });\n\n  if (targetEntity.has(\"Blood\")) {\n    splatterBlood(targetEntity);\n  }\n\n  if (!targetEntity.has(\"Animate\")) {\n    targetEntity.add(\"Animate\", {\n      animation: {\n        type: \"color\",\n        stops: [\n          colors.damage,\n          targetEntity.appearance.currentColor || targetEntity.appearance.color,\n        ],\n      },\n    });\n  }\n};\n\nconst splatterBlood = (entity, splatterSelf = false) => {\n  if (!entity.blood) return;\n  const neighborIds = getNeighborIds(entity.position, \"ALL\");\n  const locIds = [];\n\n  if (splatterSelf) {\n    locIds.push(toLocId(entity.position));\n  }\n\n  times(random(0, 8), () => locIds.push(sample(neighborIds)));\n\n  locIds.forEach((locId) => {\n    cache.readSet(\"entitiesAtLocation\", locId).forEach((x) => {\n      const e = ecs.getEntity(x);\n\n      e.add(\"Soilage\", {\n        color: entity.blood.color,\n        name: \"blood\",\n        sourceEntityId: entity.id,\n        sourceName: entity.name.nomen,\n      });\n      e.fireEvent(SOIL, { text: `${entity.name.nomen} blood` });\n    });\n  });\n};\n\nconst bumpAttack = (targetEntity) => {\n  if (targetEntity.health) {\n    hit(targetEntity);\n\n    if (targetEntity.health.current <= 0) {\n      kill(targetEntity);\n    }\n  }\n};\n\nconst washInFountain = (targetEntity, fountain) => {\n  if (targetEntity.has(\"Soilage\")) {\n    if (fountain.has(\"Soilage\")) {\n      log({\n        text: `The fountain is filled with ${fountain.soilage[0].sourceName} ${fountain.soilage[0].name}.`,\n      });\n    } else {\n      log({ text: `${targetEntity.name.nomen} bathes in the fountain.` });\n      targetEntity\n        .get(\"Soilage\")\n        .forEach((x) => fountain.add(\"Soilage\", { ...x.serialize() }));\n      targetEntity.fireEvent(CLEAN);\n    }\n  } else {\n    if (fountain.has(\"Soilage\")) {\n      log({\n        text: `The fountain is filled with ${fountain.soilage[0].sourceName} ${fountain.soilage[0].name}.`,\n      });\n    } else {\n      log({ text: `A fountain full of fresh clean water.` });\n    }\n  }\n};\n\nconst absorb = (entity) => {\n  // get all entities at loc excluding self\n  const entitiesAtLoc = cache.readSet(\n    \"entitiesAtLocation\",\n    toLocId(entity.position)\n  );\n\n  entitiesAtLoc.forEach((eId) => {\n    if (eId !== entity.id) {\n      const cEntity = ecs.getEntity(eId);\n      if (cEntity.has(\"Soilage\")) {\n        // clone all soilage and add to self\n        cEntity\n          .get(\"Soilage\")\n          .forEach((x) => entity.add(\"Soilage\", { ...x.serialize() }));\n        cEntity.fireEvent(CLEAN);\n      }\n\n      // todo: should actually put the entity into it's inventory (will need to include items eventually)\n      if (cEntity.has(\"isDead\")) {\n        cache.delete(\n          \"entitiesAtLocation\",\n          toLocId(cEntity.position),\n          cEntity.id\n        );\n        cEntity.destroy();\n      }\n    }\n  });\n};\n\nexport const movement = () => {\n  movableEntities.get().forEach((entity) => {\n    aStar(entity.position, player.position);\n\n    let mPos = { x: entity.moveTo.x, y: entity.moveTo.y };\n    if (entity.moveTo.relative) {\n      mPos = {\n        x: entity.position.x + entity.moveTo.x,\n        y: entity.position.y + entity.moveTo.y,\n      };\n    }\n\n    const { width, height, x, y } = grid.map;\n\n    // observe map boundaries\n    const mx = Math.min(width + x - 1, Math.max(x, mPos.x));\n    const my = Math.min(height + y - 1, Math.max(y, mPos.y));\n\n    let blockers = [];\n\n    const locId = toLocId({ x: mx, y: my });\n    const entitiesAtLoc = cache.readSet(\"entitiesAtLocation\", locId);\n\n    if (entitiesAtLoc) {\n      entitiesAtLoc.forEach((eid) => {\n        const potentialBlocker = ecs.getEntity(eid);\n\n        if (entity.name.nomen === \"player\") {\n          potentialBlocker.fireEvent(OBSERVE);\n        }\n\n        if (potentialBlocker.isBlocking) {\n          blockers.push(potentialBlocker);\n        }\n      });\n    }\n\n    if (blockers.length) {\n      blockers.forEach((blocker) => {\n        // if has brain and not the same species - bump attack\n        if (\n          (blocker.brain || blocker.name.nomen === \"player\") &&\n          entity.name.nomen !== blocker.name.nomen\n        ) {\n          log({ text: `${entity.name.nomen} hits ${blocker.name.nomen}` });\n          bumpAttack(blocker);\n        }\n\n        if (blocker.name.nomen === \"fountain\") {\n          washInFountain(entity, blocker);\n        }\n      });\n      return entity.remove(\"MoveTo\");\n    }\n\n    if (entity.has(\"canAbsorb\")) {\n      absorb(entity);\n    }\n\n    // update cache\n    cache.delete(\"entitiesAtLocation\", toLocId(entity.position), entity.id);\n    cache.addSet(\"entitiesAtLocation\", toLocId({ x: mx, y: my }), entity.id);\n\n    if (entity.id === player.id && gameState.playerTurn) {\n      const playerDijkstraMap = dijkstra([{ x: mx, y: my }]);\n      const playerReverse = dijkstraReverse(playerDijkstraMap);\n\n      cache.addObj(\"dijkstraMaps\", \"player\", playerDijkstraMap);\n      cache.addObj(\"dijkstraMaps\", \"playerReverse\", playerReverse);\n    }\n\n    entity.position.px = entity.position.x;\n    entity.position.py = entity.position.y;\n    entity.position.x = mx;\n    entity.position.y = my;\n\n    entity.remove(\"MoveTo\");\n  });\n};\n","import MoveTo from \"../components/MoveTo\";\nimport { nuke } from \"../systems/movement\";\nimport { gameState, player, loadGame, saveGame } from \"../state/ecs\";\n\nexport const input = (key) => {\n  switch (key) {\n    case \"L\":\n      gameState.userInput = { key, type: \"LOAD\", payload: {} };\n      break;\n    case \"S\":\n      gameState.userInput = { key, type: \"SAVE\", payload: {} };\n      break;\n    case \"z\":\n      gameState.userInput = { key, type: \"REST\", payload: {} };\n      break;\n\n    case \"N\":\n      gameState.userInput = { key, type: \"NUKE\", payload: {} };\n      break;\n\n    case \"ArrowUp\":\n      gameState.userInput = { key, type: \"MOVE\", payload: { x: 0, y: -1 } };\n      break;\n    case \"ArrowDown\":\n      gameState.userInput = { key, type: \"MOVE\", payload: { x: 0, y: 1 } };\n      break;\n    case \"ArrowLeft\":\n      gameState.userInput = { key, type: \"MOVE\", payload: { x: -1, y: 0 } };\n      break;\n    case \"ArrowRight\":\n      gameState.userInput = { key, type: \"MOVE\", payload: { x: 1, y: 0 } };\n      break;\n    case \"1\": // SW\n      gameState.userInput = { key, type: \"MOVE\", payload: { x: -1, y: 1 } };\n      break;\n    case \"2\": // SOUTH\n      gameState.userInput = { key, type: \"MOVE\", payload: { x: 0, y: 1 } };\n      break;\n    case \"3\": // SE\n      gameState.userInput = { key, type: \"MOVE\", payload: { x: 1, y: 1 } };\n      break;\n    case \"4\": // WEST\n      gameState.userInput = { key, type: \"MOVE\", payload: { x: -1, y: 0 } };\n      break;\n    case \"6\": // EAST\n      gameState.userInput = { key, type: \"MOVE\", payload: { x: 1, y: 0 } };\n      break;\n    case \"7\": // NW\n      gameState.userInput = { key, type: \"MOVE\", payload: { x: -1, y: -1 } };\n      break;\n    case \"8\": // NORTH\n      gameState.userInput = { key, type: \"MOVE\", payload: { x: 0, y: -1 } };\n      break;\n    case \"9\": // NE\n      gameState.userInput = { key, type: \"MOVE\", payload: { x: 1, y: -1 } };\n      break;\n  }\n};\n\nexport const processUserInput = () => {\n  if (!gameState.userInput) {\n    return;\n  }\n\n  const { key, type, payload } = gameState.userInput;\n\n  if (type === \"NUKE\") {\n    console.log(\"nuke!\");\n    nuke();\n  }\n\n  if (type === \"MOVE\") {\n    player.add(MoveTo, payload);\n  }\n\n  if (type === \"SAVE\") {\n    saveGame();\n  }\n\n  if (type === \"LOAD\") {\n    loadGame();\n  }\n};\n","import { compact, random } from \"lodash\";\nimport { rectangle, rectsIntersect, isOnMapEdge, randomNeighbor } from \"./grid\";\n\nfunction digHorizontalPassage(tiles, x1, x2, y) {\n  const start = Math.min(x1, x2);\n  const end = Math.max(x1, x2) + 1;\n  let x = start;\n\n  while (x < end) {\n    tiles[`${x},${y}`] = { x, y, sprite: \"FLOOR\" };\n    x++;\n  }\n}\n\nfunction digVerticalPassage(tiles, y1, y2, x) {\n  const start = Math.min(y1, y2);\n  const end = Math.max(y1, y2) + 1;\n  let y = start;\n\n  while (y < end) {\n    tiles[`${x},${y}`] = { x, y, sprite: \"FLOOR\" };\n    y++;\n  }\n}\n\nconst digDrunkenWalk = (x, y, tiles) => {\n  let loc = randomNeighbor(x, y);\n  // if new loc is a tile and not on the map edge\n  if (tiles[`${[loc.x]},${[loc.y]}`] && !isOnMapEdge(loc.x, loc.y)) {\n    tiles[`${loc.x},${loc.y}`] = {\n      x: loc.x,\n      y: loc.y,\n      sprite: \"CAVERN_FLOOR\",\n    };\n    return { x: loc.x, y: loc.y };\n  } else {\n    return { x, y };\n  }\n};\n\nexport const generateDungeon = ({\n  x,\n  y,\n  width,\n  height,\n  maxRoomCount,\n  minRoomSize,\n  maxRoomSize,\n}) => {\n  // fill the entire space with walls so we can dig it out later\n  const { tiles } = rectangle(\n    { x, y, width, height },\n    { sprite: \"WALL\", blocking: true, opaque: true }\n  );\n\n  const rooms = [];\n  let roomTiles = {};\n\n  for (let r of Array(maxRoomCount).keys()) {\n    let rw = random(minRoomSize, maxRoomSize);\n    let rh = random(minRoomSize, maxRoomSize);\n    let rx = random(x, width + x - rw - 1);\n    let ry = random(y, height + y - rh - 1);\n\n    // create a candidate room\n    // todo: perf - don't bother filling this in here - wait till it's accepted\n    const candidate = rectangle(\n      { x: rx, y: ry, width: rw, height: rh, hasWalls: true },\n      { sprite: \"FLOOR\", blocking: false, opaque: false }\n    );\n\n    if (!rooms.some((room) => rectsIntersect(room, candidate))) {\n      rooms[r] = candidate;\n      roomTiles = { ...roomTiles, ...candidate.tiles };\n    }\n  }\n\n  let prevRoom = null;\n\n  for (let room of compact(rooms)) {\n    if (prevRoom) {\n      const prev = prevRoom.center;\n      const curr = room.center;\n\n      if (random(0, 1)) {\n        digHorizontalPassage(tiles, prev.x, curr.x, curr.y);\n        digVerticalPassage(tiles, prev.y, curr.y, prev.x);\n      } else {\n        digVerticalPassage(tiles, prev.y, curr.y, prev.x);\n        digHorizontalPassage(tiles, prev.x, curr.x, curr.y);\n      }\n    }\n\n    prevRoom = room;\n  }\n\n  const processedTiles = { ...tiles, ...roomTiles };\n  let digLoc = { x: x + Math.floor(width / 2), y: Math.floor(y + height / 2) };\n\n  for (let i = 0; i < 1000; i++) {\n    digLoc = digDrunkenWalk(digLoc.x, digLoc.y, processedTiles);\n  }\n\n  const openTileIds = Object.keys(processedTiles).filter(\n    (tileId) => !processedTiles[tileId].blocking\n  );\n\n  return { tiles: processedTiles, start: rooms[0].center, openTileIds, rooms };\n};\n","import { get, random, sample, some, times } from \"lodash\";\nimport ecs, { cache } from \"../state/ecs\";\nimport { colors } from \"../lib/graphics\";\nimport { generateDungeon } from \"../lib/dungeon\";\nimport { grid } from \"../lib/canvas\";\nimport { cellToId, toCell, getNeighborIds } from \"../lib/grid\";\nimport CanDijkstra from \"../components/CanDijkstra\";\n\nconst initDungeonLevel = () => {\n  // create dungeon level\n  const dungeon = generateDungeon({\n    x: grid.map.x,\n    y: grid.map.y,\n    width: grid.map.width,\n    height: grid.map.height,\n    maxRoomCount: 30,\n    minRoomSize: 6,\n    maxRoomSize: 12,\n  });\n\n  Object.keys(dungeon.tiles).forEach((tileId) => {\n    const currTile = dungeon.tiles[tileId];\n\n    // Only make entities for tiles can be seen\n    if (\n      some(getNeighborIds(currTile, \"ALL\"), (locId) => {\n        return get(dungeon, `tiles.${locId}.sprite`, \"WALL\") !== \"WALL\";\n      })\n    ) {\n      let entity;\n\n      if (currTile.sprite === \"WALL\") {\n        entity = ecs.createPrefab(\"WallPrefab\", {\n          position: { x: currTile.x, y: currTile.y },\n        });\n        entity.appearance.color = sample(colors.wall);\n      }\n\n      if (currTile.sprite === \"FLOOR\") {\n        entity = ecs.createPrefab(\"FloorPrefab\", {\n          position: { x: currTile.x, y: currTile.y },\n        });\n        entity.appearance.color = sample(colors.floor);\n        entity.add(CanDijkstra);\n      }\n\n      if (currTile.sprite === \"CAVERN_FLOOR\") {\n        entity = ecs.createPrefab(\"FloorPrefab\", {\n          position: { x: currTile.x, y: currTile.y },\n        });\n        entity.appearance.color = sample(colors.cavernFloor);\n        entity.add(CanDijkstra);\n      }\n\n      const locId = cellToId(currTile);\n      cache.addSet(\"entitiesAtLocation\", locId, entity.id);\n    }\n  });\n\n  // add bonfires\n  dungeon.rooms.forEach((room, index) => {\n    if (index !== 0 && random(1, 3) === 1) {\n      const locId = cellToId(room.center);\n      // make sure the location is empty (only floor tiles should exist here...)\n      if (cache.readSet(\"entitiesAtLocation\", locId).size === 1) {\n        const entity = ecs.createPrefab(\"FountainPrefab\", {\n          position: room.center,\n        });\n\n        cache.addSet(\"entitiesAtLocation\", locId, entity.id);\n      }\n    }\n  });\n\n  // spawn monsters!\n  times(random(5, 10), () => {\n    const locId = sample(dungeon.openTileIds);\n    if (cache.readSet(\"entitiesAtLocation\", locId).size === 1) {\n      const entity = ecs.createPrefab(\"GoblinPrefab\", {\n        position: toCell(locId),\n      });\n\n      cache.addSet(\"entitiesAtLocation\", locId, entity.id);\n    }\n  });\n\n  times(random(5, 10), () => {\n    const locId = sample(dungeon.openTileIds);\n    if (cache.readSet(\"entitiesAtLocation\", locId).size === 1) {\n      const entity = ecs.createPrefab(\"SkeletonPrefab\", {\n        position: toCell(locId),\n      });\n\n      cache.addSet(\"entitiesAtLocation\", locId, entity.id);\n    }\n  });\n\n  times(random(1, 3), () => {\n    const locId = sample(dungeon.openTileIds);\n    if (cache.readSet(\"entitiesAtLocation\", locId).size === 1) {\n      const entity = ecs.createPrefab(\"GelatinousCubePrefab\", {\n        position: toCell(locId),\n      });\n\n      cache.addSet(\"entitiesAtLocation\", locId, entity.id);\n    }\n  });\n\n  return dungeon;\n};\n\nexport default initDungeonLevel;\n","import { random } from \"lodash\";\nimport { cache, player } from \"../state/ecs\";\nimport { aiEntities, aiEntitiesInFov } from \"../queries\";\nimport { aStar, drunkenWalk, walkDijkstra } from \"../lib/pathfinding\";\nimport { toLocId } from \"../lib/grid\";\n\nconst moveToPlayer = (entity) => {\n  if (random(0, 20) > 1) {\n    const path = aStar(entity.position, player.position);\n    if (path.length) {\n      const newLoc = path[1];\n      if (entity.has(\"IsInFov\")) {\n        entity.add(\"MoveTo\", { x: newLoc[0], y: newLoc[1], relative: false });\n      }\n    }\n  }\n};\n\n// should try and have a safe haven for them to congregrate to and\n// astar there after a quick freak out run about\nconst moveAwayFromPlayer = (entity) => {\n  const newLoc = walkDijkstra(entity, \"playerReverse\");\n  if (Object.keys(newLoc).length) {\n    if (entity.has(\"IsInFov\")) {\n      entity.add(\"MoveTo\", { ...newLoc, relative: false });\n    }\n  }\n};\n\nconst meander = (entity, frequency = 1, stickiness = 4) => {\n  if (random(1, frequency) === 1) {\n    let m = drunkenWalk();\n\n    // do we have a previous location?\n    if (entity.position.px && entity.position.py) {\n      // are we stuck in the same direction?\n      if (random(1, stickiness) < stickiness) {\n        // yes - keep going in the same direction\n        m = {\n          x: entity.position.x - entity.position.px,\n          y: entity.position.y - entity.position.py,\n        };\n      }\n    }\n\n    const newLoc = m;\n\n    if (entity.has(\"IsInFov\")) {\n      entity.add(\"MoveTo\", { ...newLoc, relative: true });\n    }\n  }\n};\n\nexport const ai = () => {\n  aiEntities.get().forEach((entity) => {\n    if (entity.brain.ai === \"goblin\") {\n      // if player is covered in blood - run away!\n      if (player.has(\"Soilage\")) {\n        moveAwayFromPlayer(entity);\n      } else {\n        const distance = cache.readObj(\"dijkstraMaps\", \"player\")[\n          toLocId(entity.position)\n        ];\n\n        // should add a component of some sort that will track if an enemy has spotted the player.\n        // being in FOV is a cheap shortcut that only works so-so\n        // todo: have the stay out of FOV and only enter when there are enough of them!\n        //  but only do that when hunting...\n        if (\n          distance > 4 ||\n          [...aiEntitiesInFov.get()].filter((x) => x.name.nomen === \"goblin\")\n            .length > 1\n        ) {\n          moveToPlayer(entity);\n        } else {\n          moveAwayFromPlayer(entity);\n        }\n      }\n    }\n\n    if (entity.brain.ai === \"skeleton\") {\n      if (player.has(\"Soilage\")) {\n        moveToPlayer(entity);\n      } else {\n        meander(entity);\n      }\n    }\n\n    if (entity.brain.ai === \"gelatinousCube\") {\n      meander(entity);\n    }\n  });\n};\n","import { distance, idToCell } from \"./grid\";\n\nconst octantTransforms = [\n  { xx: 1, xy: 0, yx: 0, yy: 1 },\n  { xx: 1, xy: 0, yx: 0, yy: -1 },\n  { xx: -1, xy: 0, yx: 0, yy: 1 },\n  { xx: -1, xy: 0, yx: 0, yy: -1 },\n  { xx: 0, xy: 1, yx: 1, yy: 0 },\n  { xx: 0, xy: 1, yx: -1, yy: 0 },\n  { xx: 0, xy: -1, yx: 1, yy: 0 },\n  { xx: 0, xy: -1, yx: -1, yy: 0 },\n];\n\n// width: width of map (or visible map?)\n// height: height of map (or visible map?)\nexport default function createFOV(\n  opaqueEntities,\n  width,\n  height,\n  originX,\n  originY,\n  radius\n) {\n  const visible = new Set();\n\n  const blockingLocations = new Set();\n  opaqueEntities\n    .get()\n    .forEach((x) => blockingLocations.add(`${x.position.x},${x.position.y}`));\n\n  const isOpaque = (x, y) => {\n    const locId = `${x},${y}`;\n    return !!blockingLocations.has(locId);\n  };\n  const reveal = (x, y) => {\n    return visible.add(`${x},${y}`);\n  };\n\n  function castShadows(originX, originY, row, start, end, transform, radius) {\n    let newStart = 0;\n    if (start < end) return;\n\n    let blocked = false;\n\n    for (let distance = row; distance < radius && !blocked; distance++) {\n      let deltaY = -distance;\n      for (let deltaX = -distance; deltaX <= 0; deltaX++) {\n        let currentX = originX + deltaX * transform.xx + deltaY * transform.xy;\n        let currentY = originY + deltaX * transform.yx + deltaY * transform.yy;\n\n        let leftSlope = (deltaX - 0.5) / (deltaY + 0.5);\n        let rightSlope = (deltaX + 0.5) / (deltaY - 0.5);\n\n        if (\n          !(\n            currentX >= 0 &&\n            currentY >= 0 &&\n            currentX < width &&\n            currentY < height\n          ) ||\n          start < rightSlope\n        ) {\n          continue;\n        } else if (end > leftSlope) {\n          break;\n        }\n\n        if (Math.sqrt(deltaX * deltaX + deltaY * deltaY) <= radius) {\n          reveal(currentX, currentY);\n        }\n\n        if (blocked) {\n          if (isOpaque(currentX, currentY)) {\n            newStart = rightSlope;\n            continue;\n          } else {\n            blocked = false;\n            start = newStart;\n          }\n        } else {\n          if (isOpaque(currentX, currentY) && distance < radius) {\n            blocked = true;\n            castShadows(\n              originX,\n              originY,\n              distance + 1,\n              start,\n              leftSlope,\n              transform,\n              radius\n            );\n            newStart = rightSlope;\n          }\n        }\n      }\n    }\n  }\n\n  reveal(originX, originY);\n  for (let octant of octantTransforms) {\n    castShadows(originX, originY, 1, 1, 0, octant, radius);\n  }\n\n  return {\n    fov: visible,\n    distance: [...visible].reduce((acc, val) => {\n      const cell = idToCell(val);\n      acc[val] = distance({ x: originX, y: originY }, { x: cell.x, y: cell.y });\n      return acc;\n    }, {}),\n  };\n}\n","import { times } from \"lodash\";\nimport { drawCell } from \"../lib/canvas\";\nimport { colors } from \"../lib/graphics\";\n\nexport default class Terminal {\n  constructor(options = {}) {\n    this.height = options.height;\n    this.width = options.width;\n    this.x = options.x;\n    this.y = options.y;\n    this.templates = options.templates || []; // array of template objects\n    this.options = {};\n\n    this.options.fg = options.fg || colors.hudText;\n    this.options.bg = options.bg || colors.defaultBGColor;\n    this.options.x = options.x || this.x;\n    this.options.y = options.y || this.y;\n    this.options.fgA = options.fgA || 1;\n    this.options.bgA = options.bgA || 1;\n\n    this.options.fadeY = options.fadeY;\n  }\n\n  #drawText(template) {\n    const textToRender = template.text;\n    textToRender.split(\"\").forEach((char, index) => {\n      // we shouldn't have to do this for each char -\n      // but gotta refactor drawCell to solve this one...\n      const options = { ...this.options, ...template };\n      const character = {\n        appearance: {\n          char,\n          background: options.bg,\n          color: options.fg,\n        },\n        position: {\n          x: index + options.x,\n          y: options.y,\n        },\n      };\n\n      delete options.x;\n      delete options.y;\n\n      drawCell(character, options);\n    });\n  }\n\n  #drawInline(templates) {\n    let cursor = this.x;\n    templates.forEach((tempt) => {\n      const tp = {\n        ...tempt,\n        x: cursor,\n        y: tempt.y || this.y,\n      };\n\n      this.#drawText(tp);\n      cursor += tempt.text.length;\n    });\n  }\n\n  #drawTemplates() {\n    const templates = this.templates.slice(this.templates.length - this.height);\n    templates.forEach((template, index) => {\n      if (Array.isArray(template)) {\n        this.#drawInline(template);\n      } else {\n        const tempt = {\n          ...template,\n          x: this.x,\n          y: index + this.y,\n        };\n\n        if (this.options.fadeY) {\n          tempt.fgA = index * 0.75 || 0.5;\n        }\n\n        this.#drawText(tempt);\n      }\n    });\n  }\n\n  drawNamePlates(entities) {\n    const templates = [];\n    let y = this.y;\n\n    entities.forEach((entity, index) => {\n      templates.push([\n        {\n          text: `${entity.appearance.char}` || \" \",\n          bg: entity.appearance.background,\n          fg: entity.appearance.currentColor || entity.appearance.color,\n          y,\n        },\n\n        {\n          text: `: ${entity.name.nomen}`,\n          y,\n        },\n      ]);\n      y++;\n\n      if (!entity.isDead && entity.health && entity.health.current > 0) {\n        const percent = (entity.health.current / entity.health.max) * 17; // width of nameplates (hud) minus 3\n        const bars = Math.ceil(percent);\n        if (!bars) return;\n\n        const tempt = [];\n        times(bars + 3, (index) => {\n          if (index < 3) {\n            tempt.push({\n              text: \" \",\n              y,\n            });\n          } else {\n            tempt.push({\n              text: \"⁗\",\n              fg:\n                (entity.blood && entity.blood.color) ||\n                entity.appearance.color ||\n                \"red\",\n              y,\n            });\n          }\n        });\n\n        templates.push(tempt);\n        y++;\n      } else {\n        y++;\n      }\n    });\n\n    this.templates = templates;\n\n    this.draw();\n  }\n\n  draw() {\n    return this.#drawTemplates();\n  }\n\n  update(templates) {\n    this.templates = templates;\n  }\n}\n\n// ONLY SUPPORT TEMPLATES:\n// templates: [{ text: '', ...options }, { text: '', ...options }] // one or many lines\n// templates: [[{ text: '', ...options }, { text: '', ...options }]] // inline (for multi color things)\n","import { sortBy } from \"lodash\";\nimport { cache, gameState, player } from \"../state/ecs\";\nimport Terminal from \"../gui/Terminal\";\nimport { colors } from \"../lib/graphics\";\nimport { clearCanvas, drawCell } from \"../lib/canvas\";\nimport { toLocId } from \"../lib/grid\";\nimport {\n  layer100Entities,\n  layer300Entities,\n  layer400Entities,\n  legendEntities,\n} from \"../queries\";\n\nimport { renderOmniscience, renderAllChars } from \"../lib/debug\";\n\nconst drawCellIfAble = (entity) => {\n  const { appearance, isInFov, isRevealed } = entity;\n\n  if (isInFov) {\n    drawCell(entity, { fg: appearance.currentColor || appearance.color });\n  }\n\n  if (isRevealed && !isInFov) {\n    drawCell(entity, {\n      fg: colors.revealedColor,\n    });\n  }\n};\n\nconst AdventureLog = new Terminal({\n  width: 75,\n  height: 3,\n  x: 21,\n  y: 0,\n  templates: gameState.adventureLog,\n  fadeY: true,\n});\n\nconst InnerMonologue = new Terminal({\n  width: 75,\n  height: 1,\n  x: 21,\n  y: 33,\n  templates: gameState.innerMonologue,\n});\n\nconst Legend = new Terminal({\n  width: 20,\n  height: 30,\n  x: 0,\n  y: 0,\n});\n\nconst sortLegend = () => {\n  const playerDijkstra = cache.readObj(\"dijkstraMaps\", \"player\");\n\n  return sortBy([...legendEntities.get()], (entity) => {\n    const dScore = playerDijkstra[toLocId(entity.position)];\n    return dScore;\n  });\n};\n\nexport const render = () => {\n  clearCanvas();\n\n  layer100Entities.get().forEach((entity) => drawCellIfAble(entity));\n  // renderOmniscience();\n  layer300Entities.get().forEach((entity) => drawCellIfAble(entity));\n  layer400Entities.get().forEach((entity) => drawCellIfAble(entity));\n\n  AdventureLog.draw();\n  InnerMonologue.draw();\n  Legend.drawNamePlates(sortLegend());\n\n  // clearCanvas();\n  // renderAllChars();\n};\n","import \"./lib/canvas.js\";\nimport { pxToCell } from \"./lib/canvas\";\nimport { colors } from \"./lib/graphics\";\nimport ecs, { cache, player, gameState } from \"./state/ecs\";\nimport { input, processUserInput } from \"./lib/process-user-input\";\nimport { cellToId } from \"./lib/grid\";\nimport { log } from \"./lib/adventure-log\";\nimport { dijkstra } from \"./lib/dijkstra\";\n\nimport initDungeonLevel from \"./initializers/dungeon-level.init\";\n\nimport { ai } from \"./systems/ai\";\nimport { animation } from \"./systems/animation\";\nimport { fov } from \"./systems/fov\";\nimport { movement } from \"./systems/movement\";\nimport { render } from \"./systems/render\";\n\nimport { animatingEntities } from \"./queries\";\n\ndocument.addEventListener(\"keydown\", (ev) => input(ev.key));\ndocument.querySelector(\"#loading\").classList.add(\"hide\");\n\nfunction initGame() {\n  const dungeon = initDungeonLevel();\n  player.position.x = dungeon.start.x;\n  player.position.y = dungeon.start.y;\n\n  cache.addSet(\"entitiesAtLocation\", cellToId(dungeon.start), player.id);\n\n  const playerDijkstraMap = dijkstra([\n    { x: player.position.x, y: player.position.y },\n  ]);\n  cache.addObj(\"dijkstraMaps\", \"player\", playerDijkstraMap);\n\n  log({ text: \"COVERED IN BLOOD!\", fg: \"red\" });\n  log({ text: \"A game where you get COVERED IN BLOOD!\" });\n  log({ text: \"Watch out for skellies and jellies!\" });\n}\n\ninitGame();\n\nfunction gameTick() {\n  if (!gameState.playerTurn) {\n    ai();\n  }\n  movement();\n  if (gameState.playerTurn) {\n    fov();\n  }\n  render();\n}\n\ngameTick();\n\nfunction update() {\n  // if (animatingEntities.get().size) {\n  //   animation();\n  // }\n\n  if (gameState.userInput && gameState.playerTurn && !player.isDead) {\n    processUserInput();\n    gameTick();\n    gameState.userInput = null;\n    gameState.turn = gameState.turn += 1;\n    gameState.playerTurn = false;\n  }\n\n  if (!gameState.playerTurn) {\n    gameTick();\n    gameState.playerTurn = true;\n  }\n}\n\nfunction gameLoop() {\n  update();\n  requestAnimationFrame(gameLoop);\n}\n\nrequestAnimationFrame(gameLoop);\n\n// it's a PITA to mock canvas in jest so we just hack it's running\nif (process.env.NODE_ENV !== \"test\") {\n  const canvas = document.querySelector(\"#canvas\");\n\n  canvas.onclick = (e) => {\n    const [x, y] = pxToCell(e);\n    const locId = cellToId({ x, y });\n\n    cache\n      .readSet(\"entitiesAtLocation\", locId)\n      .forEach((eId) => console.log(ecs.getEntity(eId).serialize()));\n  };\n}\n","import ecs, { cache, player } from \"../state/ecs\";\nimport { grid } from \"../lib/canvas\";\nimport createFOV from \"../lib/fov\";\n\nimport IsInFov from \"../components/IsInFov\";\nimport IsRevealed from \"../components/IsRevealed\";\n\nimport { inFovEntities, opaqueEntities } from \"../queries\";\n\nexport const fov = () => {\n  const { width, height } = grid;\n\n  const originX = player.position.x;\n  const originY = player.position.y;\n\n  const FOV = createFOV(opaqueEntities, width, height, originX, originY, 10);\n\n  // clear out stale fov\n  inFovEntities.get().forEach((x) => x.remove(IsInFov));\n\n  FOV.fov.forEach((locId) => {\n    const entitiesAtLoc = cache.readSet(\"entitiesAtLocation\", locId);\n\n    if (entitiesAtLoc) {\n      entitiesAtLoc.forEach((eId) => {\n        const entity = ecs.getEntity(eId);\n        entity.add(IsInFov);\n\n        if (!entity.has(\"IsRevealed\")) {\n          entity.add(IsRevealed);\n        }\n      });\n    }\n  });\n};\n"],"sourceRoot":""}