{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/state/ecs.js","webpack:///../node_modules/camelcase/index.js","webpack:///../src/Properties/Property.js","webpack:///../src/Properties/SimpleProperty.js","webpack:///../src/Properties/EntityProperty.js","webpack:///../src/Properties/EntityArrayProperty.js","webpack:///../src/Properties/PropertyFactory.js","webpack:///../src/Component.js","webpack:///../src/registries/ComponentRegistry.js","webpack:///../node_modules/deepmerge/dist/cjs.js","webpack:///../src/PrefabComponent.js","webpack:///../src/Prefab.js","webpack:///../src/registries/PrefabRegistry.js","webpack:///../node_modules/nanoid/non-secure/index.js","webpack:///../src/EntityEvent.js","webpack:///../src/Entity.js","webpack:///../src/registries/EntityRegistry.js","webpack:///../src/Query.js","webpack:///../src/registries/QueryRegistry.js","webpack:///../src/Engine.js","webpack:///./src/lib/graphics.js","webpack:///./node_modules/lodash/lodash.js","webpack:///./src/lib/canvas.js","webpack:///./src/components/Position.js","webpack:///./src/components/Appearance.js","webpack:///./src/components/IsBlocking.js","webpack:///./src/components/Name.js","webpack:///./src/components/IsInFov.js","webpack:///./src/components/Layer100.js","webpack:///./src/components/Layer300.js","webpack:///./src/components/Layer400.js","webpack:///./src/components/Brain.js","webpack:///./src/components/CanDijkstra.js","webpack:///./src/components/IsRevealed.js","webpack:///./src/components/Health.js","webpack:///./src/components/IsOpaque.js","webpack:///./src/components/MoveTo.js","webpack:///./src/components/Animate.js","webpack:///./src/state/cache.js","webpack:///./src/components/IsDead.js","webpack:///./src/components/Soilage.js","webpack:///./src/prefabs/bonfire.js","webpack:///./src/prefabs/floor.js","webpack:///./src/prefabs/fountain.js","webpack:///./src/prefabs/goblin.js","webpack:///./src/prefabs/player.js","webpack:///./src/prefabs/wall.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/lib/grid.js","webpack:///./src/lib/dungeon.js","webpack:///./src/initializers/dungeon-level.init.js","webpack:///./src/queries/index.js","webpack:///./src/lib/pathfinding.js","webpack:///./src/systems/ai.js","webpack:///./src/lib/fov.js","webpack:///./src/lib/dijkstra.js","webpack:///./src/systems/movement.js","webpack:///./src/lib/debug.js","webpack:///./src/index.js","webpack:///./src/systems/render.js","webpack:///./src/systems/fov.js","webpack:///./src/systems/animation.js","webpack:///./src/lib/process-user-input.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ecs","Engine","cache","Cache","window","snailCache","registerComponent","Animate","Appearance","Brain","CanDijkstra","Health","IsBlocking","IsDead","IsInFov","IsOpaque","IsRevealed","Layer100","Layer300","Layer400","MoveTo","Name","Position","Soilage","registerPrefab","BonfirePrefab","FloorPrefab","FountainPrefab","GoblinPrefab","PlayerPrefab","WallPrefab","gameState","userInput","playerTurn","turn","player","createPrefab","loadGame","data","JSON","parse","localStorage","getItem","entities","all","destroy","deserialize","getEntity","playerId","console","log","saveGame","gameSaveData","serialize","id","setItem","stringify","camelCase","input","options","Array","TypeError","pascalCase","x","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","constructor","this","component","set","v","entity","Proxy","Reflect","isNaN","old","deleteProperty","values","len","Math","proxy","map","ref","filter","EntityProperty","EntityArrayProperty","SimpleProperty","properties","Boolean","ob","prop","handlerName","camelcase","evt","initialValue","initialProperties","_defaultPropertyValue","PropertyFactory","Component","Map","type","_getType","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","target","source","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","mergeObject","destination","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","overwrite","componentDef","initialProps","props","merge","parent","arrComps","accessor","initialCompProps","registered","prefab","Prefab","inherit","componentData","def","PrefabComponent","PrefabRegistry","nameOrClassOrPrefab","urlAlphabet","writable","components","getAccessor","hasType","nestedComponent","typeOrClass","attach","configurable","has","allowMultiple","isComponent","instance","index","v2","EntityEvent","Entity","refs","Set","json","entityData","createOrGetById","any","none","hasAny","hasAll","hasNone","isMatch","query","Query","size","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","prefabs","nameOrClass","queries","deserializeEntity","colors","defaultColor","defaultBGColor","revealedColor","inventoryHighlight","damage","blood","torchLight","campfire","fountain","armor","bandage","chest","currency","multipleItems","potion","weapon","hudText","healthBar","wall","floor","cavernFloor","stairsUp","stairsDown","goblin","rat","chars","defaultChar","corpse","item","track","FUNC_ERROR_TEXT","PLACEHOLDER","wrapFlags","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsBreakRange","rsMathOpRange","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","reOptMod","rsSeq","join","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","global","freeSelf","self","root","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","types","require","binding","e","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","apply","func","thisArg","args","length","arrayAggregator","setter","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","undefined","basePropertyOf","baseReduce","current","baseTimes","baseUnary","baseValues","cacheHas","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","deburrLetter","escapeHtmlChar","escapeStringChar","chr","hasUnicode","test","mapToArray","forEach","overArg","transform","arg","replaceHolders","setToArray","setToPairs","stringSize","lastIndex","unicodeSize","stringToArray","match","unicodeToArray","split","asciiToArray","unescapeHtmlChar","_","runInContext","context","uid","defaults","pick","Date","String","arrayProto","funcProto","objectProto","coreJsData","funcToString","toString","idCounter","maskSrcKey","exec","keys","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","replace","Buffer","Uint8Array","allocUnsafe","getPrototype","getPrototypeOf","objectCreate","propertyIsEnumerable","splice","spreadableSymbol","isConcatSpreadable","symIterator","iterator","symToStringTag","getNative","ctxClearTimeout","clearTimeout","ctxNow","now","ctxSetTimeout","setTimeout","nativeCeil","ceil","nativeFloor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","isFinite","nativeJoin","nativeKeys","nativeMax","max","nativeMin","min","nativeNow","nativeParseInt","nativeRandom","random","nativeReverse","reverse","DataView","Promise","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","valueOf","symbolToString","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","proto","isObject","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entries","clear","entry","ListCache","MapCache","SetCache","__data__","add","Stack","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","push","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","baseEach","baseAssign","copyObject","baseAt","paths","skip","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","Ctor","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","symbol","initCloneByTag","stacked","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","outer","computed","valuesIndex","templateSettings","pop","getMapData","pairs","LARGE_ARRAY_SIZE","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","isSymbol","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","isFunction","baseGet","path","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInvoke","last","baseIsArguments","baseIsEqual","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","message","convert","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","COMPARE_PARTIAL_FLAG","baseIsNative","baseIteratee","identity","baseMatchesProperty","baseMatches","baseKeys","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","mergeFunc","safeGet","newValue","isTyped","isArrayLikeObject","isPlainObject","toPlainObject","baseMergeDeep","baseNth","baseOrderBy","iteratees","orders","getIteratee","comparer","sort","baseSortBy","objCriteria","criteria","othCriteria","ordersLength","compareAscending","order","compareMultiple","basePickBy","baseSet","basePullAll","indexOf","basePullAt","indexes","previous","baseUnset","baseRepeat","baseRest","start","setToString","overRest","baseSample","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","end","baseSome","baseSortedIndex","retHighest","low","high","MAX_ARRAY_LENGTH","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","slice","copy","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","iterable","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","createCtor","arguments","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","wrapper","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","newHolders","createRecurry","fn","reorder","createInverter","toIteratee","baseInverter","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","charsLength","createRange","step","toFinite","baseRange","createRelationalOperation","toNumber","wrapFunc","isCurry","newData","setData","setWrapToString","createRound","precision","toInteger","pair","noop","createToPairs","baseToPairs","createWrap","srcBitmask","newBitmask","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrLength","arrValue","flatten","otherFunc","getValue","stubArray","hasPath","hasFunc","isLength","ArrayBuffer","resolve","ctorString","isMaskable","stubFalse","otherArgs","oldArray","shortOut","reference","details","insertWrapDetails","updateWrapDetails","getWrapDetails","count","lastCalled","stamp","remaining","rand","memoize","memoizeCapped","charCodeAt","quote","subString","clone","difference","differenceBy","differenceWith","findIndex","findLastIndex","head","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","group","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","chain","interceptor","wrapperAt","countBy","find","findLast","forEachRight","groupBy","invokeMap","keyBy","partition","sortBy","before","bindKey","WRAP_BIND_FLAG","debounce","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","time","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","cancel","flush","defer","delay","resolver","memoized","negate","overArgs","transforms","funcsLength","partial","partialRight","rearg","gt","gte","isError","isInteger","isNumber","isString","lt","lte","toArray","done","iteratorToArray","remainder","toLength","isBinary","assign","assignIn","assignInWith","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","omit","CLONE_DEEP_FLAG","basePick","pickBy","toPairs","toPairsIn","word","toLowerCase","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","toUpperCase","pattern","hasUnicodeWord","unicodeWords","asciiWords","attempt","bindAll","methodNames","flow","flowRight","method","methodOf","mixin","over","overEvery","overSome","basePropertyDeep","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","after","castArray","chunk","compact","concat","cond","conforms","baseConforms","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","fill","baseFill","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","mapValues","matches","matchesProperty","nthArg","omitBy","once","orderBy","propertyOf","pullAllBy","pullAllWith","reject","remove","rest","sampleSize","setWith","shuffle","sortedUniq","sortedUniqBy","separator","limit","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","isArrLike","unary","uniq","uniqBy","uniqWith","unset","update","updateWith","valuesIn","wrap","zipObject","zipObjectDeep","entriesIn","extend","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","position","escape","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","baseInRange","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isMatchWith","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lastIndexOf","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","padStart","radix","floating","temp","reduce","reduceRight","repeat","sample","some","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","template","settings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","times","toLower","toSafeInteger","toUpper","trim","trimEnd","trimStart","truncate","omission","search","substring","newEnd","unescape","uniqueId","prefix","each","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","dir","isRight","view","getView","iterLength","takeCount","iterIndex","commit","wrapped","toJSON","canvas","ctx","pixelRatio","devicePixelRatio","document","querySelector","getContext","layers","ground","tracks","items","abovePlayer","sky","grid","width","height","y","hud","hud2","menu","menu2","menu3","calculatedFontSize","innerWidth","cellWidth","cellHeight","fontSize","style","cssText","font","textAlign","textBaseline","drawBackground","color","alpha","globalAlpha","fillStyle","fillRect","drawChar","char","pos","fgA","fillText","drawCell","fg","bg","bgA","appearance","background","bgColor","charColor","clearCanvas","clearRect","clearCell","pxToCell","ev","bounds","getBoundingClientRect","relativeX","clientX","left","relativeY","clientY","top","trunc","currentColor","handle","layer","nomen","amount","base","relative","startTime","duration","animation","stops","playerReverse","entitiesAtLocation","acc","dijkstraMaps","validate","operation","warn","fireEvent","sourceName","sourceEntityId","originalModule","webpackPolyfill","children","g","deprecate","CARDINAL","DIAGONAL","toCell","cellOrId","cell","idToCell","toLocId","locId","cellToId","rectangle","tileProps","hasWalls","tiles","x1","x2","y1","y2","yi","xi","center","coords","getNeighbors","direction","points","candidate","getNeighborIds","digHorizontalPassage","sprite","digVerticalPassage","digDrunkenWalk","startX","startY","loc","mapX","mapY","isOnMapEdge","initDungeonLevel","dungeon","maxRoomCount","minRoomSize","maxRoomSize","blocking","opaque","rooms","roomTiles","rw","rh","rx","ry","room","rect2","rect1","prevRoom","curr","processedTiles","digLoc","openTileIds","tileId","generateDungeon","currTile","addSet","readSet","aiEntities","createQuery","aiEntitiesInFov","animatingEntities","inFovEntities","layer100Entities","layer300Entities","layer400Entities","movableEntities","opaqueEntities","walkDijkstra","dMapName","neighbors","score","nextPosition","dScore","moveAwayFromPlayer","newLoc","ai","readObj","moveToPlayer","octantTransforms","xx","xy","yx","yy","createFOV","originX","originY","radius","visible","blockingLocations","isOpaque","reveal","castShadows","row","newStart","blocked","distance","deltaY","deltaX","currentX","currentY","leftSlope","rightSlope","sqrt","octant","fov","cell1","cell2","pow","dijkstra","goals","weights","frontier","idx","shift","neighborId","neighborIds","dscore","goal","splatterBlood","locIds","bumpAttack","targetEntity","health","hit","washInFountain","movement","mPos","moveTo","mx","my","blockers","eid","potentialBlocker","isBlocking","blocker","brain","playerDijkstraMap","dMap","coeff","dR","dijkstraReverse","addObj","drawCellIfAble","isInFov","isRevealed","gameTick","FOV","entitiesAtLoc","eId","animate","frameTime","framePercent","isDead","payload","processUserInput","addEventListener","classList","requestAnimationFrame","gameLoop","onclick"],"mappings":"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","file":"main.41b583f13a2423659fc2.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n","import { Engine } from \"geotic\";\nimport Cache from \"./cache\";\n\nimport Animate from \"../components/Animate\";\nimport Appearance from \"../components/Appearance\";\nimport Brain from \"../components/Brain\";\nimport CanDijkstra from \"../components/CanDijkstra\";\nimport Health from \"../components/Health\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport IsDead from \"../components/IsDead\";\nimport IsInFov from \"../components/IsInFov\";\nimport IsOpaque from \"../components/IsOpaque\";\nimport IsRevealed from \"../components/IsRevealed\";\nimport Layer100 from \"../components/Layer100\";\nimport Layer300 from \"../components/Layer300\";\nimport Layer400 from \"../components/Layer400\";\nimport MoveTo from \"../components/MoveTo\";\nimport Name from \"../components/Name\";\nimport Position from \"../components/Position\";\nimport Soilage from \"../components/Soilage\";\n\nimport BonfirePrefab from \"../prefabs/bonfire\";\nimport FloorPrefab from \"../prefabs/floor\";\nimport FountainPrefab from \"../prefabs/fountain\";\nimport GoblinPrefab from \"../prefabs/goblin\";\nimport PlayerPrefab from \"../prefabs/player\";\nimport WallPrefab from \"../prefabs/wall\";\n\nconst ecs = new Engine();\nexport const cache = new Cache();\nwindow.snailCache = cache;\n\n// all Components and Prefabs must be `registered` by the engine\necs.registerComponent(Animate);\necs.registerComponent(Appearance);\necs.registerComponent(Brain);\necs.registerComponent(CanDijkstra);\necs.registerComponent(Health);\necs.registerComponent(IsBlocking);\necs.registerComponent(IsDead);\necs.registerComponent(IsInFov);\necs.registerComponent(IsOpaque);\necs.registerComponent(IsRevealed);\necs.registerComponent(Layer100);\necs.registerComponent(Layer300);\necs.registerComponent(Layer400);\necs.registerComponent(MoveTo);\necs.registerComponent(Name);\necs.registerComponent(Position);\necs.registerComponent(Soilage);\n\necs.registerPrefab(BonfirePrefab);\necs.registerPrefab(FloorPrefab);\necs.registerPrefab(FountainPrefab);\necs.registerPrefab(GoblinPrefab);\necs.registerPrefab(PlayerPrefab);\necs.registerPrefab(WallPrefab);\n\nexport let gameState = {\n  userInput: null,\n  playerTurn: true,\n  turn: 0,\n};\n\nexport let player = ecs.createPrefab(\"PlayerPrefab\");\n\nexport function loadGame() {\n  const data = JSON.parse(localStorage.getItem(\"gameSaveData\"));\n  if (!data) {\n    console.log(\"No Saved Games Found\");\n    return;\n  }\n\n  for (let item of ecs.entities.all) {\n    item.destroy();\n  }\n\n  ecs.deserialize(data.ecs);\n  cache.deserialize(data.cache);\n  gameState = data.gameState;\n  player = ecs.getEntity(data.playerId);\n\n  console.log(\"game loaded\", {\n    cache,\n    gameState,\n    ecs,\n    player,\n  });\n}\n\nexport function saveGame() {\n  const gameSaveData = {\n    ecs: ecs.serialize(),\n    cache: cache.serialize(),\n    gameState,\n    playerId: player.id,\n  };\n  localStorage.setItem(\"gameSaveData\", JSON.stringify(gameSaveData));\n\n  console.log(\"game saved\");\n}\n\nexport default ecs;\n\nmodule.export = {\n  cache,\n  gameState,\n  player,\n  loadGame,\n  saveGame,\n};\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\n\nexport default class EntityProperty extends Property {\n    id;\n\n    set(value) {\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n\n        if (value && value.id) {\n            this.ecs.entities.addRef(value.id, this);\n            this.id = value.id;\n            return;\n        }\n\n        if (typeof value === 'string') {\n            this.ecs.entities.addRef(value, this);\n            this.id = value;\n            return;\n        }\n\n        this.id = undefined;\n    }\n\n    get() {\n        return this.id && this.component.ecs.getEntity(this.id);\n    }\n\n    serialize() {\n        return this.id;\n    }\n\n    onDestroyed() {\n        if (this.id) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n    }\n\n    cleanupReference(entity) {\n        if (this.id === entity.id) {\n            this.id = undefined;\n        } else {\n            console.warn(\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`\n            );\n        }\n    }\n}\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import camelcase from 'camelcase';\nimport PropertyFactory from './Properties/PropertyFactory';\n\nexport default class Component {\n    #entity = null;\n    #ecs = null;\n    #props = {};\n    #isDestroyed = false;\n\n    static allowMultiple = false;\n    static keyProperty = null;\n    static properties = {};\n\n    static get type() {\n        return this.name;\n    }\n\n    get entity() {\n        return this.#entity;\n    }\n\n    get ecs() {\n        return this.#ecs;\n    }\n\n    get type() {\n        return this.constructor.name;\n    }\n\n    get isAttached() {\n        return Boolean(this.entity);\n    }\n\n    get isDestroyed() {\n        return this.#isDestroyed;\n    }\n\n    get allowMultiple() {\n        return this.constructor.allowMultiple;\n    }\n\n    get keyProperty() {\n        return this.constructor.keyProperty;\n    }\n\n    get properties() {\n        const ob = {};\n\n        for (const [key, value] of Object.entries(this.#props)) {\n            ob[key] = value.get();\n        }\n\n        return ob;\n    }\n\n    get key() {\n        return this[this.keyProperty];\n    }\n\n    constructor(ecs, properties = {}) {\n        this.#ecs = ecs;\n        this._defineProxies(properties);\n    }\n\n    serialize() {\n        return Object.entries(this.#props).reduce(\n            (o, [key, value]) => ({\n                ...o,\n                [key]: value.serialize(),\n            }),\n            {}\n        );\n    }\n\n    _onAttached(entity) {\n        this.#entity = entity;\n        this.ecs.queries.onComponentAdded(entity, this);\n        this.onAttached();\n    }\n\n    _onDetached() {\n        if (this.isAttached) {\n            this.onDetached();\n            const entity = this.#entity;\n\n            this.#entity = null;\n            this.ecs.queries.onComponentRemoved(entity, this);\n        }\n    }\n\n    _onDestroyed() {\n        this.#isDestroyed = true;\n        this.onDestroyed();\n\n        for (const prop of Object.values(this.#props)) {\n            prop.onDestroyed();\n        }\n    }\n\n    onAttached() {}\n\n    onDetached() {}\n\n    onDestroyed() {}\n\n    remove(destroy = true) {\n        if (this.isAttached) {\n            this.entity.remove(this);\n        }\n        if (destroy) {\n            this._onDestroyed();\n        }\n    }\n\n    destroy() {\n        this.remove(true);\n    }\n\n    _onEvent(evt) {\n        this.onEvent(evt);\n\n        const handlerName = camelcase(`on ${evt.name}`);\n\n        if (typeof this[handlerName] === 'function') {\n            this[handlerName](evt);\n        }\n    }\n\n    onEvent(evt) {}\n\n    _defaultPropertyValue(propertyName) {\n        const value = this.constructor.properties[propertyName];\n\n        if (value === '<EntityArray>') {\n            return [];\n        }\n\n        if (value === '<Entity>') {\n            return undefined;\n        }\n\n        return value;\n    }\n\n    _defineProxies(initialProperties) {\n        for (const key in this.constructor.properties) {\n            const initialValue = initialProperties.hasOwnProperty(key)\n                ? initialProperties[key]\n                : this._defaultPropertyValue(key);\n            const property = PropertyFactory.create(\n                this,\n                this.constructor.properties[key]\n            );\n\n            this.#props[key] = property;\n            Object.defineProperty(this, key, property.descriptor);\n            property.set(initialValue);\n        }\n    }\n}\n","import Component from '../Component';\nimport camelcase from 'camelcase';\n\nexport default class ComponentRegistry {\n    #nameCache = new Map();\n    #definitions = new Map();\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    register(component) {\n        this.#definitions.set(component.name, component);\n        this.#nameCache.set(component.name, camelcase(component.name));\n    }\n\n    getAccessor(type) {\n        if (this.#nameCache.has(type)) {\n            return this.#nameCache.get(type);\n        }\n\n        this.#nameCache.set(type, camelcase(type));\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this.#definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this.#ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\n    name = '';\n    inherit = [];\n    components = [];\n\n    constructor(ecs, name) {\n        this.ecs = ecs;\n        this.name = name;\n    }\n\n    addComponent(prefabComponent) {\n        this.components.push(prefabComponent);\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        this.inherit.forEach((parent) => {\n            parent.applyToEntity(entity, initialProps);\n        });\n\n        const arrComps = {};\n\n        this.components.forEach((component, i) => {\n            const definition = component.componentDef;\n            const accessor = this.ecs.components.getAccessor(definition.type);\n\n            let initialCompProps = {};\n\n            if (definition.allowMultiple) {\n                if (definition.keyProperty) {\n                    const key = component.properties[definition.keyProperty];\n\n                    if (\n                        initialProps[accessor] &&\n                        initialProps[accessor][key]\n                    ) {\n                        initialCompProps =\n                            initialProps[accessor][key];\n                    }\n                } else {\n                    if (!arrComps[accessor]) {\n                        arrComps[accessor] = 0;\n                    }\n\n                    if (\n                        initialProps[accessor] &&\n                        initialProps[accessor][\n                            arrComps[accessor]\n                        ]\n                    ) {\n                        initialCompProps =\n                            initialProps[accessor][\n                                arrComps[accessor]\n                            ];\n                    }\n\n                    arrComps[accessor]++;\n                }\n            } else {\n                initialCompProps = initialProps[accessor];\n            }\n\n            component.applyToEntity(entity, initialCompProps);\n        });\n\n        return entity;\n    }\n}\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    #prefabs = {};\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this.#ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this.#ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this.#ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this.#prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this.#prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this.#ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\n    data = {};\n    #prevented = false;\n    #handled = false;\n\n    get prevented() {\n        return this.#prevented;\n    }\n\n    get handled() {\n        return this.#handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this.#handled = true;\n        this.#prevented = true;\n    }\n\n    prevent() {\n        this.#prevented = true;\n    }\n}\n","import Component from './Component';\nimport EntityEvent from './EntityEvent';\n\nexport default class Entity {\n    #id = null;\n    #components = {};\n    #ecs = null;\n    #isDestroyed = false;\n\n    get ecs() {\n        return this.#ecs;\n    }\n\n    get components() {\n        return this.#components;\n    }\n\n    get isDestroyed() {\n        return this.#isDestroyed;\n    }\n\n    constructor(ecs, id = null) {\n        this.#ecs = ecs;\n        this.#id = id || ecs.generateId();\n        Object.defineProperty(this, 'id', {\n            value: this.#id,\n            enumerable: true,\n            writable: false,\n        });\n    }\n\n    has(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const hasType = this.hasOwnProperty(accessor);\n\n        if (hasType && key) {\n            return this[accessor].hasOwnProperty(key);\n        }\n\n        return hasType;\n    }\n\n    get(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const components = this[accessor];\n\n        if (components && key) {\n            return components[key];\n        }\n\n        return components;\n    }\n\n    destroy() {\n        this.#isDestroyed = true;\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component.destroy();\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent.destroy();\n                }\n            }\n        }\n\n        this.ecs.entities.onEntityDestroyed(this);\n    }\n\n    add(typeOrClass, properties = {}) {\n        const component = this.ecs.components.create(typeOrClass, properties);\n\n        if (!component) {\n            console.warn(\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\n            );\n            return false;\n        }\n\n        return this.attach(component);\n    }\n\n    attach(component) {\n        const accessor = this.ecs.components.getAccessor(component.type);\n\n        if (!component.allowMultiple) {\n            if (this.has(component.type)) {\n                console.warn(\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\n                );\n                return false;\n            }\n\n            this.components[accessor] = component;\n\n            Object.defineProperty(this, accessor, {\n                enumerable: true,\n                configurable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.keyProperty) {\n            if (!this.components[accessor]) {\n                this.components[accessor] = [];\n                Object.defineProperty(this, accessor, {\n                    configurable: true,\n                    enumerable: true,\n                    get() {\n                        return this.components[accessor];\n                    },\n                });\n            }\n\n            this.components[accessor].push(component);\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.key) {\n            console.warn(\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\n            );\n            return false;\n        }\n\n        if (!this.components[accessor]) {\n            this.components[accessor] = {};\n            Object.defineProperty(this, accessor, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n        }\n\n        this.components[accessor][component.key] = component;\n\n        component._onAttached(this);\n        this.ecs.queries.onComponentAdded(this, component);\n\n        return true;\n    }\n\n    owns(component) {\n        return component.entity === this;\n    }\n\n    remove(typeOrClassOrComponent, key = null) {\n        const isComponent = typeOrClassOrComponent instanceof Component;\n        key = isComponent ? typeOrClassOrComponent.key : key;\n\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\n\n        const accessor = this.ecs.components.getAccessor(definition.type);\n\n        if (definition.allowMultiple) {\n            if (!definition.keyProperty) {\n                if (isComponent) {\n                    const all = this.components[accessor];\n\n                    if (!all) {\n                        console.warn(\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n                        );\n                        return;\n                    }\n\n                    const index = all.indexOf(typeOrClassOrComponent);\n\n                    if (index > -1) {\n                        all.splice(index, 1);\n                        typeOrClassOrComponent._onDetached();\n\n                        if (all.length === 0) {\n                            delete this[accessor];\n                            delete this.components[accessor];\n                        }\n\n                        this.ecs.queries.onComponentRemoved(this);\n\n                        return true;\n                    }\n                } else {\n                    for (const instance of this.components[accessor]) {\n                        instance._onDetached();\n                    }\n\n                    delete this[accessor];\n                    delete this.components[accessor];\n                    this.ecs.queries.onComponentRemoved(this);\n\n                    return true;\n                }\n            }\n\n            if (!key) {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\n                );\n                return;\n            }\n\n            const all = this.components[accessor];\n            const component = all[key];\n\n            if (component) {\n                delete all[key];\n                component._onDetached();\n                if (Object.keys(all).length <= 0) {\n                    delete this[accessor];\n                    delete this.components[accessor];\n                }\n                this.ecs.queries.onComponentRemoved(this);\n\n                return component;\n            } else {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\n                );\n                return;\n            }\n        }\n\n        if (accessor in this) {\n            const component = this.components[accessor];\n\n            delete this[accessor];\n            delete this.components[accessor];\n            component._onDetached();\n            this.ecs.queries.onComponentRemoved(this);\n\n            return component;\n        }\n\n        console.warn(\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n        );\n    }\n\n    serialize() {\n        return Object.entries(this.components).reduce(\n            (o, [key, value]) => {\n                if (value instanceof Component) {\n                    return {\n                        ...o,\n                        [key]: value.serialize(),\n                    };\n                }\n\n                if (Array.isArray(value)) {\n                    return {\n                        ...o,\n                        [key]: value.map((v) => v.serialize()),\n                    };\n                }\n\n                return {\n                    ...o,\n                    [key]: Object.entries(value).reduce(\n                        (o2, [k2, v2]) => ({\n                            ...o2,\n                            [k2]: v2.serialize(),\n                        }),\n                        {}\n                    ),\n                };\n            },\n            {\n                id: this.id,\n            }\n        );\n    }\n\n    fireEvent(name, data) {\n        const evt = new EntityEvent(name, data);\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component._onEvent(evt);\n\n                if (evt.prevented) {\n                    return evt;\n                }\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent._onEvent(evt);\n\n                    if (evt.prevented) {\n                        return evt;\n                    }\n                }\n            }\n        }\n\n        return evt;\n    }\n}\n","import Entity from '../Entity';\nimport camelcase from 'camelcase';\n\nexport default class EntityRegistry {\n    #entities = new Map();\n    #ecs = null;\n    #refs = new Map();\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    get all() {\n        return this.#entities.values();\n    }\n\n    register(entity) {\n        this.#entities.set(entity.id, entity);\n\n        return entity;\n    }\n\n    get(id) {\n        return this.#entities.get(id);\n    }\n\n    createOrGetById(id) {\n        const entity = this.get(id);\n\n        if (entity) {\n            return entity;\n        }\n\n        return this.create(id);\n    }\n\n    create(id = undefined) {\n        const entity = new Entity(this.#ecs, id);\n\n        this.register(entity);\n\n        this.#ecs.queries.onEntityCreated(entity);\n\n        return entity;\n    }\n\n    destroy(entity) {\n        entity.destroy();\n    }\n\n    onEntityDestroyed(entity) {\n        this.cleanupRefs(entity);\n        this.#entities.delete(entity.id);\n        this.#ecs.queries.onEntityDestroyed(entity);\n    }\n\n    cleanupRefs(entity) {\n        const refs = this.#refs.get(entity.id);\n\n        if (!refs) {\n            return;\n        }\n\n        for (const ref of refs) {\n            ref.cleanupReference(entity);\n        }\n\n        delete this.#refs[entity.id];\n    }\n\n    addRef(entityId, property) {\n        if (!this.#refs.has(entityId)) {\n            this.#refs.set(entityId, new Set([property]));\n            return;\n        }\n\n        this.#refs.get(entityId).add(property);\n    }\n\n    removeRef(entityId, property) {\n        if (this.#refs.has(entityId)) {\n            this.#refs.get(entityId).delete(property);\n        }\n    }\n\n    serialize() {\n        const json = [];\n\n        this.#entities.forEach((entity) => {\n            json.push(entity.serialize());\n        });\n\n        return json;\n    }\n\n    deserialize(data) {\n        for (const entityData of data.entities) {\n            this.createOrGetById(entityData.id);\n        }\n\n        for (const entityData of data.entities) {\n            this.deserializeEntity(entityData);\n        }\n    }\n\n    deserializeEntity(data) {\n        const { id, ...componentData } = data;\n        const entity = this.createOrGetById(id);\n\n        Object.entries(componentData).forEach(([key, value]) => {\n            const type = camelcase(key, { pascalCase: true });\n            const definition = this.#ecs.components.get(type);\n\n            if (definition.allowMultiple) {\n                Object.values(value).forEach((d) => {\n                    entity.add(definition, d);\n                });\n            } else {\n                entity.add(definition, value);\n            }\n        });\n    }\n}\n","import merge from 'deepmerge';\n\nexport default class Query {\n    #ecs;\n    #filter;\n    #cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this.#ecs = ecs;\n        this.#filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this.#filter.any.length\n            ? this.#filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this.#filter.all.every((c) => entity.has(c));\n        const hasNone = !this.#filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    candidate(entity) {\n        if (this.isMatch(entity)) {\n            this.#cache.add(entity);\n            return true;\n        }\n\n        this.#cache.delete(entity);\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        this.#cache.delete(entity);\n    }\n\n    bustCache() {\n        this.#cache.clear();\n\n        for (const entity of this.#ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this.#cache;\n    }\n\n    get() {\n        return this.#cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    #ecs;\n    #queries = [];\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this.#ecs, filters);\n\n        this.#queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this.#queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this.#queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this.#queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this.#queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\nimport PrefabRegistry from './registries/PrefabRegistry';\nimport { nanoid } from 'nanoid/non-secure';\nimport EntityRegistry from './registries/EntityRegistry';\nimport QueryRegistry from './registries/QueryRegistry';\n\nexport default class Engine {\n    constructor() {\n        this.idGenerator = () => nanoid();\n        this.components = new ComponentRegistry(this);\n        this.prefabs = new PrefabRegistry(this);\n        this.entities = new EntityRegistry(this);\n        this.queries = new QueryRegistry(this);\n    }\n\n    generateId() {\n        return this.idGenerator();\n    }\n\n    createEntity() {\n        return this.entities.create();\n    }\n\n    createPrefab(nameOrClass, initialProps = {}) {\n        return this.prefabs.create(nameOrClass, initialProps);\n    }\n\n    destroyEntity(entity) {\n        return this.entities.destroy(entity);\n    }\n\n    registerPrefab(data) {\n        this.prefabs.deserialize(data);\n    }\n\n    registerComponent(component) {\n        this.components.register(component);\n    }\n\n    getEntity(id) {\n        return this.entities.get(id);\n    }\n\n    createComponent(type, properties) {\n        return this.components.create(type, properties);\n    }\n\n    createQuery(filters) {\n        return this.queries.create(filters);\n    }\n\n    serialize() {\n        return {\n            entities: this.entities.serialize(),\n        };\n    }\n\n    deserialize(data) {\n        if (data.id) {\n            return this.entities.deserializeEntity(data);\n        }\n\n        return this.entities.deserialize(data);\n    }\n}\n","export const colors = {\n  defaultColor: \"#ff0077\",\n  defaultBGColor: \"#000\",\n  revealedColor: \"#010C0E\",\n\n  inventoryHighlight: \"#A9CCE3\",\n\n  // animations\n  damage: \"#ff0000\",\n\n  // soilage\n  blood: [\"#660000\", \"#8b0000\", \"#800000\", \"#cc1100\"],\n\n  // light:\n  torchLight: \"#FFD00E\",\n  campfire: \"#FFD00E\",\n\n  // staging:\n  fountain: \"#3366FF\",\n\n  // items:\n  armor: \"#DAA520\",\n  bandage: \"#F7DC6F\",\n  chest: \"#DAA520\",\n  currency: \"#DAA520\",\n  multipleItems: \"#DAA520\",\n  potion: \"#DAA520\",\n  weapon: \"#DAA520\",\n  // log\n  hudText: \"#fff\",\n  healthBar: \"#B91906\",\n  // maps\n  wall: [\"#AAA\", \"#BBB\", \"#CCC\", \"#DDD\"],\n  floor: [\"#555555\", \"#666666\", \"#444444\"],\n  cavernFloor: [\"#71331e\", \"#652d1b\", \"#5a2818\", \"#4f2315\"],\n  stairsUp: \"#AAA\",\n  stairsDown: \"#AAA\",\n  // player\n  player: \"#FFF\",\n  // monsters\n  goblin: \"#0C9\",\n  rat: \"#F1948A\",\n};\n\nexport const chars = {\n  defaultChar: \"?\",\n  corpse: \"%\",\n  // staging\n  campfire: \"ô\", // ö o\n  fountain: \"⦿\", // ⦿ ⦾ ◯ ⨀ ⊚\n  // equipment\n  armor: \"[\",\n  weapon: \")\",\n  // containers\n  chest: \"=\",\n  // items\n  currency: \"*\",\n  potion: \"!\",\n  multipleItems: \"&\",\n  item: \"~\",\n  // maps\n  wall: \"#\",\n  floor: \"•\",\n  cavernFloor: \"•\",\n  stairsUp: \"<\",\n  stairsDown: \">\",\n  // tracks\n  track: \"•\",\n  // player\n  player: \"@\",\n  // monsters\n  goblin: \"g\",\n  rat: \"r\",\n};\n","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.15';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // with lookup (in case of e.g. prototype pollution), and strip newlines if any.\n      // A newline wouldn't be a valid sourceURL anyway, and it'd enable code injection.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/[\\r\\n]/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      // Like with sourceURL, we take care to not check the option's prototype,\n      // as this configuration is a code injection vector.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","const pixelRatio = window.devicePixelRatio || 1;\nlet canvas;\nlet ctx;\n\n// it's a PITA to mock canvas in jest so we just hack it when it's running\nif (process.env.NODE_ENV === \"test\") {\n  canvas = {\n    style: {},\n  };\n  ctx = {};\n} else {\n  canvas = document.querySelector(\"#canvas\");\n  ctx = canvas.getContext(\"2d\");\n}\n\nexport const layers = {\n  ground: 100,\n  tracks: 200,\n  items: 300,\n  player: 400,\n  abovePlayer: 500,\n  sky: 600,\n};\n\nexport const grid = {\n  width: 100,\n  height: 34,\n\n  map: {\n    width: 79,\n    height: 29,\n    x: 21,\n    y: 3,\n  },\n\n  log: {\n    width: 79,\n    height: 3,\n    x: 21,\n    y: 0,\n  },\n\n  hud: {\n    width: 20,\n    height: 34,\n    x: 0,\n    y: 0,\n  },\n\n  hud2: {\n    width: 79,\n    height: 2,\n    x: 21,\n    y: 32,\n  },\n\n  menu: {\n    width: 40,\n    height: 30,\n    x: 20,\n    y: 3,\n  },\n\n  menu2: {\n    width: 40,\n    height: 30,\n    x: 60,\n    y: 3,\n  },\n\n  menu3: {\n    width: 79,\n    height: 34,\n    x: 20,\n    y: 0,\n  },\n};\n\nconst font = \"Menlo\";\nconst lineHeight = 1.2;\n\nlet calculatedFontSize = window.innerWidth / grid.width;\nlet cellWidth = calculatedFontSize * pixelRatio;\nlet cellHeight = calculatedFontSize * lineHeight * pixelRatio;\nlet fontSize = calculatedFontSize * pixelRatio;\n\ncanvas.style.cssText = `width: ${calculatedFontSize * grid.width}; height: ${\n  calculatedFontSize * lineHeight * grid.height\n}`;\ncanvas.width = cellWidth * grid.width;\ncanvas.height = cellHeight * grid.height;\n\nctx.font = `normal ${fontSize}px ${font}`;\nctx.textAlign = \"center\";\nctx.textBaseline = \"middle\";\n\nconst drawBackground = (color, position, alpha = 1) => {\n  if (color === \"transparent\") return;\n\n  ctx.globalAlpha = alpha;\n  ctx.fillStyle = color;\n  ctx.fillRect(\n    position.x * cellWidth,\n    position.y * cellHeight,\n    cellWidth,\n    cellHeight\n  );\n};\n\nconst drawChar = ({ char, color, pos, fgA, size }) => {\n  ctx.globalAlpha = fgA;\n  ctx.fillStyle = color;\n  if (size) {\n    ctx.font = `${size}px sans-serif`;\n  }\n  ctx.fillText(\n    char,\n    pos.x * cellWidth + cellWidth / 2,\n    pos.y * cellHeight + cellHeight / 2\n  );\n};\n\nexport const drawCell = (entity, options = {}) => {\n  const { fg, bg, x, y, fgA = 1, bgA = 1, size = null } = options;\n  const {\n    appearance: { char, background, color },\n    position,\n  } = entity;\n\n  const bgColor = bg ? bg : background;\n  const charColor = fg ? fg : color;\n  const pos = x && y ? { x, y } : position;\n\n  drawBackground(bgColor, pos, bgA);\n  drawChar({ char, color: charColor, pos, fgA, size });\n};\n\nexport const clearCanvas = () =>\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\nexport const clearCell = (x, y) => {\n  ctx.clearRect(x, y, cellWidth, cellHeight);\n};\n\nexport const pxToCell = (ev) => {\n  const bounds = canvas.getBoundingClientRect();\n  const relativeX = ev.clientX - bounds.left;\n  const relativeY = ev.clientY - bounds.top;\n  const colPos = Math.trunc((relativeX / cellWidth) * pixelRatio);\n  const rowPos = Math.trunc((relativeY / cellHeight) * pixelRatio);\n\n  return [colPos, rowPos];\n};\n\nexport const onClick = (handler) => {\n  canvas.addEventListener(\"click\", (ev) => {\n    const cell = pxToCell(ev);\n    handler(cell[0], cell[1]);\n  });\n};\n\nexport const onMouseMove = (handler) => {\n  canvas.addEventListener(\"mousemove\", (ev) => {\n    const cell = pxToCell(ev);\n    handler(cell[0], cell[1]);\n  });\n};\n","import { Component } from \"geotic\";\n\nexport default class Position extends Component {\n  static properties = { x: 0, y: 0 };\n}\n","import { Component } from \"geotic\";\nimport { chars, colors } from \"../lib/graphics\";\nimport { layers } from \"../lib/canvas\";\n\nexport default class Appearance extends Component {\n  static properties = {\n    color: colors.defaultColor,\n    currentColor: this.color,\n    char: chars.defaultChar,\n    background: colors.defaultBGColor,\n    layer: layers.ground,\n  };\n\n  onSoil(evt) {\n    this.currentColor = evt.data.color;\n    evt.handle();\n  }\n\n  onClean(evt) {\n    this.currentColor = null;\n  }\n}\n","import { Component } from \"geotic\";\n\nexport default class IsBlocking extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class Name extends Component {\n  static properties = {\n    first: \"\",\n    last: \"\",\n    nomen: \"\",\n  };\n}\n","import { Component } from \"geotic\";\n\nexport default class IsInFov extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class Layer100 extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class Layer300 extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class Layer400 extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class Brain extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class CanDijkstra extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class IsRevealed extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class Health extends Component {\n  static properties = { current: 10, base: 10 };\n\n  onTakeDamage(evt) {\n    this.current -= evt.data.amount;\n    evt.handle();\n  }\n}\n","import { Component } from \"geotic\";\n\nexport default class IsOpaque extends Component {}\n","import { Component } from \"geotic\";\n\nexport default class MoveTo extends Component {\n  static properties = {\n    x: 0,\n    y: 0,\n    relative: true, // x,y are relative to current loc or exact\n  };\n}\n","import { colors } from \"../lib/graphics\";\nimport { Component } from \"geotic\";\n\nexport default class Animate extends Component {\n  static properties = {\n    startTime: null,\n    duration: 200,\n    animation: {\n      type: \"color\",\n      stops: [colors.defaultColor],\n    },\n  };\n\n  onSetStartTime(evt) {\n    this.startTime = evt.data.time;\n    evt.handle();\n  }\n\n  onRemove() {\n    console.log(\"Animation over!\");\n  }\n}\n","import { get, set } from \"lodash\";\n\nexport default class Cache {\n  entitiesAtLocation = {};\n  dijkstraMaps = {\n    player: {},\n    playerReverse: {},\n  };\n\n  serialize() {\n    const entitiesAtLocation = Object.keys(this.entitiesAtLocation).reduce(\n      (acc, val) => {\n        acc[val] = [...this.entitiesAtLocation[val]];\n        return acc;\n      },\n      {}\n    );\n\n    const dijkstraMaps = this.dijkstraMaps;\n\n    return {\n      entitiesAtLocation,\n      dijkstraMaps,\n    };\n  }\n\n  clear() {\n    this.entitiesAtLocation = {};\n    this.dijkstraMaps = {};\n  }\n\n  deserialize(data) {\n    this.clear();\n\n    this.dijkstraMaps = data.dijkstraMaps;\n    this.entitiesAtLocation = Object.keys(data.entitiesAtLocation).reduce(\n      (acc, val) => {\n        acc[val] = new Set(data.entitiesAtLocation[val]);\n        return acc;\n      },\n      {}\n    );\n  }\n\n  addSet(name, key, value) {\n    if (!this.validate(name, key, \"addSet\")) return;\n\n    if (this[name][key]) {\n      this[name][key].add(value);\n    } else {\n      this[name][key] = new Set();\n      this[name][key].add(value);\n    }\n  }\n\n  readSet(name, key, value) {\n    if (!this.validate(name, key, \"readSet\")) return;\n\n    if (value) {\n      return this[name][key].get(value);\n    }\n\n    return this[name][key];\n  }\n\n  addObj(name, path, value) {\n    set(this[name], path, value);\n  }\n\n  readObj(name, path) {\n    return get(this[name], path);\n  }\n\n  delete(name, key, value) {\n    if (!this.validate(name, key, \"delete\")) return;\n\n    if (this[name][key].has(value)) {\n      this[name][key].delete(value);\n    }\n  }\n\n  print(name, key) {\n    if (!name) {\n      return console.log(this);\n    }\n\n    if (name && !key) {\n      return console.log(this[name]);\n    }\n\n    if (name && key) {\n      return console.log(this[name][key]);\n    }\n  }\n\n  validate(name, key, operation) {\n    if (operation === \"add\") {\n      if (!this[name]) {\n        console.warn(`Cannot \"${operation}\". Cache \"${name}\" does not exist`);\n        return false;\n      }\n    }\n\n    if (operation === \"read\") {\n      if (!this[name]) {\n        console.warn(`Cannot \"${operation}\". Cache \"${name}\" does not exist`);\n        return false;\n      }\n\n      if (key && !this[name][key]) {\n        console.warn(\n          `Cannot \"${operation}\". Cache ${name}.${key} does not exist`\n        );\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n","import { Component } from \"geotic\";\n\nexport default class IsDead extends Component {}\n","import { Component } from \"geotic\";\nimport { colors } from \"../lib/graphics\";\n\nexport default class Soilage extends Component {\n  static allowMultiple = true;\n\n  static properties = {\n    color: colors.defaultColor,\n    name: \"blood\",\n    sourceName: \"\",\n    sourceEntityId: \"\",\n  };\n\n  onAttached(evt) {\n    this.entity.fireEvent(\"soil\", { color: this.color });\n  }\n\n  onClean(evt) {\n    this.destroy();\n  }\n}\n","import Appearance from \"../components/Appearance\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport Position from \"../components/Position\";\nimport { chars, colors } from \"../lib/graphics\";\nimport Layer300 from \"../components/Layer300\";\nimport Name from \"../components/Name\";\n\nexport default {\n  name: \"BonfirePrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.campfire,\n        char: chars.campfire,\n      },\n    },\n    { type: IsBlocking },\n    { type: Layer300 },\n    { type: Position },\n    { type: Name, properties: { nomen: \"bonfire\" } },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport Layer100 from \"../components/Layer100\";\nimport Name from \"../components/Name\";\nimport Position from \"../components/Position\";\n\nimport { chars, colors } from \"../lib/graphics\";\n\nexport default {\n  name: \"FloorPrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.floor,\n        char: chars.floor,\n      },\n    },\n    { type: Layer100 },\n    { type: Position },\n    { type: Name, properties: { nomen: \"floor\" } },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport Position from \"../components/Position\";\nimport { chars, colors } from \"../lib/graphics\";\nimport Layer300 from \"../components/Layer300\";\nimport Name from \"../components/Name\";\n\nexport default {\n  name: \"FountainPrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.fountain,\n        char: chars.fountain,\n      },\n    },\n    { type: IsBlocking },\n    { type: Layer300 },\n    { type: Position },\n    { type: Name, properties: { nomen: \"fountain\" } },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport Brain from \"../components/Brain\";\nimport Health from \"../components/Health\";\nimport Position from \"../components/Position\";\nimport { chars, colors } from \"../lib/graphics\";\nimport Layer400 from \"../components/Layer400\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport Name from \"../components/Name\";\n\nexport default {\n  name: \"GoblinPrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.goblin,\n        char: chars.goblin,\n      },\n    },\n    { type: Brain },\n    { type: Health },\n    { type: IsBlocking },\n    { type: Layer400 },\n    { type: Name, properties: { nomen: \"goblin\" } },\n    { type: Position },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport Health from \"../components/Health\";\nimport Position from \"../components/Position\";\nimport { chars, colors } from \"../lib/graphics\";\nimport Layer400 from \"../components/Layer400\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport Name from \"../components/Name\";\n\nexport default {\n  name: \"PlayerPrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.player,\n        char: chars.player,\n      },\n    },\n    { type: Health, properties: { current: 10000, max: 10000 } },\n    { type: IsBlocking },\n    { type: Layer400 },\n    { type: Name, properties: { nomen: \"player\" } },\n    { type: Position },\n  ],\n};\n","import Appearance from \"../components/Appearance\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport IsOpaque from \"../components/IsOpaque\";\nimport Layer100 from \"../components/Layer100\";\nimport Position from \"../components/Position\";\n\nimport { chars, colors } from \"../lib/graphics\";\nimport Name from \"../components/Name\";\n\nexport default {\n  name: \"WallPrefab\",\n\n  components: [\n    {\n      type: Appearance,\n      properties: {\n        color: colors.wall,\n        char: chars.wall,\n      },\n    },\n    { type: IsBlocking },\n    { type: IsOpaque },\n    { type: Layer100 },\n    { type: Position },\n    { type: Name, properties: { nomen: \"wall\" } },\n  ],\n};\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { grid } from \"../lib/canvas\";\nimport { sample } from \"lodash\";\n\nexport const CARDINAL = [\n  { x: 0, y: -1 }, // N\n  { x: 1, y: 0 }, // E\n  { x: 0, y: 1 }, // S\n  { x: -1, y: 0 }, // W\n];\n\nexport const DIAGONAL = [\n  { x: 1, y: -1 }, // NE\n  { x: 1, y: 1 }, // SE\n  { x: -1, y: 1 }, // SW\n  { x: -1, y: -1 }, // NW\n];\n\nexport const toCell = (cellOrId) => {\n  let cell = cellOrId;\n  if (typeof cell === \"string\") cell = idToCell(cell);\n\n  return cell;\n};\n\nexport const toLocId = (cellOrId) => {\n  let locId = cellOrId;\n  if (typeof locId !== \"string\") locId = cellToId(locId);\n\n  return locId;\n};\n\nexport const rectangle = ({ x, y, width, height, hasWalls }, tileProps) => {\n  const tiles = {};\n\n  const x1 = x;\n  const x2 = x + width;\n  const y1 = y;\n  const y2 = y + height;\n\n  if (hasWalls) {\n    for (let yi = y1 + 1; yi < y2 - 1; yi++) {\n      for (let xi = x1 + 1; xi < x2 - 1; xi++) {\n        tiles[`${xi},${yi}`] = { x: xi, y: yi, ...tileProps };\n      }\n    }\n  } else {\n    for (let yi = y1; yi < y2; yi++) {\n      for (let xi = x1; xi < x2; xi++) {\n        tiles[`${xi},${yi}`] = { x: xi, y: yi, ...tileProps };\n      }\n    }\n  }\n\n  const center = {\n    x: Math.round((x1 + x2) / 2),\n    y: Math.round((y1 + y2) / 2),\n  };\n\n  return { x1, x2, y1, y2, center, hasWalls, tiles };\n};\n\nexport const rectsIntersect = (rect1, rect2) => {\n  return (\n    rect1.x1 <= rect2.x2 &&\n    rect1.x2 >= rect2.x1 &&\n    rect1.y1 <= rect2.y2 &&\n    rect1.y2 >= rect2.y1\n  );\n};\n\nexport const distance = (cell1, cell2) => {\n  const x = Math.pow(cell2.x - cell1.x, 2);\n  const y = Math.pow(cell2.y - cell1.y, 2);\n  return Math.floor(Math.sqrt(x + y));\n};\n\nexport const idToCell = (id) => {\n  const coords = id.split(\",\");\n  return { x: parseInt(coords[0], 10), y: parseInt(coords[1], 10) };\n};\n\nexport const cellToId = ({ x, y }) => `${x},${y}`;\n\nexport const isOnMapEdge = (x, y) => {\n  const { width, height, x: mapX, y: mapY } = grid.map;\n\n  if (x === mapX) return true; // west edge\n  if (y === mapY) return true; // north edge\n  if (x === mapX + width - 1) return true; // east edge\n  if (y === mapY + height - 1) return true; // south edge\n  return false;\n};\n\nexport const getNeighbors = ({ x, y }, direction = CARDINAL) => {\n  const points = [];\n  for (let dir of direction) {\n    let candidate = {\n      x: x + dir.x,\n      y: y + dir.y,\n    };\n    if (\n      candidate.x >= 0 &&\n      candidate.x < grid.width &&\n      candidate.y >= 0 &&\n      candidate.y < grid.height\n    ) {\n      points.push(candidate);\n    }\n  }\n  return points;\n};\n\n// export const getNeighborIds = (x, y) => getNeighbors({ x, y }).map(cellToId);\n\nexport const getNeighborIds = (cellOrId, direction = \"CARDINAL\") => {\n  let cell = toCell(cellOrId);\n\n  if (direction === \"CARDINAL\") {\n    return getNeighbors(cell, CARDINAL).map(cellToId);\n  }\n\n  if (direction === \"DIAGONAL\") {\n    return getNeighbors(cell, DIAGONAL).map(cellToId);\n  }\n\n  if (direction === \"ALL\") {\n    return [\n      ...getNeighbors(cell, CARDINAL).map(cellToId),\n      ...getNeighbors(cell, DIAGONAL).map(cellToId),\n    ];\n  }\n};\n\nexport const isNeighbor = (a, b) => {\n  let posA = a;\n  if (typeof posA === \"string\") {\n    posA = idToCell(a);\n  }\n\n  let posB = b;\n  if (typeof posB === \"string\") {\n    posB = idToCell(b);\n  }\n\n  const { x: ax, y: ay } = posA;\n  const { x: bx, y: by } = posB;\n\n  if (\n    (ax - bx === 1 && ay - by === 0) ||\n    (ax - bx === 0 && ay - by === -1) ||\n    (ax - bx === -1 && ay - by === 0) ||\n    (ax - bx === 0 && ay - by === 1)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const randomNeighbor = (startX, startY) => {\n  const direction = sample(CARDINAL);\n  const x = startX + direction.x;\n  const y = startY + direction.y;\n  return { x, y };\n};\n\nexport const getNeighbor = (x, y, dir) => {\n  const dirMap = { N: 0, E: 1, S: 2, W: 3 };\n  const direction = CARDINAL[dirMap[dir]];\n  return {\n    x: x + direction.x,\n    y: y + direction.y,\n  };\n};\n\nexport const getDirection = (a, b) => {\n  const cellA = idToCell(a);\n  const cellB = idToCell(b);\n\n  const { x: ax, y: ay } = cellA;\n  const { x: bx, y: by } = cellB;\n\n  let dir;\n\n  if (ax - bx === 1 && ay - by === 0) dir = \"→\";\n  if (ax - bx === 0 && ay - by === -1) dir = \"↑\";\n  if (ax - bx === -1 && ay - by === 0) dir = \"←\";\n  if (ax - bx === 0 && ay - by === 1) dir = \"↓\";\n\n  return dir;\n};\n","import { compact, random } from \"lodash\";\nimport { rectangle, rectsIntersect, isOnMapEdge, randomNeighbor } from \"./grid\";\n\nfunction digHorizontalPassage(tiles, x1, x2, y) {\n  const start = Math.min(x1, x2);\n  const end = Math.max(x1, x2) + 1;\n  let x = start;\n\n  while (x < end) {\n    tiles[`${x},${y}`] = { x, y, sprite: \"FLOOR\" };\n    x++;\n  }\n}\n\nfunction digVerticalPassage(tiles, y1, y2, x) {\n  const start = Math.min(y1, y2);\n  const end = Math.max(y1, y2) + 1;\n  let y = start;\n\n  while (y < end) {\n    tiles[`${x},${y}`] = { x, y, sprite: \"FLOOR\" };\n    y++;\n  }\n}\n\nconst digDrunkenWalk = (x, y, tiles) => {\n  let loc = randomNeighbor(x, y);\n  // if new loc is a tile and not on the map edge\n  if (tiles[`${[loc.x]},${[loc.y]}`] && !isOnMapEdge(loc.x, loc.y)) {\n    tiles[`${loc.x},${loc.y}`] = {\n      x: loc.x,\n      y: loc.y,\n      sprite: \"CAVERN_FLOOR\",\n    };\n    return { x: loc.x, y: loc.y };\n  } else {\n    return { x, y };\n  }\n};\n\nexport const generateDungeon = ({\n  x,\n  y,\n  width,\n  height,\n  maxRoomCount,\n  minRoomSize,\n  maxRoomSize,\n}) => {\n  // fill the entire space with walls so we can dig it out later\n  const { tiles } = rectangle(\n    { x, y, width, height },\n    { sprite: \"WALL\", blocking: true, opaque: true }\n  );\n\n  const rooms = [];\n  let roomTiles = {};\n\n  for (let r of Array(maxRoomCount).keys()) {\n    let rw = random(minRoomSize, maxRoomSize);\n    let rh = random(minRoomSize, maxRoomSize);\n    let rx = random(x, width + x - rw - 1);\n    let ry = random(y, height + y - rh - 1);\n\n    // create a candidate room\n    // todo: perf - don't bother filling this in here - wait till it's accepted\n    const candidate = rectangle(\n      { x: rx, y: ry, width: rw, height: rh, hasWalls: true },\n      { sprite: \"FLOOR\", blocking: false, opaque: false }\n    );\n\n    if (!rooms.some((room) => rectsIntersect(room, candidate))) {\n      rooms[r] = candidate;\n      roomTiles = { ...roomTiles, ...candidate.tiles };\n    }\n  }\n\n  let prevRoom = null;\n\n  for (let room of compact(rooms)) {\n    if (prevRoom) {\n      const prev = prevRoom.center;\n      const curr = room.center;\n\n      if (random(0, 1)) {\n        digHorizontalPassage(tiles, prev.x, curr.x, curr.y);\n        digVerticalPassage(tiles, prev.y, curr.y, prev.x);\n      } else {\n        digVerticalPassage(tiles, prev.y, curr.y, prev.x);\n        digHorizontalPassage(tiles, prev.x, curr.x, curr.y);\n      }\n    }\n\n    prevRoom = room;\n  }\n\n  const processedTiles = { ...tiles, ...roomTiles };\n  let digLoc = { x: x + Math.floor(width / 2), y: Math.floor(y + height / 2) };\n\n  for (let i = 0; i < 1000; i++) {\n    digLoc = digDrunkenWalk(digLoc.x, digLoc.y, processedTiles);\n  }\n\n  const openTileIds = Object.keys(processedTiles).filter(\n    (tileId) => !processedTiles[tileId].blocking\n  );\n\n  return { tiles: processedTiles, start: rooms[0].center, openTileIds, rooms };\n};\n","import { get, random, sample, some, times } from \"lodash\";\nimport ecs, { cache } from \"../state/ecs\";\nimport { colors } from \"../lib/graphics\";\nimport { generateDungeon } from \"../lib/dungeon\";\nimport { grid } from \"../lib/canvas\";\nimport { cellToId, toCell, getNeighborIds } from \"../lib/grid\";\nimport CanDijkstra from \"../components/CanDijkstra\";\n\nconst initDungeonLevel = () => {\n  // create dungeon level\n  const dungeon = generateDungeon({\n    x: grid.map.x,\n    y: grid.map.y,\n    width: grid.map.width,\n    height: grid.map.height,\n    maxRoomCount: 30,\n    minRoomSize: 6,\n    maxRoomSize: 12,\n  });\n\n  Object.keys(dungeon.tiles).forEach((tileId) => {\n    const currTile = dungeon.tiles[tileId];\n\n    // Only make entities for tiles can be seen\n    if (\n      some(getNeighborIds(currTile, \"ALL\"), (locId) => {\n        return get(dungeon, `tiles.${locId}.sprite`, \"WALL\") !== \"WALL\";\n      })\n    ) {\n      let entity;\n\n      if (currTile.sprite === \"WALL\") {\n        entity = ecs.createPrefab(\"WallPrefab\", {\n          position: { x: currTile.x, y: currTile.y },\n        });\n        entity.appearance.color = sample(colors.wall);\n      }\n\n      if (currTile.sprite === \"FLOOR\") {\n        entity = ecs.createPrefab(\"FloorPrefab\", {\n          position: { x: currTile.x, y: currTile.y },\n        });\n        entity.appearance.color = sample(colors.floor);\n        entity.add(CanDijkstra);\n      }\n\n      if (currTile.sprite === \"CAVERN_FLOOR\") {\n        entity = ecs.createPrefab(\"FloorPrefab\", {\n          position: { x: currTile.x, y: currTile.y },\n        });\n        entity.appearance.color = sample(colors.cavernFloor);\n        entity.add(CanDijkstra);\n      }\n\n      const locId = cellToId(currTile);\n      cache.addSet(\"entitiesAtLocation\", locId, entity.id);\n    }\n  });\n\n  // add bonfires\n  dungeon.rooms.forEach((room, index) => {\n    if (index !== 0 && random(1, 3) === 1) {\n      const locId = cellToId(room.center);\n      // make sure the location is empty (only floor tiles should exist here...)\n      if (cache.readSet(\"entitiesAtLocation\", locId).size === 1) {\n        const entity = ecs.createPrefab(\"FountainPrefab\", {\n          position: room.center,\n        });\n\n        cache.addSet(\"entitiesAtLocation\", locId, entity.id);\n      }\n    }\n  });\n\n  // spawn monsters!\n  times(10, () => {\n    const locId = sample(dungeon.openTileIds);\n    if (cache.readSet(\"entitiesAtLocation\", locId).size === 1) {\n      const entity = ecs.createPrefab(\"GoblinPrefab\", {\n        position: toCell(locId),\n      });\n\n      cache.addSet(\"entitiesAtLocation\", locId, entity.id);\n    }\n  });\n\n  return dungeon;\n};\n\nexport default initDungeonLevel;\n","import ecs from \"../state/ecs\";\n\nimport Brain from \"../components/Brain\";\nimport Animate from \"../components/Animate\";\nimport Appearance from \"../components/Appearance\";\nimport IsBlocking from \"../components/IsBlocking\";\nimport IsInFov from \"../components/IsInFov\";\nimport IsOpaque from \"../components/IsOpaque\";\nimport IsRevealed from \"../components/IsRevealed\";\nimport Layer100 from \"../components/Layer100\";\nimport Layer300 from \"../components/Layer300\";\nimport Layer400 from \"../components/Layer400\";\nimport MoveTo from \"../components/MoveTo\";\nimport Position from \"../components/Position\";\nimport CanDijkstra from \"../components/CanDijkstra\";\n\nexport const aiEntities = ecs.createQuery({\n  all: [Brain],\n});\n\nexport const aiEntitiesInFov = ecs.createQuery({\n  all: [Brain, IsInFov],\n});\n\nexport const animatingEntities = ecs.createQuery({\n  all: [Animate, IsInFov],\n});\n\nexport const blockingEntities = ecs.createQuery({\n  all: [IsBlocking, Position],\n});\n\nexport const dijkstraAbleEntities = ecs.createQuery({\n  all: [CanDijkstra],\n});\n\nexport const inFovEntities = ecs.createQuery({\n  all: [IsInFov],\n});\n\nexport const layer100Entities = ecs.createQuery({\n  all: [Appearance, Layer100, Position],\n  any: [IsInFov, IsRevealed],\n});\n\nexport const layer300Entities = ecs.createQuery({\n  all: [Appearance, Layer300, Position],\n  any: [IsInFov, IsRevealed],\n});\n\nexport const layer400Entities = ecs.createQuery({\n  all: [Appearance, Layer400, Position],\n  any: [IsInFov],\n});\n\nexport const movableEntities = ecs.createQuery({\n  all: [MoveTo, Position],\n});\n\nexport const opaqueEntities = ecs.createQuery({\n  all: [IsOpaque],\n});\n\nexport const renderableEntities = ecs.createQuery({\n  all: [Position, Appearance],\n});\n","import { get } from \"lodash\";\nimport { cache } from \"../state/ecs\";\nimport { sample } from \"lodash\";\nimport { CARDINAL, toLocId, getNeighbors } from \"./grid\";\n\nexport const drunkenWalk = () => sample(CARDINAL);\n\nexport const walkDijkstra = (entity, dMapName) => {\n  const neighbors = getNeighbors(entity.position);\n\n  const inf = 1000000;\n  let score = inf;\n  let nextPosition = {};\n  neighbors.forEach((n) => {\n    const locId = toLocId(n);\n    const dScore = get(cache, `dijkstraMaps[${dMapName}][${locId}]`, inf);\n    if (dScore < score) {\n      score = dScore;\n      nextPosition = n;\n    }\n  });\n  return nextPosition;\n};\n","import { cache, player } from \"../state/ecs\";\nimport { aiEntities, aiEntitiesInFov } from \"../queries\";\nimport { drunkenWalk, walkDijkstra } from \"../lib/pathfinding\";\nimport { toLocId } from \"../lib/grid\";\n\nconst moveToPlayer = (entity) => {\n  const newLoc = walkDijkstra(entity, \"player\");\n  if (Object.keys(newLoc).length) {\n    if (entity.has(\"IsInFov\")) {\n      entity.add(\"MoveTo\", { ...newLoc, relative: false });\n    }\n  }\n};\n\nconst moveAwayFromPlayer = (entity) => {\n  const newLoc = walkDijkstra(entity, \"playerReverse\");\n  if (Object.keys(newLoc).length) {\n    if (entity.has(\"IsInFov\")) {\n      entity.add(\"MoveTo\", { ...newLoc, relative: false });\n    }\n  }\n};\n\nexport const ai = () => {\n  aiEntities.get().forEach((entity) => {\n    // if player is covered in blood - run away!\n    if (player.has(\"Soilage\")) {\n      console.log(\"covered in blood!\");\n      moveAwayFromPlayer(entity);\n    } else {\n      const distance = cache.readObj(\"dijkstraMaps\", \"player\")[\n        toLocId(entity.position)\n      ];\n\n      // should add a component of some sort that will track if an enemy has spotted the player.\n      // being in FOV is a cheap shortcut that only works so-so\n      if (distance > 4 || aiEntitiesInFov.get().size > 1) {\n        moveToPlayer(entity);\n      } else {\n        moveAwayFromPlayer(entity);\n      }\n    }\n  });\n};\n","import { distance, idToCell } from \"./grid\";\n\nconst octantTransforms = [\n  { xx: 1, xy: 0, yx: 0, yy: 1 },\n  { xx: 1, xy: 0, yx: 0, yy: -1 },\n  { xx: -1, xy: 0, yx: 0, yy: 1 },\n  { xx: -1, xy: 0, yx: 0, yy: -1 },\n  { xx: 0, xy: 1, yx: 1, yy: 0 },\n  { xx: 0, xy: 1, yx: -1, yy: 0 },\n  { xx: 0, xy: -1, yx: 1, yy: 0 },\n  { xx: 0, xy: -1, yx: -1, yy: 0 },\n];\n\n// width: width of map (or visible map?)\n// height: height of map (or visible map?)\nexport default function createFOV(\n  opaqueEntities,\n  width,\n  height,\n  originX,\n  originY,\n  radius\n) {\n  const visible = new Set();\n\n  const blockingLocations = new Set();\n  opaqueEntities\n    .get()\n    .forEach((x) => blockingLocations.add(`${x.position.x},${x.position.y}`));\n\n  const isOpaque = (x, y) => {\n    const locId = `${x},${y}`;\n    return !!blockingLocations.has(locId);\n  };\n  const reveal = (x, y) => {\n    return visible.add(`${x},${y}`);\n  };\n\n  function castShadows(originX, originY, row, start, end, transform, radius) {\n    let newStart = 0;\n    if (start < end) return;\n\n    let blocked = false;\n\n    for (let distance = row; distance < radius && !blocked; distance++) {\n      let deltaY = -distance;\n      for (let deltaX = -distance; deltaX <= 0; deltaX++) {\n        let currentX = originX + deltaX * transform.xx + deltaY * transform.xy;\n        let currentY = originY + deltaX * transform.yx + deltaY * transform.yy;\n\n        let leftSlope = (deltaX - 0.5) / (deltaY + 0.5);\n        let rightSlope = (deltaX + 0.5) / (deltaY - 0.5);\n\n        if (\n          !(\n            currentX >= 0 &&\n            currentY >= 0 &&\n            currentX < width &&\n            currentY < height\n          ) ||\n          start < rightSlope\n        ) {\n          continue;\n        } else if (end > leftSlope) {\n          break;\n        }\n\n        if (Math.sqrt(deltaX * deltaX + deltaY * deltaY) <= radius) {\n          reveal(currentX, currentY);\n        }\n\n        if (blocked) {\n          if (isOpaque(currentX, currentY)) {\n            newStart = rightSlope;\n            continue;\n          } else {\n            blocked = false;\n            start = newStart;\n          }\n        } else {\n          if (isOpaque(currentX, currentY) && distance < radius) {\n            blocked = true;\n            castShadows(\n              originX,\n              originY,\n              distance + 1,\n              start,\n              leftSlope,\n              transform,\n              radius\n            );\n            newStart = rightSlope;\n          }\n        }\n      }\n    }\n  }\n\n  reveal(originX, originY);\n  for (let octant of octantTransforms) {\n    castShadows(originX, originY, 1, 1, 0, octant, radius);\n  }\n\n  return {\n    fov: visible,\n    distance: [...visible].reduce((acc, val) => {\n      const cell = idToCell(val);\n      acc[val] = distance({ x: originX, y: originY }, { x: cell.x, y: cell.y });\n      return acc;\n    }, {}),\n  };\n}\n","import { some } from \"lodash\";\nimport ecs, { cache } from \"../state/ecs\";\nimport { toLocId, getNeighborIds, toCell } from \"./grid\";\n\n// goals: Array of { x, y } positions\nexport const dijkstra = (goals, weights = []) => {\n  const frontier = goals.map(toLocId);\n\n  const distance = frontier.reduce((acc, val, idx) => {\n    acc[val] = weights[idx] || 0;\n    return acc;\n  }, {});\n\n  while (frontier.length) {\n    const current = frontier.shift();\n\n    // current entity position component\n    const cell = toCell(current);\n    const neighborLocIds = getNeighborIds(cell);\n\n    neighborLocIds.forEach((neighborId) => {\n      if (!distance[neighborId]) {\n        const neighborIds = [\n          ...cache.readSet(\"entitiesAtLocation\", neighborId),\n        ];\n        if (\n          // check if location exists and is NOT blocking (no entity at location can be blocking AND brainless)\n          neighborIds &&\n          !some(neighborIds, (x) => {\n            return (\n              ecs.getEntity(x).has(\"IsBlocking\") &&\n              !ecs.getEntity(x).has(\"Brain\")\n            );\n          })\n        ) {\n          let dscore = distance[current] + 1;\n          distance[neighborId] = dscore;\n          frontier.push(neighborId);\n        }\n      }\n    });\n  }\n\n  // normalize goals to their weights or 0\n  goals.forEach((goal, idx) => {\n    const id = toLocId(goal);\n    distance[id] = weights[idx] || 0;\n  });\n\n  return distance;\n};\n\nexport const dijkstraReverse = (dMap, coeff = -1.2) => {\n  const dR = {};\n\n  Object.keys(dMap).forEach((x) => {\n    dR[x] = dMap[x] * coeff;\n  });\n\n  const goals = Object.keys(dR);\n  const weights = goals.map((x) => dR[x]);\n\n  return dijkstra(goals, weights);\n};\n","import { random, sample, times } from \"lodash\";\nimport { dijkstra, dijkstraReverse } from \"../lib/dijkstra\";\nimport ecs, { cache, player, gameState } from \"../state/ecs\";\nimport { chars, colors } from \"../lib/graphics\";\nimport { grid } from \"../lib/canvas\";\nimport { cellToId, getNeighborIds } from \"../lib/grid\";\nimport { movableEntities } from \"../queries\";\n\nconst kill = (entity) => {\n  entity.add(\"IsDead\");\n  entity.remove(\"Layer400\");\n  entity.add(\"Layer300\");\n  entity.remove(\"IsBlocking\");\n  entity.appearance.char = chars.corpse;\n  entity.remove(\"Brain\");\n};\n\nconst hit = (targetEntity) => {\n  targetEntity.fireEvent(\"take-damage\", { amount: 5 });\n\n  splatterBlood(targetEntity);\n\n  if (!targetEntity.has(\"Animate\")) {\n    targetEntity.add(\"Animate\", {\n      animation: {\n        type: \"color\",\n        stops: [\n          colors.damage,\n          targetEntity.appearance.currentColor || targetEntity.appearance.color,\n        ],\n      },\n    });\n  }\n};\n\nconst splatterBlood = (entity) => {\n  const neighborIds = getNeighborIds(entity.position, \"ALL\");\n  const locIds = [];\n\n  times(random(0, 8), () => locIds.push(sample(neighborIds)));\n\n  locIds.forEach((locId) => {\n    cache.readSet(\"entitiesAtLocation\", locId).forEach((x) => {\n      ecs.getEntity(x).add(\"Soilage\", {\n        // color: sample(colors.blood),\n        color: colors.blood[3],\n        name: \"blood\",\n        sourceEntityId: entity.id,\n        sourceName: entity.name.nomen,\n      });\n    });\n  });\n};\n\nconst bumpAttack = (targetEntity) => {\n  if (targetEntity.health) {\n    hit(targetEntity);\n\n    if (targetEntity.health.current <= 0) {\n      kill(targetEntity);\n    }\n  }\n};\n\nconst washInFountain = (targetEntity, fountain) => {\n  if (targetEntity.has(\"Soilage\")) {\n    if (fountain.has(\"Soilage\")) {\n      console.log(\"You can't clean yourself in this foul fountain\");\n    } else {\n      targetEntity\n        .get(\"Soilage\")\n        .forEach((x) => fountain.add(\"Soilage\", { ...x.serialize() }));\n      targetEntity.fireEvent(\"clean\");\n    }\n  }\n};\n\nexport const movement = () => {\n  movableEntities.get().forEach((entity) => {\n    let mPos = { x: entity.moveTo.x, y: entity.moveTo.y };\n    if (entity.moveTo.relative) {\n      mPos = {\n        x: entity.position.x + entity.moveTo.x,\n        y: entity.position.y + entity.moveTo.y,\n      };\n    }\n\n    const { width, height, x, y } = grid.map;\n\n    // observe map boundaries\n    const mx = Math.min(width + x - 1, Math.max(x, mPos.x));\n    const my = Math.min(height + y - 1, Math.max(y, mPos.y));\n\n    let blockers = [];\n\n    const locId = cellToId({ x: mx, y: my });\n    const entitiesAtLoc = cache.readSet(\"entitiesAtLocation\", locId);\n\n    entitiesAtLoc.forEach((eid) => {\n      const potentialBlocker = ecs.getEntity(eid);\n      if (potentialBlocker.isBlocking) {\n        blockers.push(potentialBlocker);\n      }\n    });\n\n    if (blockers.length) {\n      blockers.forEach((blocker) => {\n        // if has brain and not the same species - bump attack\n        if (blocker.brain && entity.name.nomen !== blocker.name.nomen) {\n          bumpAttack(blocker);\n        }\n\n        if (blocker.name.nomen === \"fountain\") {\n          washInFountain(entity, blocker);\n        }\n      });\n      return entity.remove(\"MoveTo\");\n    }\n\n    // update cache\n    cache.delete(\"entitiesAtLocation\", cellToId(entity.position), entity.id);\n    cache.addSet(\"entitiesAtLocation\", cellToId({ x: mx, y: my }), entity.id);\n\n    if (entity.id === player.id && gameState.playerTurn) {\n      const playerDijkstraMap = dijkstra([{ x: mx, y: my }]);\n      const playerReverse = dijkstraReverse(playerDijkstraMap);\n\n      cache.addObj(\"dijkstraMaps\", \"player\", playerDijkstraMap);\n      cache.addObj(\"dijkstraMaps\", \"playerReverse\", playerReverse);\n    }\n\n    entity.position.x = mx;\n    entity.position.y = my;\n\n    entity.remove(\"MoveTo\");\n  });\n};\n","import ecs, { cache } from \"../state/ecs\";\nimport { toCell } from \"../lib/grid\";\nimport { drawCell } from \"../lib/canvas\";\n\n// render dijkstra\nexport const renderDijkstra = (dMapName) => {\n  Object.keys(cache.dijkstraMaps[dMapName]).forEach((locId) => {\n    drawCell(\n      {\n        appearance: {\n          char: cache.dijkstraMaps.player[locId],\n          background: \"transparent\",\n        },\n        position: toCell(locId),\n      },\n      { fgA: 0.5, size: 16 }\n    );\n  });\n};\n\nexport const renderOmniscience = () => {\n  [...ecs.entities.all].forEach((entity) =>\n    drawCell(entity, {\n      fg: entity.appearance.currentColor || entity.appearance.color,\n    })\n  );\n};\n","import \"./lib/canvas.js\";\nimport { pxToCell } from \"./lib/canvas\";\nimport ecs, { cache, player, gameState } from \"./state/ecs\";\nimport { input, processUserInput } from \"./lib/process-user-input\";\nimport { cellToId } from \"./lib/grid\";\n\nimport initDungeonLevel from \"./initializers/dungeon-level.init\";\n\nimport { ai } from \"./systems/ai\";\nimport { animation } from \"./systems/animation\";\nimport { fov } from \"./systems/fov\";\nimport { movement } from \"./systems/movement\";\nimport { render } from \"./systems/render\";\n\nimport { animatingEntities } from \"./queries\";\n\ndocument.addEventListener(\"keydown\", (ev) => input(ev.key));\ndocument.querySelector(\"#loading\").classList.add(\"hide\");\n\nfunction initGame() {\n  const dungeon = initDungeonLevel();\n  player.position.x = dungeon.start.x;\n  player.position.y = dungeon.start.y;\n\n  cache.addSet(\"entitiesAtLocation\", cellToId(dungeon.start), player.id);\n}\n\ninitGame();\n\nfunction gameTick() {\n  if (!gameState.playerTurn) {\n    ai();\n  }\n  movement();\n  if (gameState.playerTurn) {\n    fov();\n  }\n  render();\n}\n\ngameTick();\n\nfunction update() {\n  if (animatingEntities.get().size) {\n    animation();\n  }\n\n  if (gameState.userInput && gameState.playerTurn && !player.isDead) {\n    processUserInput();\n    gameTick();\n    gameState.userInput = null;\n    gameState.turn = gameState.turn += 1;\n    gameState.playerTurn = false;\n  }\n\n  if (!gameState.playerTurn) {\n    gameTick();\n    gameState.playerTurn = true;\n  }\n}\n\nfunction gameLoop() {\n  update();\n  requestAnimationFrame(gameLoop);\n}\n\nrequestAnimationFrame(gameLoop);\n\n// it's a PITA to mock canvas in jest so we just hack it's running\nif (process.env.NODE_ENV !== \"test\") {\n  const canvas = document.querySelector(\"#canvas\");\n\n  canvas.onclick = (e) => {\n    const [x, y] = pxToCell(e);\n    const locId = cellToId({ x, y });\n\n    cache\n      .readSet(\"entitiesAtLocation\", locId)\n      .forEach((eId) => console.log(ecs.getEntity(eId).serialize()));\n  };\n}\n","import { colors } from \"../lib/graphics\";\nimport { clearCanvas, drawCell } from \"../lib/canvas\";\nimport {\n  layer100Entities,\n  layer300Entities,\n  layer400Entities,\n} from \"../queries\";\n\nimport { renderOmniscience } from \"../lib/debug\";\n\nconst drawCellIfAble = (entity) => {\n  const { appearance, isInFov, isRevealed } = entity;\n\n  if (isInFov) {\n    drawCell(entity, { fg: appearance.currentColor || appearance.color });\n  }\n\n  if (isRevealed && !isInFov) {\n    drawCell(entity, {\n      fg: colors.revealedColor,\n    });\n  }\n};\n\nexport const render = () => {\n  clearCanvas();\n\n  layer100Entities.get().forEach((entity) => drawCellIfAble(entity));\n\n  // renderOmniscience();\n\n  layer300Entities.get().forEach((entity) => drawCellIfAble(entity));\n  layer400Entities.get().forEach((entity) => drawCellIfAble(entity));\n};\n","import ecs, { cache, player } from \"../state/ecs\";\nimport { grid } from \"../lib/canvas\";\nimport createFOV from \"../lib/fov\";\n\nimport IsInFov from \"../components/IsInFov\";\nimport IsRevealed from \"../components/IsRevealed\";\n\nimport { inFovEntities, opaqueEntities } from \"../queries\";\n\nexport const fov = () => {\n  const { width, height } = grid;\n\n  const originX = player.position.x;\n  const originY = player.position.y;\n\n  const FOV = createFOV(opaqueEntities, width, height, originX, originY, 10);\n\n  // clear out stale fov\n  inFovEntities.get().forEach((x) => x.remove(IsInFov));\n\n  FOV.fov.forEach((locId) => {\n    const entitiesAtLoc = cache.readSet(\"entitiesAtLocation\", locId);\n\n    if (entitiesAtLoc) {\n      entitiesAtLoc.forEach((eId) => {\n        const entity = ecs.getEntity(eId);\n        entity.add(IsInFov);\n\n        if (!entity.has(\"IsRevealed\")) {\n          entity.add(IsRevealed);\n        }\n      });\n    }\n  });\n};\n","import ecs from \"../state/ecs\";\n\nimport { clearCell, drawCell } from \"../lib/canvas\";\nimport { animatingEntities } from \"../queries\";\n\nexport const animation = () => {\n  animatingEntities.get().forEach((entity) => {\n    const time = new Date();\n\n    // set animation startTime\n    if (!entity.animate.startTime) {\n      entity.fireEvent(\"set-start-time\", { time });\n    }\n\n    const frameTime = time - entity.animate.startTime;\n\n    // end animation when complete\n    if (frameTime > entity.animate.duration) {\n      return entity.remove(\"Animate\");\n    }\n\n    const framePercent = frameTime / entity.animate.duration;\n\n    // do the animation\n    // clear the cell first\n    clearCell(entity.position.x, entity.position.y);\n\n    if (entity.animate.animation.type === \"color\") {\n      // drawEndFrame\n      drawCell(entity, {\n        fg: entity.animate.animation.stops[0],\n      });\n      // drawStartFrame\n      drawCell(entity, {\n        fg: entity.animate.animation.stops[1],\n        fgA: framePercent,\n        bg: \"transparent\",\n      });\n    }\n  });\n};\n","import MoveTo from \"../components/MoveTo\";\nimport { gameState, player, loadGame, saveGame } from \"../state/ecs\";\n\nexport const input = (key) => {\n  switch (key) {\n    case \"L\":\n      gameState.userInput = { key, type: \"LOAD\", payload: {} };\n      break;\n    case \"S\":\n      gameState.userInput = { key, type: \"SAVE\", payload: {} };\n      break;\n    case \"c\":\n      gameState.userInput = { key, type: \"CLEAN\", payload: {} };\n      break;\n    case \"z\":\n      gameState.userInput = { key, type: \"REST\", payload: {} };\n      break;\n    case \"ArrowUp\":\n      gameState.userInput = { key, type: \"MOVE\", payload: { x: 0, y: -1 } };\n      break;\n    case \"ArrowDown\":\n      gameState.userInput = { key, type: \"MOVE\", payload: { x: 0, y: 1 } };\n      break;\n    case \"ArrowLeft\":\n      gameState.userInput = { key, type: \"MOVE\", payload: { x: -1, y: 0 } };\n      break;\n    case \"ArrowRight\":\n      gameState.userInput = { key, type: \"MOVE\", payload: { x: 1, y: 0 } };\n      break;\n    case \"Escape\": {\n      gameState.userInput = { key, type: \"ESCAPE\", payload: {} };\n      break;\n    }\n  }\n};\n\nexport const processUserInput = () => {\n  if (!gameState.userInput) {\n    return;\n  }\n\n  const { key, type, payload } = gameState.userInput;\n\n  if (type === \"CLEAN\") {\n    player.fireEvent(\"clean\");\n  }\n\n  if (type === \"MOVE\") {\n    player.add(MoveTo, payload);\n  }\n\n  if (type === \"SAVE\") {\n    saveGame();\n  }\n\n  if (type === \"LOAD\") {\n    loadGame();\n  }\n};\n"],"sourceRoot":""}